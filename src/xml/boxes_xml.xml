inline const char* boxes_xml = R"===(<?xml version="1.0"?>
<!DOCTYPE GeneratorDefinitions SYSTEM "gen.dtd">
<GeneratorDefinitions>
	<gen class="wxComboBox" image="wxComboBox" type="widget">
		<inherits class="Choice Validator" />
		<inherits class="wxWindow" />
		<inherits class="Window Events" />
		<inherits class="sizer_child" />
		<property name="var_name" type="string">m_comboBox</property>
		<property name="hint" type="string_escapes"
			help="Sets a hint to be shown when the text field is empty and does not have the focus." />
		<property name="contents" type="stringlist"
			help="Contents of the Combo Box" />
		<property name="selection_string" type="string_escapes"
			help="Selects the item with the specified string in the control. Note that this is case-insensitive, i.e. the string is compared with all the elements of the control case-insensitively and the first matching entry is selected, even if it doesn't have exactly the same case as this string and there is an exact match afterwards." />
		<property name="selection_int" type="int"
			help="Sets the selection to the value unless it is -1. Ignored if the selection_string property contains a value.">-1</property>
		<property name="style" type="bitlist">
			<option name="wxCB_SIMPLE"
				help="Creates a combobox with a permanently displayed list. Windows only." />
			<option name="wxCB_DROPDOWN"
				help="Creates a combobox with a drop-down list. Windows and Motif only." />
			<option name="wxCB_READONLY"
				help="A combobox with this style behaves like a wxChoice (and may look in the same way as well, although this is platform-dependent). It allows the user to choose from the list of options but doesn't allow the user to enter a value not present in the list." />
			<option name="wxCB_SORT"
				help="Sorts the entries alphabetically." />
			<option name="wxTE_PROCESS_ENTER"
				help="The control will generate the event wxEVT_TEXT_ENTER (otherwise pressing Enter key is either processed internally by the control or used for navigation between dialog controls)." />
		</property>
		<property name="focus" type="bool"
			help="When checked, this control will be set to receive keyboard input when the parent form is first created.">0</property>
		<event name="wxEVT_COMBOBOX" class="wxCommandEvent"
			help="Generated when an item on the list is selected. Call GetValue() to return the new value of the selection." />
		<event name="wxEVT_TEXT" class="wxCommandEvent"
			help="Generated when the combobox text changes." />
		<event name="wxEVT_TEXT_ENTER" class="wxCommandEvent"
			help="Generated when &lt;RETURN> is pressed in the combobox." />
		<event name="wxEVT_COMBOBOX_DROPDOWN" class="wxCommandEvent"
			help="Generated when the list box part of the combo box is shown (drops down). Notice that this event is only supported by Windows, wxGTK with GTK+ 2.10 or later, and wxOSX/Cocoa." />
		<event name="wxEVT_COMBOBOX_CLOSEUP" class="wxCommandEvent"
			help="Generated when the list box of the combo box closes up. This event is only generated for the same platforms as wxEVT_COMBOBOX_DROPDOWN above. Also note that only Windows and wxOSX/Cocoa support adding or deleting items in this event." />
	</gen>

	<gen class="wxBitmapComboBox" image="bmp_combo_box" type="widget">
		<inherits class="Choice Validator" />
		<inherits class="wxWindow" />
		<inherits class="Window Events" />
		<inherits class="sizer_child" />
		<property name="var_name" type="string">m_bmpComboBox</property>
		<property name="hint" type="string_escapes"
			help="Sets a hint to be shown when the text field is empty and does not have the focus." />
		<property name="contents" type="stringlist"
			help="Contents of the Combo Box" />
		<property name="selection_string" type="string_escapes"
			help="Selects the item with the specified string in the control. Note that this is case-insensitive, i.e. the string is compared with all the elements of the control case-insensitively and the first matching entry is selected, even if it doesn't have exactly the same case as this string and there is an exact match afterwards." />
		<property name="selection_int" type="int"
			help="Sets the selection to the value unless it is -1. Ignored if the selection_string property contains a value.">-1</property>
		<property name="style" type="bitlist">
			<option name="wxCB_READONLY"
				help="Creates a combobox without a text editor. On some platforms the control may appear very different when this style is used." />
			<option name="wxCB_SORT"
				help="Sorts the entries alphabetically." />
			<option name="wxTE_PROCESS_ENTER"
				help="The control will generate the event wxEVT_TEXT_ENTER (otherwise pressing Enter key is either processed internally by the control or used for navigation between dialog controls). Windows only." />
		</property>
		<property name="focus" type="bool"
			help="When checked, this control will be set to receive keyboard input when the parent form is first created.">0</property>
		<event name="wxEVT_COMBOBOX" class="wxCommandEvent"
			help="Generated when an item in the list is selected. Calling GetValue() to return the new value of the selection." />
		<event name="wxEVT_TEXT" class="wxCommandEvent"
			help="Generated when the combobox text changes." />
		<event name="wxEVT_TEXT_ENTER" class="wxCommandEvent"
			help="Generated when &lt;RETURN> is pressed in the combobox." />
	</gen>

	<gen class="wxChoice" image="wxChoice" type="widget">
		<inherits class="Choice Validator" />
		<inherits class="wxWindow" />
		<inherits class="Window Events" />
		<inherits class="sizer_child" />
		<property name="var_name" type="string">m_choice</property>
		<property name="contents" type="stringlist"
			help="Array of strings used to initialize the choice control." />
		<property name="selection_string" type="string_escapes"
			help="Selects the item with the specified string in the control. Note that this is case-insensitive, i.e. the string is compared with all the elements of the control case-insensitively and the first matching entry is selected, even if it doesn't have exactly the same case as this string and there is an exact match afterwards." />
		<property name="selection_int" type="int"
			help="Sets the selection to the value unless it is -1. Ignored if the selection_string property contains a value.">-1</property>
		<property name="style" type="bitlist">
			<option name="wxCB_SORT"
				help="Sorts the entries alphabetically." />
		</property>
		<property name="focus" type="bool"
			help="When checked, this control will be set to receive keyboard input when the parent form is first created.">0</property>
		<event name="wxEVT_CHOICE" class="wxCommandEvent"
			help="Generated when an item in the list is selected." />
	</gen>

	<gen class="wxListBox" image="wxListBox" type="widget">
		<inherits class="List Validator" />
		<inherits class="wxWindow" />
		<inherits class="Window Events" />
		<inherits class="sizer_child" />
		<property name="var_name" type="string">m_listbox</property>
		<property name="contents" type="stringlist"
			help="Contents of the List Box." />
		<property name="selection_string" type="string_escapes"
			help="Selects the item with the specified string in the control. Note that this is case-insensitive, i.e. the string is compared with all the elements of the control case-insensitively and the first matching entry is selected, even if it doesn't have exactly the same case as this string and there is an exact match afterwards." />
		<property name="selection_int" type="int"
			help="Sets the selection to the value unless it is -1. Ignored if the selection_string property contains a value.">-1</property>
		<property name="type" type="option">
			<option name="wxLB_SINGLE"
				help="Single-selection list." />
			<option name="wxLB_MULTIPLE"
				help="Multiple-selection list: the user can toggle multiple items on and off. This is the same as wxLB_EXTENDED in wxGTK2 port." />
			<option name="wxLB_EXTENDED"
				help="Extended-selection list: the user can extend the selection by using SHIFT or CTRL keys together with the cursor movement keys or the mouse." />
			wxLB_SINGLE
		</property>
		<property name="style" type="bitlist">
			<option name="wxLB_HSCROLL"
				help="Create a horizontal scrollbar if contents are too wide (Windows only)." />
			<option name="wxLB_ALWAYS_SB"
				help="Always show a vertical scrollbar." />
			<option name="wxLB_NEEDED_SB"
				help="Only create a vertical scrollbar if needed." />
			<option name="wxLB_NO_SB"
				help="Don't create a vertical scrollbar (Windows only)." />
			<option name="wxLB_SORT"
				help="The listbox contents are sorted in alphabetical order." />
		</property>
		<property name="focus" type="bool"
			help="When checked, this control will be set to receive keyboard input when the parent form is first created.">0</property>
		<event name="wxEVT_LISTBOX" class="wxCommandEvent"
			help="Generated when an item in the list is selected." />
		<event name="wxEVT_LISTBOX_DCLICK" class="wxCommandEvent"
			help="Generated when the listbox is double-clicked." />
	</gen>

	<gen class="wxSimpleHtmlListBox" image="wxSimpleHtmlListBox" type="widget">
		<inherits class="wxWindow">
			<property name="proportion" type="uint">1</property>
			<property name="flags" type="bitlist">wxEXPAND</property>
		</inherits>
		<inherits class="Window Events" />
		<inherits class="sizer_child" />
		<property name="var_name" type="string">m_html_listbox</property>
		<property name="contents" type="stringlist"
			help="Contents of the HTML list box." />
		<property name="selection_string" type="string_escapes"
			help="Selects the item with the specified string in the control. Note that this is case-insensitive, i.e. the string is compared with all the elements of the control case-insensitively and the first matching entry is selected, even if it doesn't have exactly the same case as this string and there is an exact match afterwards." />
		<property name="selection_int" type="int"
			help="Sets the selection to the value unless it is -1. Ignored if the selection_string property contains a value.">-1</property>
		<property name="style" type="bitlist">
			<option name="wxHLB_DEFAULT_STYLE"
				help="The default style: wxBORDER_SUNKEN." />
			<option name="wxHLB_MULTIPLE"
				help="Multiple-selection list: the user can toggle multiple items on and off." />
			wxHLB_DEFAULT_STYLE
		</property>
		<property name="focus" type="bool"
			help="When checked, this control will be set to receive keyboard input when the parent form is first created.">0</property>
		<event name="wxEVT_LISTBOX" class="wxCommandEvent"
			help="Generated when an item in the list is selected." />
		<event name="wxEVT_LISTBOX_DCLICK" class="wxCommandEvent"
			help="Generated when the listbox is double-clicked." />
		<event name="EVT_HTML_CELL_CLICKED" class="wxHtmlCellEvent"
			help="A wxHtmlCell was clicked." />
		<event name="EVT_HTML_CELL_HOVER" class="wxHtmlCellEvent"
			help="The mouse passed over a wxHtmlCell." />
		<event name="EVT_HTML_LINK_CLICKED" class="wxHtmlCellEvent"
			help="A wxHtmlCell which contains a hyperlink was clicked." />
	</gen>

	<gen class="wxCheckListBox" image="wxCheckListBox" type="widget">
		<inherits class="List Validator" />
		<inherits class="wxWindow" />
		<inherits class="Window Events" />
		<inherits class="sizer_child" />
		<property name="var_name" type="string">m_checkList</property>
		<property name="selection_string" type="string_escapes"
			help="Selects the item with the specified string in the control. Note that this is case-insensitive, i.e. the string is compared with all the elements of the control case-insensitively and the first matching entry is selected, even if it doesn't have exactly the same case as this string and there is an exact match afterwards." />
		<property name="selection_int" type="int"
			help="Sets the selection to the value unless it is -1. Ignored if the selection_string property contains a value.">-1</property>
		<property name="contents" type="checklist_item"
			help="List of default values and their checked state." />
		<property name="type" type="option">
			<option name="wxLB_SINGLE"
				help="Single-selection list." />
			<option name="wxLB_MULTIPLE"
				help="Multiple-selection list: the user can toggle multiple items on and off. This is the same as wxLB_EXTENDED in wxGTK2 port." />
			<option name="wxLB_EXTENDED"
				help="Extended-selection list: the user can extend the selection by using SHIFT or CTRL keys together with the cursor movement keys or the mouse." />
			wxLB_SINGLE
		</property>
		<property name="style" type="bitlist">
			<option name="wxLB_HSCROLL"
				help="Create a horizontal scrollbar if contents are too wide (Windows only)." />
			<option name="wxLB_ALWAYS_SB"
				help="Always show a vertical scrollbar." />
			<option name="wxLB_NEEDED_SB"
				help="Only create a vertical scrollbar if needed." />
			<option name="wxLB_NO_SB"
				help="Don't create a vertical scrollbar (Windows only)." />
			<option name="wxLB_SORT"
				help="The listbox contents are sorted in alphabetical order." />
		</property>
		<property name="focus" type="bool"
			help="When checked, this control will be set to receive keyboard input when the parent form is first created.">0</property>
		<event name="wxEVT_CHECKLISTBOX" class="wxCommandEvent"
			help="Generated when an item in the check list box is checked or unchecked." />
		<event name="wxEVT_LISTBOX" class="wxCommandEvent"
			help="Generated when an item in the list is selected." />
		<event name="wxEVT_LISTBOX_DCLICK" class="wxCommandEvent"
			help="Generated when the listbox is double-clicked." />
	</gen>

	<gen class="wxRadioBox" image="radio_box" type="widget">
		<inherits class="Integer Validator" />
		<inherits class="wxWindow" />
		<inherits class="Window Events" />
		<inherits class="sizer_child" />
		<property name="var_name" type="string">m_radioBox</property>
		<property name="label" type="string_escapes">My Radio Box</property>
		<property name="contents" type="stringlist"
			help="Contents of the Radio Box. On Windows, the last character may be clipped unless you include a trailing space.">"Radio Button "</property>
		<property name="selection" type="uint"
			help="Zero-based position of the selected button.">0</property>
		<property name="majorDimension" type="uint"
			help="Specifies the maximum number of rows (if style contains wxRA_SPECIFY_ROWS) or columns (if style contains wxRA_SPECIFY_COLS) for a two-dimensional radiobox. A value of zero will use as many rows or columns as there are radio buttons.">0</property>
		<property name="style" type="option">
			<option name="rows"
				help="Buttons are arranged vertically (in rows)." />
			<option name="columns"
				help="Buttons are arranged horizontally (in columns).." />
			columns
		</property>
		<event name="wxEVT_RADIOBOX" class="wxCommandEvent"
			help="Generated when a radio button in the box is clicked." />
	</gen>

	<gen class="wxStaticBox" image="wxStaticBoxSizer" type="staticbox">
		<inherits class="wxWindow" />
		<inherits class="sizer_child" />
		<property name="var_name" type="string">m_static_box</property>
		<property name="label" type="string_escapes">label</property>
	</gen>
</GeneratorDefinitions>)===";
