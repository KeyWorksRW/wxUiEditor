<?xml version="1.0"?>
<GeneratorDefitions>
  <compinfo class="sizer_dimension" type="interface">
    <property name="minimum_size" type="wxSize"
        help="Normally, the sizer will calculate its minimal size based purely on how much space its children need. If the minimal size is > 0, 'GetMinSize' will return either the minimal size as requested by its children or the minimal size set here, depending on which is bigger."/>
  </compinfo>

  <compinfo class="sizeritem_settings" type="interface">
    <property name="alignment" type="bitlist">
      <option name="wxALIGN_LEFT"
        help="Align the item to the left of the space allotted to it by the sizer, adjusted for the border if any."/>
      <option name="wxALIGN_TOP"
        help="Align the item to the top of the space allotted to it by the sizer, adjusted for the border if any."/>
      <option name="wxALIGN_RIGHT"
        help="Align the item to the right of the space allotted to it by the sizer, adjusted for the border if any."/>
      <option name="wxALIGN_BOTTOM"
        help="Align the item to the bottom of the space allotted to it by the sizer, adjusted for the border if any."/>
      <option name="wxALIGN_CENTER"
        help="Align the item to the center of the space allotted to it by the sizer, adjusted for the border if any."/>
      <option name="wxALIGN_CENTER_HORIZONTAL" help="Align the item to the horizontal center of the space allotted to it by the sizer, adjusted for the border if any."/>
      <option name="wxALIGN_CENTER_VERTICAL"
        help="Align the item to the vertical center of the space allotted to it by the sizer, adjusted for the border if any."/>
    </property>
    <property name="borders" type="bitlist">
      <option name="wxALL" help="Enable all borders"/>
      <option name="wxLEFT" help="Enable the left border"/>
      <option name="wxRIGHT" help="Enable the right border"/>
      <option name="wxTOP" help="Enable the top border"/>
      <option name="wxBOTTOM" help="Enable the bottom border"/>
      wxALL
    </property>
    <property name="border_size" type="uint"
        help="Sets the border size, if the flag parameter is set to include any border flag. The default value of 5 will be scaled on high DPI displayes.">5</property>
    <property name="flags" type="bitlist">
      <option name="wxEXPAND" help="The item will be expanded to fill the space assigned to the item."/>
      <option name="wxSHAPED" help="The item will be expanded as much as possible while also maintaining its aspect ratio."/>
      <option name="wxFIXED_MINSIZE"
        help="Normally wxSizers will use GetAdjustedBestSize to determine what the minimal size of window items should be, and will use that size to calculate the layout. This allows layouts to adjust when an item changes and its best size becomes different. If you would rather have a window item stay the size it started with then use wxFIXED_MINSIZE."/>
      <option name="wxRESERVE_SPACE_EVEN_IF_HIDDEN"
        help="Normally wxSizers don't allocate space for hidden windows or other items. This flag overrides this behaviour so that sufficient space is allocated for the window even if it isn't visible. This makes it possible to dynamically show and hide controls without resizing the parent window."/>
    </property>
  </compinfo>

  <compinfo class="sizeritem" type="sizeritem">
    <inherits class="sizeritem_settings"/>
    <property name="proportion" type="uint">0</property>
  </compinfo>

  <compinfo class="gbsizeritem" type="gbsizeritem">
    <inherits class="sizeritem_settings"/>
    <property name="row" type="int">0</property>
    <property name="column" type="int">0</property>
    <property name="rowspan" type="int">1</property>
    <property name="colspan" type="int">1</property>
  </compinfo>

  <compinfo class="splitteritem" type="splitteritem">
  </compinfo>

  <compinfo class="wxBoxSizer" image="sizer_horizontal" type="sizer">
    <inherits class="sizer_dimension"/>
    <inherits class="sizer_child"/>
    <property name="var_name" type="string">box_sizer</property>
    <property name="class_access" type="option">
      <option name="none"/>
      <option name="protected:"/>
      <option name="public:"/>
      none
    </property>
    <property name="orientation" type="option">
      <option name="wxVERTICAL" help="Align items vertically"/>
      <option name="wxHORIZONTAL" help="Align items horizontally"/>
      wxHORIZONTAL
    </property>
  </compinfo>

  <compinfo class="VerticalBoxSizer" image="sizer" type="sizer">
    <inherits class="sizer_dimension"/>
    <inherits class="sizer_child"/>
    <property name="var_name" type="string">box_sizer</property>
    <property name="class_access" type="option">
      <option name="none"/>
      <option name="protected:"/>
      <option name="public:"/>
      none
    </property>
    <property name="orientation" type="option">
      <option name="wxVERTICAL" help="Align items vertically"/>
      <option name="wxHORIZONTAL" help="Align items horizontally"/>
      wxVERTICAL
    </property>
  </compinfo>

  <compinfo class="wxStaticBoxSizer" image="wxStaticBoxSizer" type="sizer">
    <inherits class="sizer_dimension"/>
    <inherits class="sizer_child"/>
    <property name="var_name" type="string">static_box</property>
    <property name="class_access" type="option">
      <option name="none"/>
      <option name="protected:"/>
      <option name="public:"/>
      none
    </property>
    <property name="label" type="string_escapes">label</property>
    <property name="orientation" type="option">
      <option name="wxVERTICAL" help="Align items vertically"/>
      <option name="wxHORIZONTAL" help="Align items horizontally"/>
      wxVERTICAL
    </property>
    <property name="id" type="id">wxID_ANY</property>
    <property name="disabled" type="bool"
        help="Disable all of the sizer's children.">
      0
    </property>
    <property name="hidden" type="bool"
        help="Hides the sizer and it's children.">
      0
    </property>
    <event name="wxEVT_UPDATE_UI" class="wxUpdateUIEvent" help=""/>
  </compinfo>

  <compinfo class="StaticCheckboxBoxSizer" image="wxStaticCheckBoxSizer" type="sizer">
    <inherits class="sizer_dimension"/>
    <inherits class="sizer_child"/>
    <property name="var_name" type="string">static_box</property>
    <property name="class_access" type="option">
      <option name="none"/>
      <option name="protected:"/>
      <option name="public:"/>
      none
    </property>
    <property name="checkbox_var_name" type="string">m_checkBox</property>
    <property name="label" type="string_escapes">label</property>
    <property name="checked" type="bool">1</property>
    <property name="style" type="bitlist">
      <option name="wxALIGN_RIGHT"
        help="Aligns the checkbox to the right of the text instead of the left."/>
    </property>
    <property name="orientation" type="option">
      <option name="wxVERTICAL" help="Align items vertically"/>
      <option name="wxHORIZONTAL" help="Align items horizontally"/>
      wxVERTICAL
    </property>
    <property name="id" type="id">wxID_ANY</property>
    <property name="tooltip" type="string_edit_escapes"
        help="Attach a tooltip to the checkbox label."/>
    <property name="disabled" type="bool"
        help="Disable all of the sizer's children, but not the checkbox label.">
      0
    </property>
    <property name="hidden" type="bool"
        help="Hides the sizer and it's children.">
      0
    </property>
    <event name="wxEVT_UPDATE_UI" class="wxUpdateUIEvent" help=""/>
    <event name="wxEVT_CHECKBOX" class="wxCommandEvent" help="Generated when the checkbox is clicked."/>
  </compinfo>

  <compinfo class="StaticRadioBtnBoxSizer" image="wxStaticRadioBtnSizer" type="sizer">
    <inherits class="sizer_dimension"/>
    <inherits class="sizer_child"/>
    <property name="var_name" type="string">static_box</property>
    <property name="class_access" type="option">
      <option name="none"/>
      <option name="protected:"/>
      <option name="public:"/>
      none
    </property>
    <property name="radiobtn_var_name" type="string">m_radioBtn</property>
    <property name="label" type="string_escapes">label</property>
    <property name="checked" type="bool">1</property>
    <property name="orientation" type="option">
      <option name="wxVERTICAL" help="Align items vertically"/>
      <option name="wxHORIZONTAL" help="Align items horizontally"/>
      wxVERTICAL
    </property>
    <property name="id" type="id">wxID_ANY</property>
    <property name="tooltip" type="string_edit_escapes"
        help="Attach a tooltip to the radio button label."/>
    <property name="disabled" type="bool"
        help="Disable all of the sizer's children, but not the radio button label.">
      0
    </property>
    <property name="hidden" type="bool"
        help="Hides the sizer and it's children.">
      0
    </property>
    <event name="wxEVT_UPDATE_UI" class="wxUpdateUIEvent" help=""/>
    <event name="wxEVT_RADIOBUTTON" class="wxCommandEvent" help="Generated when the radio button is clicked."/>
  </compinfo>

  <compinfo class="wxWrapSizer" image="wrap_sizer" type="sizer">
    <inherits class="sizer_dimension"/>
    <inherits class="sizer_child"/>
    <property name="var_name" type="string">wrap_sizer</property>
    <property name="class_access" type="option">
      <option name="none"/>
      <option name="protected:"/>
      <option name="public:"/>
      none
    </property>
    <property name="orientation" type="option">
      <option name="wxVERTICAL" help="Align items vertically"/>
      <option name="wxHORIZONTAL" help="Align items horizontally"/>
      wxHORIZONTAL
    </property>
    <property name="wrap_flags" type="bitlist">
      <option name="wxEXTEND_LAST_ON_EACH_LINE" help="The last item on each line will use any remaining space on that line"/>
      <option name="wxREMOVE_LEADING_SPACES" help="Removes any spacer elements from the beginning of a row"/>
      wxEXTEND_LAST_ON_EACH_LINE|wxREMOVE_LEADING_SPACES
    </property>
  </compinfo>

  <compinfo class="wxGridSizer" image="grid_sizer" type="sizer">
    <inherits class="sizer_dimension"/>
    <inherits class="sizer_child"/>
    <property name="var_name" type="string">grid_sizer</property>
    <property name="class_access" type="option">
      <option name="none"/>
      <option name="protected:"/>
      <option name="public:"/>
      none
    </property>
    <property name="rows" type="uint"
        help="Number of Rows. If '0', wxWidgets will automatically calculate the number of rows required to hold the supplied items.">
      0
    </property>
    <property name="cols" type="uint"
        help="Number of Columns. If row is not zero, cols can be set to '0' to have wxWidgets automtaically calculate the number of columns required.">
      2
    </property>
    <property name="vgap" type="uint"
        help="The vertical gap (in pixels) between the cells in the sizer.">
      0
    </property>
    <property name="hgap" type="uint"
        help="The horizontal gap (in pixels) between cells in the sizer.">
      0
    </property>
  </compinfo>

  <compinfo class="flexgridsizerbase" image="flex_grid_sizer" type="interface">
    <property name="vgap" type="uint"
        help="The vertical gap (in pixels) between the cells in the sizer.">
      0
    </property>
    <property name="hgap" type="uint"
        help="The horizontal gap (in pixels) between cells in the sizer.">
      0
    </property>
    <property name="growablerows" type="uintpairlist"
        help="Comma separated list of row indices (starting from zero, optional proportion appended after a colon) that should be grown if there is extra space available to the sizer."/>
    <property name="growablecols" type="uintpairlist"
        help="Comma separated list of column indices (starting from zero, optional proportion appended after a colon) that should be grown if there is extra space available to the sizer."/>
    <property name="flexible_direction" type="option"
        help="wxFlexGridSizer can size items equally in one direction but unequally ('flexibly') in the other">
      <option name="wxVERTICAL" help="Rows are flexibly sized."/>
      <option name="wxHORIZONTAL" help="Columns are flexibly sized."/>
      <option name="wxBOTH" help="Both rows and columns are flexibly sized (this is the default value)."/>
      wxBOTH
    </property>
    <property name="non_flexible_grow_mode" type="option"
        help="If the sizer is only flexible in one direction (this can be changed using 'flexible_direction'), it needs to be decided how the sizer should grow in the other ('non flexible') direction in order to fill the available space.">
      <option name="wxFLEX_GROWMODE_NONE" help="Sizer doesn't grow in the non flexible direction."/>
      <option name="wxFLEX_GROWMODE_SPECIFIED"
        help="Sizer honors growable columns/rows set with AddGrowableCol and AddGrowableRow. In this case equal sizing applies to minimum sizes of columns or rows (this is the default value)."/>
      <option name="wxFLEX_GROWMODE_ALL"
        help="Sizer equally stretches all columns or rows in the non flexible direction, whether they are growable or not in the flexible direction."/>
      wxFLEX_GROWMODE_SPECIFIED
    </property>
  </compinfo>

  <compinfo class="wxFlexGridSizer" image="flex_grid_sizer" type="sizer">
    <inherits class="sizer_dimension"/>
    <inherits class="flexgridsizerbase"/>
    <inherits class="sizer_child"/>
    <property name="var_name" type="string">flex_grid_sizer</property>
    <property name="class_access" type="option">
      <option name="none"/>
      <option name="protected:"/>
      <option name="public:"/>
      none
    </property>
    <property name="rows" type="uint"
        help="Number of Rows. '0' tells wxWidgets to calculate the number of rows required to hold the supplied items. If you choose to fix the row number, set the 'cols' figure to zero instead.">
      0
    </property>
    <property name="cols" type="uint"
        help="Number of Columns">
      2
    </property>
  </compinfo>

  <compinfo class="wxGridBagSizer" image="grid_bag_sizer" type="gbsizer">
    <inherits class="sizer_dimension"/>
    <inherits class="flexgridsizerbase"/>
    <inherits class="sizer_child"/>
    <property name="var_name" type="string">grid_bag_sizer</property>
    <property name="class_access" type="option">
      <option name="none"/>
      <option name="protected:"/>
      <option name="public:"/>
      none
    </property>
    <property name="empty_cell_size" type="wxSize"
        help="The size used for cells in the grid with no item."/>
  </compinfo>

  <compinfo class="wxStdDialogButtonSizer" image="stddialogbuttonsizer" type="widget">
    <inherits class="sizer_dimension"/>
    <inherits class="sizer_child"/>
    <inherits class="Update Events"/>
    <property name="var_name" type="string">stdBtn</property>
    <property name="class_access" type="option">
      <option name="none"/>
      <option name="protected:"/>
      <option name="public:"/>
      none
    </property>
    <property name="OK" type="bool" help="Create a 'OK' button. Cannot be combined with Yes or Save buttons.">1</property>
    <property name="Yes" type="bool" help="Create a 'Yes' button. Cannot be combined with OK or Save buttons.">0</property>
    <property name="Save" type="bool" help="Create a 'Save' button. Cannot be combined with OK or Yes buttons.">0</property>
    <property name="Apply" type="bool" help="Create a 'Apply' button">0</property>
    <property name="No" type="bool" help="Create a 'No' button">0</property>
    <property name="Cancel" type="bool" help="Create a 'Cancel' button. Cannot be combined with Close button.">1</property>
    <property name="Close" type="bool" help="Create a 'Close' button. Cannot be combined with Cancel button.">0</property>
    <property name="Help" type="bool" help="Create a 'Help' button.">0</property>
    <property name="ContextHelp" type="bool" help="Create a 'ContextHelp' button.">0</property>
    <property name="default_button" type="option" help="The default button">
      <option name="none" help="Don't use a default button"/>
      <option name="OK" help="Default is the 'OK' button"/>
      <option name="Yes" help="Default is the 'Yes' button"/>
      <option name="Save" help="Default is the 'Save' button"/>
      <option name="No" help="Default is the 'No' button"/>
      <option name="Cancel" help="Default is the 'Cancel' button"/>
      <option name="Close" help="Default is the 'Close' button"/>
      OK
    </property>
    <property name="static_line" type="bool"
        help="Creates a sizer with standard buttons separated from the rest of the dialog contents by a horizontal wxStaticLine. It will add a separating static line only if it conforms to the current platform convention (currently it is not added under Mac where the use of static lines for grouping is discouraged and is added elsewhere). This can only be used in a dialog.">
      1
    </property>
    <category name="Click Events" type="interface">
      <event name="OKButtonClicked" class="wxCommandEvent" help="Process a wxEVT_BUTTON event when the OK button is clicked"/>
      <event name="YesButtonClicked" class="wxCommandEvent" help="Process a wxEVT_BUTTON event when the Yes button is clicked"/>
      <event name="SaveButtonClicked" class="wxCommandEvent" help="Process a wxEVT_BUTTON event when the Save button is clicked"/>
      <event name="ApplyButtonClicked" class="wxCommandEvent" help="Process a wxEVT_BUTTON event when the Apply the button is clicked"/>
      <event name="NoButtonClicked" class="wxCommandEvent" help="Process a wxEVT_BUTTON event when the No button is clicked"/>
      <event name="CancelButtonClicked" class="wxCommandEvent" help="Process a wxEVT_BUTTON event when the Cancel button is clicked"/>
      <event name="CloseButtonClicked" class="wxCommandEvent" help="Process a wxEVT_BUTTON event when the Close button is clicked"/>
      <event name="HelpButtonClicked" class="wxCommandEvent" help="Process a wxEVT_BUTTON event when the Help button is clicked"/>
      <event name="ContextHelpButtonClicked" class="wxCommandEvent" help="Process a wxEVT_BUTTON event when the ContextHelp button is clicked"/>
    </category>
    <category name="Update Events" type="interface">
      <event name="OKButton" class="wxUpdateUIEvent" help="Process a wxEVT_UPDATE_UI event for the OK button."/>
      <event name="YesButton" class="wxUpdateUIEvent" help="Process a wxEVT_UPDATE_UI for the Yes button."/>
      <event name="SaveButton" class="wxUpdateUIEvent" help="Process a wxEVT_UPDATE_UI for the Save button."/>
      <event name="ApplyButton" class="wxUpdateUIEvent" help="Process a wxEVT_UPDATE_UI for the Apply the button."/>
      <event name="NoButton" class="wxUpdateUIEvent" help="Process a wxEVT_UPDATE_UI for the No button."/>
      <event name="CancelButton" class="wxUpdateUIEvent" help="Process a wxEVT_UPDATE_UI for the Cancel button."/>
      <event name="CloseButton" class="wxUpdateUIEvent" help="Process a wxEVT_UPDATE_UI for the Close button."/>
      <event name="HelpButton" class="wxUpdateUIEvent" help="Process a wxEVT_UPDATE_UI for the Help button."/>
      <event name="ContextHelpButton" class="wxEVT_BUTTON" help="Process a wxEVT_UPDATE_UI for the ContextHelp button."/>
    </category>
  </compinfo>

  <compinfo class="TextSizer" image="text_sizer" type="widget">
    <inherits class="sizer_child"/>
    <property name="var_name" type="string">sizer_text</property>
    <property name="class_access" type="option">
      <option name="none"/>
      <option name="protected:"/>
      <option name="public:"/>
      none
    </property>
    <property name="text" type="string_edit_escapes"
        help="Splits text up at newlines and places the lines into wxStaticText objects with the specified maximum width in a vertical wxBoxSizer.">
      MyText
    </property>
    <property name="width" type="int"
        help="Specifies the text's maximum width (this argument is available since version 3.1.1, previous versions always behaved as if the maximal width of -1 was specified).">
      -1
    </property>
  </compinfo>

  <compinfo class="spacer" image="spacer" type="widget">
      <inherits class="sizer_child"/>
    <property name="width" type="uint"
        help="The width of the spacer. Ignored if proportion is non-zero or the sizer is aligned vertically.">
      0
    </property>
    <property name="height" type="uint"
        help="The height of the spacer. Ignored if proportion is non-zero or the sizer is aligned horizontally.">
      0
    </property>
    <property name="add_default_border" type="bool"
        help="If checked, 5 is added to the spacer size on normal displays, and on Windows, 10 is added on a high DPI display. Ignored if strech is non-zero.">
      0
    </property>
    <property name="proportion" type="uint"
        help="If non-zero, the spacer is stretched in proportion to the other controls in the sizer.">
      0
    </property>

  </compinfo>

</GeneratorDefitions>
