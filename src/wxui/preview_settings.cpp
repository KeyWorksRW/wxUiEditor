////////////////////////////////////////////////////////////////////////////////
// Code generated by wxUiEditor -- see https://github.com/KeyWorksRW/wxUiEditor/
//
// DO NOT EDIT THIS FILE! Your changes will be lost if it is re-generated!
////////////////////////////////////////////////////////////////////////////////

#include <wx/button.h>
#include <wx/radiobut.h>
#include <wx/sizer.h>
#include <wx/valgen.h>

#include "preview_settings.h"

bool PreviewSettings::Create(wxWindow* parent, wxWindowID id, const wxString& title,
        const wxPoint& pos, const wxSize& size, long style, const wxString &name)
{
    if (!wxDialog::Create(parent, id, title, pos, size, style, name))
        return false;

    auto* dlg_sizer = new wxBoxSizer(wxVERTICAL);

    m_staticText = new wxStaticText(this, wxID_ANY, "Choose what you want to use to display the form.");
    dlg_sizer->Add(m_staticText, wxSizerFlags().Border(wxALL));

    auto* box_sizer = new wxBoxSizer(wxHORIZONTAL);
    dlg_sizer->Add(box_sizer, wxSizerFlags().Border(wxALL));

    auto* radio_XRC = new wxRadioButton(this, wxID_ANY, "XRC", wxDefaultPosition, wxDefaultSize, wxRB_GROUP);
    radio_XRC->SetValidator(wxGenericValidator(&type_xrc));
    box_sizer->Add(radio_XRC, wxSizerFlags().Border(wxALL));

    auto* radio_XRC_CPP = new wxRadioButton(this, wxID_ANY, "XRC and C++");
    radio_XRC_CPP->SetValidator(wxGenericValidator(&type_xrc_cpp));
    box_sizer->Add(radio_XRC_CPP, wxSizerFlags().Border(wxALL));

    auto* radio_CPP = new wxRadioButton(this, wxID_ANY, "C++");
    radio_CPP->SetValidator(wxGenericValidator(&type_cpp));
    box_sizer->Add(radio_CPP, wxSizerFlags().Border(wxALL));

    auto* stdBtn = CreateStdDialogButtonSizer(wxOK|wxCANCEL);
    dlg_sizer->Add(CreateSeparatedSizer(stdBtn), wxSizerFlags().Expand().Border(wxALL));

    SetSizerAndFit(dlg_sizer);
    Centre(wxBOTH);

    return true;
}
