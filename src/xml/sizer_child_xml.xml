inline const char* sizer_child_xml = R"===(<?xml version="1.0"?>
<!DOCTYPE GeneratorDefinitions SYSTEM "gen.dtd">
<GeneratorDefinitions>
	<gen class="sizer_child" type="interface">
		<property name="alignment" type="bitlist">
			<option name="wxALIGN_LEFT"
				help="Align the item to the left of the space allotted to it by the sizer, adjusted for the border if any." />
			<option name="wxALIGN_TOP"
				help="Align the item to the top of the space allotted to it by the sizer, adjusted for the border if any." />
			<option name="wxALIGN_RIGHT"
				help="Align the item to the right of the space allotted to it by the sizer, adjusted for the border if any." />
			<option name="wxALIGN_BOTTOM"
				help="Align the item to the bottom of the space allotted to it by the sizer, adjusted for the border if any." />
			<option name="wxALIGN_CENTER"
				help="Align the item to the center of the space allotted to it by the sizer, adjusted for the border if any." />
			<option name="wxALIGN_CENTER_HORIZONTAL"
				help="Align the item to the horizontal center of the space allotted to it by the sizer, adjusted for the border if any." />
			<option name="wxALIGN_CENTER_VERTICAL"
				help="Align the item to the vertical center of the space allotted to it by the sizer, adjusted for the border if any." />
		</property>
		<property name="borders" type="bitlist">
			<option name="wxALL"
				help="Enable all borders" />
			<option name="wxLEFT"
				help="Enable the left border" />
			<option name="wxRIGHT"
				help="Enable the right border" />
			<option name="wxTOP"
				help="Enable the top border" />
			<option name="wxBOTTOM"
				help="Enable the bottom border" />
			wxALL
		</property>
		<property name="border_size" type="uint"
			help="Sets the border size, if the flag parameter is set to include any border flag. The default value of 5 will be scaled on high DPI displayes.">5</property>
		<property name="flags" type="bitlist">
			<option name="wxEXPAND"
				help="The item will be expanded to fill the space assigned to the item." />
			<option name="wxSHAPED"
				help="The item will be expanded as much as possible while also maintaining its aspect ratio." />
			<option name="wxFIXED_MINSIZE"
				help="Normally wxSizers will use GetAdjustedBestSize to determine what the minimal size of window items should be, and will use that size to calculate the layout. This allows layouts to adjust when an item changes and its best size becomes different. If you would rather have a window item stay the size it started with then use wxFIXED_MINSIZE." />
			<option name="wxRESERVE_SPACE_EVEN_IF_HIDDEN"
				help="Normally wxSizers don't allocate space for hidden windows or other items. This flag overrides this behaviour so that sufficient space is allocated for the window even if it isn't visible. This makes it possible to dynamically show and hide controls without resizing the parent window." />
		</property>
		<property name="proportion" type="uint"
			help="How much this control will stretch in proportion to the other controls in the same sizer. Set to 0 to prevent stretching.">0</property>
		<property name="row" type="int"
			help="Row for the item.">0</property>
		<property name="column" type="int"
			help="Column for the item.">0</property>
		<property name="rowspan" type="int"
			help="The number of rows that the item spans.">1</property>
		<property name="colspan" type="int"
			help="The number of columns that the item spans.">1</property>
	</gen>
	<gen class="sizer_dimension" type="interface">
		<property name="minimum_size" type="wxSize"
			help="Normally, the sizer will calculate its minimal size based purely on how much space its children need. If the minimal size is > 0, 'GetMinSize' will return either the minimal size as requested by its children or the minimal size set here, depending on which is bigger." />
	</gen>

	<gen class="sizeritem_settings" type="interface">
		<property name="alignment" type="bitlist">
			<option name="wxALIGN_LEFT"
				help="Align the item to the left of the space allotted to it by the sizer, adjusted for the border if any." />
			<option name="wxALIGN_TOP"
				help="Align the item to the top of the space allotted to it by the sizer, adjusted for the border if any." />
			<option name="wxALIGN_RIGHT"
				help="Align the item to the right of the space allotted to it by the sizer, adjusted for the border if any." />
			<option name="wxALIGN_BOTTOM"
				help="Align the item to the bottom of the space allotted to it by the sizer, adjusted for the border if any." />
			<option name="wxALIGN_CENTER"
				help="Align the item to the center of the space allotted to it by the sizer, adjusted for the border if any." />
			<option name="wxALIGN_CENTER_HORIZONTAL"
				help="Align the item to the horizontal center of the space allotted to it by the sizer, adjusted for the border if any." />
			<option name="wxALIGN_CENTER_VERTICAL"
				help="Align the item to the vertical center of the space allotted to it by the sizer, adjusted for the border if any." />
		</property>
		<property name="borders" type="bitlist">
			<option name="wxALL"
				help="Enable all borders" />
			<option name="wxLEFT"
				help="Enable the left border" />
			<option name="wxRIGHT"
				help="Enable the right border" />
			<option name="wxTOP"
				help="Enable the top border" />
			<option name="wxBOTTOM"
				help="Enable the bottom border" />
			wxALL
		</property>
		<property name="border_size" type="uint"
			help="Sets the border size, if the flag parameter is set to include any border flag. The default value of 5 will be scaled on high DPI displayes.">5</property>
		<property name="flags" type="bitlist">
			<option name="wxEXPAND"
				help="The item will be expanded to fill the space assigned to the item." />
			<option name="wxSHAPED"
				help="The item will be expanded as much as possible while also maintaining its aspect ratio." />
			<option name="wxFIXED_MINSIZE"
				help="Normally wxSizers will use GetAdjustedBestSize to determine what the minimal size of window items should be, and will use that size to calculate the layout. This allows layouts to adjust when an item changes and its best size becomes different. If you would rather have a window item stay the size it started with then use wxFIXED_MINSIZE." />
			<option name="wxRESERVE_SPACE_EVEN_IF_HIDDEN"
				help="Normally wxSizers don't allocate space for hidden windows or other items. This flag overrides this behaviour so that sufficient space is allocated for the window even if it isn't visible. This makes it possible to dynamically show and hide controls without resizing the parent window." />
		</property>
	</gen>

	<gen class="flexgridsizerbase" image="flex_grid_sizer" type="interface">
		<property name="vgap" type="uint"
			help="The vertical gap (in pixels) between the cells in the sizer.">0</property>
		<property name="hgap" type="uint"
			help="The horizontal gap (in pixels) between cells in the sizer.">0</property>
		<property name="growablerows" type="uintpairlist"
			help="Comma separated list of row indices (starting from zero, optional proportion appended after a colon) that should be grown if there is extra space available to the sizer." />
		<property name="growablecols" type="uintpairlist"
			help="Comma separated list of column indices (starting from zero, optional proportion appended after a colon) that should be grown if there is extra space available to the sizer." />
		<property name="flexible_direction" type="option"
			help="wxFlexGridSizer can size items equally in one direction but unequally ('flexibly') in the other">
			<option name="wxVERTICAL"
				help="Rows are flexibly sized." />
			<option name="wxHORIZONTAL"
				help="Columns are flexibly sized." />
			<option name="wxBOTH"
				help="Both rows and columns are flexibly sized (this is the default value)." />
			wxBOTH
		</property>
		<property name="non_flexible_grow_mode" type="option"
			help="If the sizer is only flexible in one direction (this can be changed using 'flexible_direction'), it needs to be decided how the sizer should grow in the other ('non flexible') direction in order to fill the available space.">
			<option name="wxFLEX_GROWMODE_NONE"
				help="Sizer doesn't grow in the non flexible direction." />
			<option name="wxFLEX_GROWMODE_SPECIFIED"
				help="Sizer honors growable columns/rows set with AddGrowableCol and AddGrowableRow. In this case equal sizing applies to minimum sizes of columns or rows (this is the default value)." />
			<option name="wxFLEX_GROWMODE_ALL"
				help="Sizer equally stretches all columns or rows in the non flexible direction, whether they are growable or not in the flexible direction." />
			wxFLEX_GROWMODE_SPECIFIED
		</property>
	</gen>
</GeneratorDefinitions>)===";
