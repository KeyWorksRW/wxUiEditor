/////////////////////////////////////////////////////////////////////////////
// Purpose:   Enumerations for nodes
// Author:    Ralph Walden
// Copyright: Copyright (c) 2021 KeyWorks Software (Ralph Walden)
// License:   Apache License -- see ../LICENSE
/////////////////////////////////////////////////////////////////////////////

// These maps can be used to convert the enumeration value into a string for writing out to a project file. When wxUiEditor
// is first initialized, the regular maps will be read and used to initialize the rmaps.

#include "pch.h"

#include "enum_classes.h"

using namespace NodeEnums;

std::map<PropType, const char*> NodeEnums::map_PropTypes = {

    { enum_bitlist, "bitlist" },
    { enum_bitmap, "bitmap" },
    { enum_bool, "bool" },
    { enum_editoption, "editoption" },
    { enum_file, "file" },
    { enum_float, "float" },
    { enum_id, "id" },
    { enum_image, "image" },
    { enum_int, "int" },
    { enum_option, "option" },
    { enum_parent, "parent" },
    { enum_path, "path" },
    { enum_string, "string" },
    { enum_string_edit, "string_edit" },
    { enum_string_edit_escapes, "string_edit_escapes" },
    { enum_string_edit_single, "string_edit_single" },
    { enum_string_escapes, "string_escapes" },
    { enum_stringlist, "stringlist" },
    { enum_uint, "uint" },
    { enum_uintlist, "uintlist" },
    { enum_uintpairlist, "uintpairlist" },
    { enum_wxColour, "wxColour" },
    { enum_wxFont, "wxFont" },
    { enum_wxparent, "wxparent" },
    { enum_wxparent_cp, "wxparent_cp" },
    { enum_wxparent_sb, "wxparent_sb" },
    { enum_wxPoint, "wxPoint" },
    { enum_wxSize, "wxSize" },

};
std::unordered_map<std::string, PropType> NodeEnums::rmap_PropTypes;

std::map<NodeEnums::Prop, const char*> NodeEnums::map_PropNames = {

    { Prop::Apply, "Apply" },
    { Prop::BottomDockable, "BottomDockable" },
    { Prop::Cancel, "Cancel" },
    { Prop::Close, "Close" },
    { Prop::ContextHelp, "ContextHelp" },
    { Prop::Help, "Help" },
    { Prop::LeftDockable, "LeftDockable" },
    { Prop::No, "No" },
    { Prop::OK, "OK" },
    { Prop::RightDockable, "RightDockable" },
    { Prop::Save, "Save" },
    { Prop::TopDockable, "TopDockable" },
    { Prop::Yes, "Yes" },
    { Prop::add_default_border, "add_default_border" },
    { Prop::align, "align" },
    { Prop::alignment, "alignment" },
    { Prop::aui_layer, "aui_layer" },
    { Prop::aui_name, "aui_name" },
    { Prop::aui_position, "aui_position" },
    { Prop::aui_row, "aui_row" },
    { Prop::auth_needed, "auth_needed" },
    { Prop::autosize_cols, "autosize_cols" },
    { Prop::autosize_rows, "autosize_rows" },
    { Prop::background_colour, "background_colour" },
    { Prop::backspace_unindents, "backspace_unindents" },
    { Prop::base_class_name, "base_class_name" },
    { Prop::base_file, "base_file" },
    { Prop::base_hdr_includes, "base_hdr_includes" },
    { Prop::base_src_includes, "base_src_includes" },
    { Prop::best_size, "best_size" },
    { Prop::bitmap, "bitmap" },
    { Prop::bitmapsize, "bitmapsize" },
    { Prop::border, "border" },
    { Prop::border_size, "border_size" },
    { Prop::borders, "borders" },
    { Prop::cancel_button, "cancel_button" },
    { Prop::caption, "caption" },
    { Prop::caption_visible, "caption_visible" },
    { Prop::cell_bg, "cell_bg" },
    { Prop::cell_font, "cell_font" },
    { Prop::cell_horiz_alignment, "cell_horiz_alignment" },
    { Prop::cell_text, "cell_text" },
    { Prop::cell_vert_alignment, "cell_vert_alignment" },
    { Prop::center, "center" },
    { Prop::center_pane, "center_pane" },
    { Prop::checkbox_var_name, "checkbox_var_name" },
    { Prop::checked, "checked" },
    { Prop::choices, "choices" },
    { Prop::class_access, "class_access" },
    { Prop::class_name, "class_name" },
    { Prop::close_button, "close_button" },
    { Prop::col_label_horiz_alignment, "col_label_horiz_alignment" },
    { Prop::col_label_size, "col_label_size" },
    { Prop::col_label_values, "col_label_values" },
    { Prop::col_label_vert_alignment, "col_label_vert_alignment" },
    { Prop::collapsed, "collapsed" },
    { Prop::colour, "colour" },
    { Prop::cols, "cols" },
    { Prop::colspan, "colspan" },
    { Prop::column, "column" },
    { Prop::column_sizes, "column_sizes" },
    { Prop::context_help, "context_help" },
    { Prop::context_menu, "context_menu" },
    { Prop::converted_art, "converted_art" },
    { Prop::current, "current" },
    { Prop::default, "default" },
    { Prop::default_button, "default_button" },
    { Prop::default_pane, "default_pane" },
    { Prop::defaultfilter, "defaultfilter" },
    { Prop::defaultfolder, "defaultfolder" },
    { Prop::derived_class_name, "derived_class_name" },
    { Prop::derived_file, "derived_file" },
    { Prop::digits, "digits" },
    { Prop::direction, "direction" },
    { Prop::disabled, "disabled" },
    { Prop::disabled_bmp, "disabled_bmp" },
    { Prop::display_images, "display_images" },
    { Prop::dock, "dock" },
    { Prop::dock_fixed, "dock_fixed" },
    { Prop::docking, "docking" },
    { Prop::drag_col_move, "drag_col_move" },
    { Prop::drag_col_size, "drag_col_size" },
    { Prop::drag_grid_size, "drag_grid_size" },
    { Prop::drag_row_size, "drag_row_size" },
    { Prop::duration, "duration" },
    { Prop::editing, "editing" },
    { Prop::ellipsize, "ellipsize" },
    { Prop::empty_cell_size, "empty_cell_size" },
    { Prop::enable_user_code, "enable_user_code" },
    { Prop::end_colour, "end_colour" },
    { Prop::extra_style, "extra_style" },
    { Prop::fields, "fields" },
    { Prop::filter, "filter" },
    { Prop::filter_index, "filter_index" },
    { Prop::flag, "flag" },
    { Prop::flags, "flags" },
    { Prop::flexible_direction, "flexible_direction" },
    { Prop::floatable, "floatable" },
    { Prop::focus, "focus" },
    { Prop::folding, "folding" },
    { Prop::font, "font" },
    { Prop::foreground_colour, "foreground_colour" },
    { Prop::get_function, "get_function" },
    { Prop::grid_line_color, "grid_line_color" },
    { Prop::grid_lines, "grid_lines" },
    { Prop::gripper, "gripper" },
    { Prop::growablecols, "growablecols" },
    { Prop::growablerows, "growablerows" },
    { Prop::header_ext, "header_ext" },
    { Prop::height, "height" },
    { Prop::help, "help" },
    { Prop::help_provider, "help_provider" },
    { Prop::hgap, "hgap" },
    { Prop::hidden, "hidden" },
    { Prop::hide_effect, "hide_effect" },
    { Prop::hover_color, "hover_color" },
    { Prop::icon, "icon" },
    { Prop::id, "id" },
    { Prop::image_size, "image_size" },
    { Prop::inc, "inc" },
    { Prop::include_advanced, "include_advanced" },
    { Prop::indentation_guides, "indentation_guides" },
    { Prop::initial, "initial" },
    { Prop::initial_filename, "initial_filename" },
    { Prop::initial_folder, "initial_folder" },
    { Prop::initial_font, "initial_font" },
    { Prop::initial_path, "initial_path" },
    { Prop::initial_state, "initial_state" },
    { Prop::internationalize, "internationalize" },
    { Prop::kind, "kind" },
    { Prop::label, "label" },
    { Prop::label_bg, "label_bg" },
    { Prop::label_font, "label_font" },
    { Prop::label_text, "label_text" },
    { Prop::line_numbers, "line_numbers" },
    { Prop::line_size, "line_size" },
    { Prop::local_pch_file, "local_pch_file" },
    { Prop::main_label, "main_label" },
    { Prop::majorDimension, "majorDimension" },
    { Prop::margin_height, "margin_height" },
    { Prop::margin_width, "margin_width" },
    { Prop::margins, "margins" },
    { Prop::markup, "markup" },
    { Prop::max, "max" },
    { Prop::maxValue, "maxValue" },
    { Prop::max_point_size, "max_point_size" },
    { Prop::max_rows, "max_rows" },
    { Prop::max_size, "max_size" },
    { Prop::maximize_button, "maximize_button" },
    { Prop::maximum_size, "maximum_size" },
    { Prop::maxlength, "maxlength" },
    { Prop::message, "message" },
    { Prop::min, "min" },
    { Prop::minValue, "minValue" },
    { Prop::min_pane_size, "min_pane_size" },
    { Prop::min_point_size, "min_point_size" },
    { Prop::min_rows, "min_rows" },
    { Prop::min_size, "min_size" },
    { Prop::minimize_button, "minimize_button" },
    { Prop::minimum_size, "minimum_size" },
    { Prop::mode, "mode" },
    { Prop::model_column, "model_column" },
    { Prop::moveable, "moveable" },
    { Prop::name_space, "name_space" },
    { Prop::non_flexible_grow_mode, "non_flexible_grow_mode" },
    { Prop::normal_color, "normal_color" },
    { Prop::note, "note" },
    { Prop::orientation, "orientation" },
    { Prop::original_art, "original_art" },
    { Prop::packing, "packing" },
    { Prop::page_size, "page_size" },
    { Prop::pagesize, "pagesize" },
    { Prop::pane_border, "pane_border" },
    { Prop::pane_position, "pane_position" },
    { Prop::pane_size, "pane_size" },
    { Prop::persist, "persist" },
    { Prop::persist_name, "persist_name" },
    { Prop::pin_button, "pin_button" },
    { Prop::pos, "pos" },
    { Prop::position, "position" },
    { Prop::pressed, "pressed" },
    { Prop::pressed_bmp, "pressed_bmp" },
    { Prop::proportion, "proportion" },
    { Prop::radiobtn_var_name, "radiobtn_var_name" },
    { Prop::range, "range" },
    { Prop::read_only, "read_only" },
    { Prop::resize, "resize" },
    { Prop::row, "row" },
    { Prop::row_label_horiz_alignment, "row_label_horiz_alignment" },
    { Prop::row_label_size, "row_label_size" },
    { Prop::row_label_values, "row_label_values" },
    { Prop::row_label_vert_alignment, "row_label_vert_alignment" },
    { Prop::row_sizes, "row_sizes" },
    { Prop::rows, "rows" },
    { Prop::rowspan, "rowspan" },
    { Prop::sashgravity, "sashgravity" },
    { Prop::sashpos, "sashpos" },
    { Prop::sashsize, "sashsize" },
    { Prop::scale_mode, "scale_mode" },
    { Prop::scroll_rate_x, "scroll_rate_x" },
    { Prop::scroll_rate_y, "scroll_rate_y" },
    { Prop::search_button, "search_button" },
    { Prop::select, "select" },
    { Prop::selection, "selection" },
    { Prop::selection_int, "selection_int" },
    { Prop::selection_string, "selection_string" },
    { Prop::separation, "separation" },
    { Prop::set_function, "set_function" },
    { Prop::shortcut, "shortcut" },
    { Prop::show, "show" },
    { Prop::show_effect, "show_effect" },
    { Prop::show_hidden, "show_hidden" },
    { Prop::size, "size" },
    { Prop::source_ext, "source_ext" },
    { Prop::splitmode, "splitmode" },
    { Prop::src_preamble, "src_preamble" },
    { Prop::start_colour, "start_colour" },
    { Prop::static_line, "static_line" },
    { Prop::statusbar, "statusbar" },
    { Prop::style, "style" },
    { Prop::tab_indents, "tab_indents" },
    { Prop::tab_width, "tab_width" },
    { Prop::text, "text" },
    { Prop::theme, "theme" },
    { Prop::thumb_length, "thumb_length" },
    { Prop::thumbsize, "thumbsize" },
    { Prop::tick_frequency, "tick_frequency" },
    { Prop::title, "title" },
    { Prop::toolbar_pane, "toolbar_pane" },
    { Prop::tooltip, "tooltip" },
    { Prop::type, "type" },
    { Prop::unchecked_bitmap, "unchecked_bitmap" },
    { Prop::url, "url" },
    { Prop::use_tabs, "use_tabs" },
    { Prop::user_cpp_code, "user_cpp_code" },
    { Prop::validator_data_type, "validator_data_type" },
    { Prop::validator_style, "validator_style" },
    { Prop::validator_type, "validator_type" },
    { Prop::validator_variable, "validator_variable" },
    { Prop::value, "value" },
    { Prop::var_name, "var_name" },
    { Prop::vgap, "vgap" },
    { Prop::view_eol, "view_eol" },
    { Prop::view_whitespace, "view_whitespace" },
    { Prop::visited_color, "visited_color" },
    { Prop::width, "width" },
    { Prop::wildcard, "wildcard" },
    { Prop::window_extra_style, "window_extra_style" },
    { Prop::window_name, "window_name" },
    { Prop::window_style, "window_style" },
    { Prop::wrap, "wrap" },
    { Prop::wrap_flags, "wrap_flags" },

};
std::unordered_map<std::string, NodeEnums::Prop> NodeEnums::rmap_PropNames;

std::map<ClassType, const char*> NodeEnums::map_ClassTypes = {

    { ClassType::type_auinotebook, "auinotebook" },
    { ClassType::type_bookpage, "bookpage" },
    { ClassType::type_choicebook, "choicebook" },
    { ClassType::type_container, "container" },
    { ClassType::type_dataviewcolumn, "dataviewcolumn" },
    { ClassType::type_dataviewctrl, "dataviewctrl" },
    { ClassType::type_dataviewlistcolumn, "dataviewlistcolumn" },
    { ClassType::type_dataviewlistctrl, "dataviewlistctrl" },
    { ClassType::type_dataviewtreectrl, "dataviewtreectrl" },
    { ClassType::type_expanded_widget, "expanded_widget" },
    { ClassType::type_form, "form" },
    { ClassType::type_gbsizer, "gbsizer" },
    { ClassType::type_gbsizeritem, "gbsizeritem" },
    { ClassType::type_interface, "interface" },
    { ClassType::type_listbook, "listbook" },
    { ClassType::type_menu, "menu" },
    { ClassType::type_menubar, "menubar" },
    { ClassType::type_menubar_form, "menubar_form" },
    { ClassType::type_menuitem, "menuitem" },
    { ClassType::type_notebook, "notebook" },
    { ClassType::type_oldbookpage, "oldbookpage" },
    { ClassType::type_project, "project" },
    { ClassType::type_propgrid, "propgrid" },
    { ClassType::type_propgriditem, "propgriditem" },
    { ClassType::type_propgridman, "propgridman" },
    { ClassType::type_propgridpage, "propgridpage" },
    { ClassType::type_ribbonbar, "ribbonbar" },
    { ClassType::type_ribbonbutton, "ribbonbutton" },
    { ClassType::type_ribbonbuttonbar, "ribbonbuttonbar" },
    { ClassType::type_ribbongallery, "ribbongallery" },
    { ClassType::type_ribbongalleryitem, "ribbongalleryitem" },
    { ClassType::type_ribbonpage, "ribbonpage" },
    { ClassType::type_ribbonpanel, "ribbonpanel" },
    { ClassType::type_ribbontool, "ribbontool" },
    { ClassType::type_ribbontoolbar, "ribbontoolbar" },
    { ClassType::type_simplebook, "simplebook" },
    { ClassType::type_sizer, "sizer" },
    { ClassType::type_sizeritem, "sizeritem" },
    { ClassType::type_splitter, "splitter" },
    { ClassType::type_splitteritem, "splitteritem" },
    { ClassType::type_statusbar, "statusbar" },
    { ClassType::type_submenu, "submenu" },
    { ClassType::type_tool, "tool" },
    { ClassType::type_toolbar, "toolbar" },
    { ClassType::type_toolbar_form, "toolbar_form" },
    { ClassType::type_treelistctrl, "treelistctrl" },
    { ClassType::type_treelistctrlcolumn, "treelistctrlcolumn" },
    { ClassType::type_widget, "widget" },
    { ClassType::type_wizard, "wizard" },
    { ClassType::type_wizardpagesimple, "wizardpagesimple" },

};
std::unordered_map<std::string, ClassType> NodeEnums::rmap_ClassTypes;

std::map<NodeEnums::ClassName, const char*> NodeEnums::map_ClassNames = {

    { ClassName::AUI, "AUI" },
    { ClassName::Bitmaps, "Bitmaps" },
    { ClassName::BookPage, "BookPage" },
    { ClassName::Boolean_Validator, "Boolean Validator" },
    { ClassName::Check3State, "Check3State" },
    { ClassName::Choice_Validator, "Choice Validator" },
    { ClassName::Code_Generation, "Code Generation" },
    { ClassName::Integer_Validator, "Integer Validator" },
    { ClassName::List_Validator, "List Validator" },
    { ClassName::MenuBar, "MenuBar" },
    { ClassName::PanelForm, "PanelForm" },
    { ClassName::Project, "Project" },
    { ClassName::StaticCheckboxBoxSizer, "StaticCheckboxBoxSizer" },
    { ClassName::StaticRadioBtnBoxSizer, "StaticRadioBtnBoxSizer" },
    { ClassName::String_Validator, "String Validator" },
    { ClassName::TextSizer, "TextSizer" },
    { ClassName::Text_Validator, "Text Validator" },
    { ClassName::ToolBar, "ToolBar" },
    { ClassName::TreeListCtrlColumn, "TreeListCtrlColumn" },
    { ClassName::UserCode, "UserCode" },
    { ClassName::VerticalBoxSizer, "VerticalBoxSizer" },
    { ClassName::Window_Events, "Window Events" },
    { ClassName::dataViewColumn, "dataViewColumn" },
    { ClassName::dataViewListColumn, "dataViewListColumn" },
    { ClassName::flexgridsizerbase, "flexgridsizerbase" },
    { ClassName::gbsizeritem, "gbsizeritem" },
    { ClassName::oldbookpage, "oldbookpage" },
    { ClassName::propGridItem, "propGridItem" },
    { ClassName::propGridPage, "propGridPage" },
    { ClassName::ribbonButton, "ribbonButton" },
    { ClassName::ribbonGalleryItem, "ribbonGalleryItem" },
    { ClassName::ribbonTool, "ribbonTool" },
    { ClassName::separator, "separator" },
    { ClassName::sizer_child, "sizer_child" },
    { ClassName::sizer_dimension, "sizer_dimension" },
    { ClassName::sizeritem, "sizeritem" },
    { ClassName::sizeritem_settings, "sizeritem_settings" },
    { ClassName::spacer, "spacer" },
    { ClassName::splitteritem, "splitteritem" },
    { ClassName::submenu, "submenu" },
    { ClassName::tool, "tool" },
    { ClassName::toolSeparator, "toolSeparator" },
    { ClassName::wxActivityIndicator, "wxActivityIndicator" },
    { ClassName::wxAuiMDIChildFrame, "wxAuiMDIChildFrame" },
    { ClassName::wxBannerWindow, "wxBannerWindow" },
    { ClassName::wxBitmapComboBox, "wxBitmapComboBox" },
    { ClassName::wxBoxSizer, "wxBoxSizer" },
    { ClassName::wxButton, "wxButton" },
    { ClassName::wxCalendarCtrl, "wxCalendarCtrl" },
    { ClassName::wxCheckBox, "wxCheckBox" },
    { ClassName::wxCheckListBox, "wxCheckListBox" },
    { ClassName::wxChoice, "wxChoice" },
    { ClassName::wxChoicebook, "wxChoicebook" },
    { ClassName::wxCollapsiblePane, "wxCollapsiblePane" },
    { ClassName::wxColourPickerCtrl, "wxColourPickerCtrl" },
    { ClassName::wxComboBox, "wxComboBox" },
    { ClassName::wxCommandLinkButton, "wxCommandLinkButton" },
    { ClassName::wxDataViewCtrl, "wxDataViewCtrl" },
    { ClassName::wxDataViewListCtrl, "wxDataViewListCtrl" },
    { ClassName::wxDataViewTreeCtrl, "wxDataViewTreeCtrl" },
    { ClassName::wxDatePickerCtrl, "wxDatePickerCtrl" },
    { ClassName::wxDialog, "wxDialog" },
    { ClassName::wxDirPickerCtrl, "wxDirPickerCtrl" },
    { ClassName::wxFileCtrl, "wxFileCtrl" },
    { ClassName::wxFilePickerCtrl, "wxFilePickerCtrl" },
    { ClassName::wxFlexGridSizer, "wxFlexGridSizer" },
    { ClassName::wxFontPickerCtrl, "wxFontPickerCtrl" },
    { ClassName::wxFrame, "wxFrame" },
    { ClassName::wxGauge, "wxGauge" },
    { ClassName::wxGenericDirCtrl, "wxGenericDirCtrl" },
    { ClassName::wxGrid, "wxGrid" },
    { ClassName::wxGridBagSizer, "wxGridBagSizer" },
    { ClassName::wxGridSizer, "wxGridSizer" },
    { ClassName::wxHtmlWindow, "wxHtmlWindow" },
    { ClassName::wxHyperlinkCtrl, "wxHyperlinkCtrl" },
    { ClassName::wxInfoBar, "wxInfoBar" },
    { ClassName::wxListBox, "wxListBox" },
    { ClassName::wxListView, "wxListView" },
    { ClassName::wxListbook, "wxListbook" },
    { ClassName::wxMenu, "wxMenu" },
    { ClassName::wxMenuBar, "wxMenuBar" },
    { ClassName::wxMenuItem, "wxMenuItem" },
    { ClassName::wxNotebook, "wxNotebook" },
    { ClassName::wxPanel, "wxPanel" },
    { ClassName::wxPopupTransientWindow, "wxPopupTransientWindow" },
    { ClassName::wxPropertyGrid, "wxPropertyGrid" },
    { ClassName::wxPropertyGridManager, "wxPropertyGridManager" },
    { ClassName::wxRadioBox, "wxRadioBox" },
    { ClassName::wxRadioButton, "wxRadioButton" },
    { ClassName::wxRibbonBar, "wxRibbonBar" },
    { ClassName::wxRibbonButtonBar, "wxRibbonButtonBar" },
    { ClassName::wxRibbonGallery, "wxRibbonGallery" },
    { ClassName::wxRibbonPage, "wxRibbonPage" },
    { ClassName::wxRibbonPanel, "wxRibbonPanel" },
    { ClassName::wxRibbonToolBar, "wxRibbonToolBar" },
    { ClassName::wxRichTextCtrl, "wxRichTextCtrl" },
    { ClassName::wxScrollBar, "wxScrollBar" },
    { ClassName::wxScrolledWindow, "wxScrolledWindow" },
    { ClassName::wxSearchCtrl, "wxSearchCtrl" },
    { ClassName::wxSimpleHtmlListBox, "wxSimpleHtmlListBox" },
    { ClassName::wxSimplebook, "wxSimplebook" },
    { ClassName::wxSlider, "wxSlider" },
    { ClassName::wxSpinButton, "wxSpinButton" },
    { ClassName::wxSpinCtrl, "wxSpinCtrl" },
    { ClassName::wxSpinCtrlDouble, "wxSpinCtrlDouble" },
    { ClassName::wxSplitterWindow, "wxSplitterWindow" },
    { ClassName::wxStaticBitmap, "wxStaticBitmap" },
    { ClassName::wxStaticBoxSizer, "wxStaticBoxSizer" },
    { ClassName::wxStaticLine, "wxStaticLine" },
    { ClassName::wxStaticText, "wxStaticText" },
    { ClassName::wxStatusBar, "wxStatusBar" },
    { ClassName::wxStdDialogButtonSizer, "wxStdDialogButtonSizer" },
    { ClassName::wxStyledTextCtrl, "wxStyledTextCtrl" },
    { ClassName::wxTextCtrl, "wxTextCtrl" },
    { ClassName::wxTimePickerCtrl, "wxTimePickerCtrl" },
    { ClassName::wxToggleButton, "wxToggleButton" },
    { ClassName::wxToolBar, "wxToolBar" },
    { ClassName::wxToolbook, "wxToolbook" },
    { ClassName::wxTopLevelWindow, "wxTopLevelWindow" },
    { ClassName::wxTreeCtrl, "wxTreeCtrl" },
    { ClassName::wxTreeCtrlBase, "wxTreeCtrlBase" },
    { ClassName::wxTreeListCtrl, "wxTreeListCtrl" },
    { ClassName::wxTreebook, "wxTreebook" },
    { ClassName::wxWindow, "wxWindow" },
    { ClassName::wxWizard, "wxWizard" },
    { ClassName::wxWizardPageSimple, "wxWizardPageSimple" },
    { ClassName::wxWrapSizer, "wxWrapSizer" },

};
std::unordered_map<std::string, NodeEnums::ClassName> NodeEnums::rmap_ClassNames;
