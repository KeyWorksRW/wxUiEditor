///////////////////////////////////////////////////////////////////////////////
// Code generated by wxUiEditor - see https://github.com/KeyWorksRW/wxUiEditor/
//
// Do not edit any code above the "End of generated code" comment block.
// Any changes before that block will be lost if it is re-generated!
///////////////////////////////////////////////////////////////////////////////

// clang-format off

#include <wx/artprov.h>
#include <wx/ribbon/page.h>
#include <wx/ribbon/panel.h>
#include <wx/sizer.h>

#include "images.h"

#include "tools_dlg.h"

#include <wx/mstream.h>  // memory stream classes
#include <wx/zstream.h>  // zlib stream classes

#include <memory>  // for std::make_unique

// Convert a data array into a wxImage
inline wxImage wxueImage(const unsigned char* data, size_t size_data)
{
    wxMemoryInputStream strm(data, size_data);
    wxImage image;
    image.LoadFile(strm);
    return image;
};

// Convert compressed SVG string into a wxBitmapBundle
inline wxBitmapBundle wxueBundleSVG(const unsigned char* data,
    size_t size_data, size_t size_svg, wxSize def_size)
{
    auto str = std::make_unique<char[]>(size_svg);
    wxMemoryInputStream stream_in(data, size_data);
    wxZlibInputStream zlib_strm(stream_in);
    zlib_strm.Read(str.get(), size_svg);
    return wxBitmapBundle::FromSVG(str.get(), def_size);
};

namespace wxue_img
{
    // fontPicker@1_25x.png
    extern const unsigned char fontPicker_1_25x_png[1330];
    // fontPicker@1_5x.png
    extern const unsigned char fontPicker_1_5x_png[1507];
    extern const unsigned char fontPicker_png[763];
    extern const unsigned char wxPython_1_5x_png[765];
    extern const unsigned char wxPython_2x_png[251];
    extern const unsigned char wxPython_png[399];
}

bool ToolBarsDialog::Create(wxWindow* parent, wxWindowID id, const wxString& title,
    const wxPoint& pos, const wxSize& size, long style, const wxString &name)
{
    if (!wxDialog::Create(parent, id, title, pos, size, style, name))
        return false;
    if (!wxImage::FindHandler(wxBITMAP_TYPE_PNG))
        wxImage::AddHandler(new wxPNGHandler);

    auto* box_sizer = new wxBoxSizer(wxVERTICAL);

    m_tool_bar = new wxToolBar(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTB_HORIZONTAL);
    m_tool_svg = m_tool_svg = m_tool_bar->AddTool(wxID_ANY, wxEmptyString,
        wxueBundleSVG(wxue_img::left_svg, 585, 1857, FromDIP(wxSize(24, 24))));

    m_tool_bar->AddTool(wxID_ANY, wxEmptyString, wxArtProvider::GetBitmapBundle(wxART_CUT, wxART_TOOLBAR));

    m_tool_bar->AddTool(wxID_ANY, wxEmptyString,
        wxueImage(wxue_img::undo_png, sizeof(wxue_img::undo_png)));

    m_tool_bar->AddTool(wxID_ANY, wxEmptyString, wxBitmapBundle::FromBitmaps(wxueImage(wxue_img::redo_png, sizeof(wxue_img::redo_png)), wxueImage(wxue_img::redo_2x_png, sizeof(wxue_img::redo_2x_png))));

    m_tool_bar->AddTool(wxID_ANY, wxEmptyString, wxue_img::bundle_wxPython_png());

    m_tool_bar->AddTool(wxID_ANY, wxEmptyString, wxue_img::bundle_fontPicker_png());

    m_tool_bar->Realize();
    box_sizer->Add(m_tool_bar, wxSizerFlags().Border(wxALL));

    m_aui_tool_bar = new wxAuiToolBar(this, wxID_ANY, wxDefaultPosition, wxDefaultSize,
        wxAUI_TB_PLAIN_BACKGROUND);
    m_aui_tool_svg = m_aui_tool_bar->AddTool(wxID_ANY, wxEmptyString,
        wxueBundleSVG(wxue_img::left_svg, 585, 1857, FromDIP(wxSize(24, 24))));
    m_aui_tool_bar->AddTool(wxID_ANY, wxEmptyString, wxArtProvider::GetBitmapBundle(wxART_CUT, wxART_TOOLBAR));
    m_aui_tool_bar->AddTool(wxID_ANY, wxEmptyString, wxBitmapBundle::FromBitmaps(wxueImage(wxue_img::redo_png, sizeof(wxue_img::redo_png)), wxueImage(wxue_img::redo_2x_png, sizeof(wxue_img::redo_2x_png))));
    m_aui_tool_bar->AddTool(wxID_ANY, wxEmptyString, wxue_img::bundle_wxPython_png());
    m_aui_tool_bar->AddTool(wxID_ANY, wxEmptyString, wxue_img::bundle_fontPicker_png());
    m_aui_tool_bar->Realize();
    box_sizer->Add(m_aui_tool_bar, wxSizerFlags().Border(wxALL));

    m_rbnBar = new wxRibbonBar(this, wxID_ANY);

    m_rbnBar->SetArtProvider(new wxRibbonDefaultArtProvider);
    box_sizer->Add(m_rbnBar, wxSizerFlags().Border(wxALL));

    auto* rbnPage = new wxRibbonPage(m_rbnBar, wxID_ANY, "Page 1");

    auto* rbnPanel = new wxRibbonPanel(rbnPage, wxID_ANY, "Page 1, panel 1");

    auto* rbnToolBar = new wxRibbonToolBar(rbnPanel, wxID_ANY);
    {
        rbnToolBar->AddTool(rbn_tool_svg,
            wxueBundleSVG(wxue_img::left_svg, 585, 1857, FromDIP(wxSize(24, 24))).GetBitmap(wxDefaultSize), wxEmptyString,
            wxRIBBON_BUTTON_NORMAL);
        rbnToolBar->AddTool(rbn_tool_art, wxArtProvider::GetBitmap(wxART_CUT, wxART_TOOLBAR), wxEmptyString,
            wxRIBBON_BUTTON_NORMAL);
        rbnToolBar->AddTool(rbn_tool1,
            wxueImage(wxue_img::undo_png, sizeof(wxue_img::undo_png)).Rescale(
            FromDIP(24), FromDIP(24), wxIMAGE_QUALITY_BILINEAR), wxEmptyString, wxRIBBON_BUTTON_NORMAL);
        rbnToolBar->AddTool(rbn_tool2, wxBitmapBundle::FromBitmaps(wxueImage(wxue_img::redo_png, sizeof(wxue_img::redo_png)), wxueImage(wxue_img::redo_2x_png, sizeof(wxue_img::redo_2x_png)))
            .GetBitmap(wxSize(
            FromDIP(24), FromDIP(24))), wxEmptyString, wxRIBBON_BUTTON_NORMAL);
        rbnToolBar->AddTool(rbn_tool3, wxue_img::bundle_wxPython_png().GetBitmap(wxDefaultSize), wxEmptyString,
            wxRIBBON_BUTTON_NORMAL);
        rbnToolBar->AddTool(rbn_tool_list, wxue_img::bundle_fontPicker_png().GetBitmap(wxDefaultSize), wxEmptyString,
            wxRIBBON_BUTTON_NORMAL);
    }
    rbnToolBar->Realize();

    SetSizer(box_sizer);
    SetMinSize(ConvertDialogToPixels(wxSize(200, -1)));
    Fit();
    Centre(wxBOTH);

    // Event handlers
    Bind(wxEVT_INIT_DIALOG, &ToolBarsDialog::OnInit, this);
    Bind(wxEVT_TOOL, &ToolBarsDialog::OnTool, this, m_tool_svg->GetId());

    return true;
}

namespace wxue_img
{

    const unsigned char left_svg[585] {
        120,218,133,149,77,115,155,48,16,134,251,83,52,244,210,206,216,27,173,36,36,112,236,156,219,67,175,61,228,70,195,
        135,153,96,227,1,154,214,253,245,93,33,18,3,50,182,60,48,200,187,122,180,210,238,43,109,219,183,226,105,155,102,
        121,203,202,116,23,216,15,212,200,131,135,167,109,193,202,227,107,251,146,156,178,77,209,212,191,79,135,58,205,
        118,65,149,156,179,38,184,152,170,228,87,86,237,130,239,135,164,200,130,158,81,16,64,4,253,248,190,39,35,41,3,214,
        53,201,177,205,235,230,176,11,14,73,215,148,127,191,32,112,131,74,68,122,197,233,71,189,216,132,26,87,107,4,251,
        111,104,250,207,88,232,72,196,242,43,241,78,73,183,103,109,119,174,40,138,180,108,79,20,201,166,60,86,229,49,123,
        204,203,170,218,124,230,212,242,252,177,237,154,250,53,91,255,41,211,110,191,65,160,233,5,205,79,161,252,96,98,
        37,34,208,146,154,98,63,153,48,32,52,53,195,190,49,9,50,238,27,83,16,89,219,135,159,228,19,179,96,207,236,64,78,
        194,206,198,113,197,103,32,3,154,197,192,157,213,7,89,179,126,31,60,160,208,161,9,245,198,104,201,210,161,246,12,
        65,245,207,12,178,183,78,202,189,254,185,88,188,40,80,195,48,5,26,159,48,177,43,138,232,121,1,35,184,11,21,153,
        64,114,243,48,23,59,70,180,109,139,24,5,106,192,132,215,118,119,100,151,203,16,26,227,156,36,191,130,248,176,218,
        49,61,132,175,214,180,183,214,85,2,46,81,20,132,142,66,145,197,119,56,72,121,93,226,112,80,3,7,105,133,119,56,10,
        226,5,14,229,69,58,14,229,205,220,226,188,215,23,114,136,150,96,2,68,79,99,40,41,123,203,48,222,215,159,205,175,
        6,99,97,58,242,105,17,224,16,90,12,225,80,60,87,144,86,100,68,148,110,98,218,25,232,129,87,69,118,241,11,169,72,
        239,170,108,68,154,171,108,78,186,45,179,49,107,44,179,41,101,81,103,163,56,60,157,205,3,185,37,180,17,199,19,218,
        156,115,75,105,99,206,92,105,30,103,81,106,99,202,52,243,30,99,150,115,119,236,219,227,25,233,64,247,239,134,180,
        238,90,123,161,220,61,192,243,220,98,251,206,186,62,37,47,101,119,222,224,244,60,231,192,133,138,180,186,156,232,
        180,195,34,28,202,128,226,115,245,99,107,73,112,35,140,52,20,190,66,21,42,163,156,190,6,103,97,38,78,211,101,200,
        16,141,191,142,38,75,237,50,30,138,225,177,87,231,167,255,35,175,153,33
    };
    // redo@2x.png
    const unsigned char redo_2x_png[1264] {
        137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,48,0,0,0,48,8,6,0,0,0,87,2,249,135,0,0,0,9,112,72,89,115,0,
        0,11,19,0,0,11,19,1,0,154,156,24,0,0,4,162,73,68,65,84,104,222,237,152,93,76,28,85,20,199,127,179,179,203,46,208,
        221,165,44,136,148,37,45,80,109,154,10,74,208,152,66,98,160,47,164,138,49,126,133,23,109,106,19,63,18,19,211,82,
        218,4,250,96,82,177,173,45,95,69,141,182,182,53,109,172,88,77,72,155,24,99,213,248,100,136,169,13,18,27,227,71,
        99,27,138,82,11,9,108,89,216,143,89,150,241,225,222,173,179,19,70,136,41,38,238,238,121,249,239,153,153,123,111,
        246,255,63,247,156,115,175,194,50,155,183,208,255,25,192,107,29,93,155,1,94,121,177,89,185,157,243,219,248,159,
        155,125,185,23,120,160,174,126,5,64,12,130,0,45,123,186,71,0,186,95,111,89,157,81,224,191,80,192,174,42,54,128,
        218,77,155,221,0,223,95,24,84,1,118,180,117,142,1,244,236,111,93,149,81,96,57,205,166,136,164,115,51,52,7,64,65,
        121,77,14,64,110,174,91,5,216,222,118,104,28,160,119,255,174,59,50,10,44,143,2,170,98,84,98,54,58,15,128,179,240,
        46,39,192,198,250,21,121,0,186,174,79,2,28,62,176,187,64,14,157,207,40,176,68,243,0,120,124,197,77,0,165,101,235,
        154,0,42,171,238,187,27,224,193,218,218,114,161,128,100,76,82,22,137,9,130,213,236,59,29,0,15,53,54,121,229,124,
        1,169,68,161,244,163,41,173,192,191,238,75,114,189,69,13,0,205,207,62,119,10,96,203,182,151,74,0,178,221,121,138,
        96,88,124,23,210,4,211,211,225,56,0,218,156,14,64,124,94,224,92,92,162,244,87,170,65,29,96,240,252,185,176,80,98,
        87,177,92,114,58,179,7,0,202,214,87,247,0,28,236,234,121,1,96,85,69,117,142,200,243,130,225,224,116,60,153,97,153,
        75,116,125,97,201,39,130,49,140,227,127,183,57,21,128,186,135,159,206,17,123,70,185,1,208,179,175,117,141,28,114,
        35,61,21,40,40,169,120,30,160,239,157,147,47,3,56,243,75,29,0,65,25,219,170,164,66,151,28,75,1,0,241,67,150,129,
        91,152,200,66,9,230,19,150,216,11,97,221,5,64,86,150,83,5,200,246,120,86,3,132,167,167,211,79,129,108,128,237,59,
        118,238,53,50,31,149,12,218,69,161,189,21,227,186,252,161,235,201,147,152,253,137,233,216,130,139,109,40,113,2,
        112,233,235,79,52,128,55,187,247,212,73,230,47,166,103,22,42,94,115,207,33,209,207,55,21,1,4,34,137,152,87,146,
        242,184,77,250,121,57,98,74,135,93,190,143,70,68,172,107,226,249,216,148,150,212,19,37,172,210,47,152,31,254,242,
        99,13,160,183,171,253,126,128,216,236,236,165,244,238,133,30,125,252,201,122,0,205,230,86,68,126,159,75,206,78,
        94,135,136,233,63,126,139,0,28,61,242,225,101,128,225,161,239,70,1,124,190,252,245,0,237,7,79,148,1,92,15,104,73,
        245,160,210,159,5,192,208,23,103,162,0,125,111,236,174,2,136,105,218,175,153,110,20,96,109,121,121,30,64,48,50,
        39,43,172,120,94,228,21,67,7,78,31,185,14,112,226,216,219,45,0,83,99,35,31,25,199,63,242,212,214,111,0,254,12,104,
        101,0,33,25,251,85,126,161,220,197,243,130,249,174,142,182,117,98,132,54,146,57,145,25,223,185,61,238,28,99,222,
        207,178,139,255,124,229,167,225,16,192,187,135,59,183,0,204,222,28,255,106,161,73,102,102,102,226,198,46,244,94,
        191,88,242,194,231,103,34,242,126,168,66,126,58,150,57,19,155,204,9,16,12,133,231,1,220,50,109,120,101,158,127,
        255,131,227,63,254,19,243,102,171,40,80,1,56,215,127,58,44,186,203,157,137,155,185,137,204,189,144,133,205,2,252,
        252,195,208,40,192,218,154,70,159,200,66,98,47,4,2,147,163,75,89,96,114,114,82,5,56,219,127,50,4,208,187,175,213,
        47,95,77,221,150,91,143,148,175,3,223,14,14,246,1,52,53,143,119,3,68,29,185,14,0,135,77,209,140,183,18,128,106,
        34,69,1,216,212,208,88,46,153,223,96,122,191,82,98,220,132,115,38,140,167,237,173,68,150,145,225,142,206,247,6,
        0,170,55,54,248,0,6,250,143,77,0,28,127,235,192,86,147,2,170,105,110,37,233,104,246,55,90,49,159,56,40,104,22,190,
        150,178,10,216,140,249,223,140,30,143,175,20,160,187,239,232,171,0,46,183,59,31,96,219,51,79,116,1,104,225,153,
        107,166,125,165,90,40,96,197,184,153,233,168,133,159,192,72,202,41,224,180,64,87,178,111,207,3,104,109,223,251,
        24,192,229,95,174,168,0,159,158,61,53,4,16,143,107,65,211,30,82,77,204,107,75,97,118,9,207,211,86,129,100,172,169,
        169,241,137,138,59,227,5,184,122,237,170,188,252,212,52,211,222,138,155,98,221,28,227,86,204,91,41,48,155,114,10,
        40,22,140,103,89,248,102,116,0,184,92,46,7,64,36,18,81,44,234,65,204,66,17,109,137,123,36,100,28,151,210,149,88,
        53,41,146,196,180,1,237,38,180,45,82,36,231,77,104,238,121,18,235,206,152,80,51,213,147,212,239,133,22,83,198,110,
        209,3,45,216,149,46,192,252,98,93,168,158,22,231,129,191,0,113,232,168,216,218,141,204,222,0,0,0,0,73,69,78,68,
        174,66,96,130
    };

    const unsigned char redo_png[945] {
        137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,24,0,0,0,24,8,6,0,0,0,224,119,61,248,0,0,0,9,112,72,89,115,
        0,0,11,19,0,0,11,19,1,0,154,156,24,0,0,3,99,73,68,65,84,72,199,237,149,77,104,29,85,20,199,127,231,220,59,243,222,
        228,131,180,133,8,45,85,108,77,65,168,144,38,187,34,180,10,133,110,252,64,161,32,4,4,23,74,69,16,169,139,108,68,
        138,82,234,66,65,44,72,69,44,110,42,136,238,196,101,17,65,209,69,177,80,132,208,214,36,181,49,145,166,173,137,53,
        239,189,204,155,185,247,184,152,215,215,164,77,172,214,149,224,133,203,12,195,153,255,239,158,207,11,255,245,37,
        119,50,248,228,212,101,147,86,132,104,32,213,15,34,130,56,65,122,28,7,246,14,202,93,1,222,253,252,146,249,166,117,
        4,59,162,194,138,45,221,103,236,129,231,31,219,42,127,27,240,230,137,139,22,151,74,84,111,21,94,241,126,3,76,245,
        205,245,121,94,121,230,94,185,35,224,208,251,147,102,11,237,74,172,3,80,1,81,233,10,155,5,156,250,155,33,235,108,
        221,224,57,252,220,54,89,23,48,246,246,25,75,175,38,136,130,58,233,66,244,22,47,54,111,106,145,38,142,153,249,20,
        204,186,0,12,154,3,109,62,124,121,184,171,235,87,2,102,46,64,190,216,192,84,112,78,240,137,146,36,66,45,85,234,
        53,71,86,83,188,19,182,248,132,151,198,134,120,231,227,115,76,205,121,48,16,51,48,72,92,125,237,16,13,31,157,182,
        75,95,252,92,85,135,19,196,105,21,34,21,232,132,7,132,212,11,251,70,61,31,189,62,74,179,149,243,198,241,9,126,154,
        245,168,0,17,136,198,181,190,200,87,71,70,100,149,7,205,185,6,154,58,212,11,226,21,113,66,226,35,7,246,102,60,181,
        103,144,109,91,234,56,173,108,211,36,193,204,200,234,41,175,189,240,32,79,190,250,3,83,115,74,79,170,244,166,74,
        127,95,194,154,33,114,117,69,189,34,94,241,222,120,239,197,65,246,239,222,74,136,145,197,235,77,66,168,236,74,13,
        228,121,14,64,81,22,104,170,44,155,208,106,4,174,44,22,12,108,204,214,1,212,28,154,40,154,40,143,238,140,60,50,
        122,15,167,39,46,51,126,114,158,249,70,218,181,219,125,127,224,216,193,33,90,121,155,67,31,92,228,252,213,20,95,
        143,196,66,170,106,243,178,158,7,30,77,43,192,232,14,37,111,231,28,63,245,27,215,232,199,247,221,168,81,32,93,102,
        241,250,18,227,39,127,229,244,108,29,151,69,196,71,196,5,80,193,165,235,2,28,174,166,85,46,92,160,40,10,114,81,
        146,222,164,74,182,128,153,209,10,37,227,159,205,115,118,177,31,223,27,137,237,72,104,7,68,171,238,171,37,173,181,
        1,62,115,104,234,112,117,199,212,66,155,162,93,176,119,200,152,60,239,145,78,134,205,140,201,176,137,88,72,87,60,
        250,128,56,33,136,128,4,206,190,53,114,123,31,92,56,246,144,12,31,157,182,246,239,109,92,230,248,238,74,198,211,
        87,151,216,191,179,159,193,190,5,102,27,238,230,73,204,48,131,111,127,17,166,150,250,9,90,9,3,244,108,201,86,245,
        193,42,15,6,182,167,44,156,139,184,154,163,172,215,56,114,166,201,216,246,63,216,181,185,206,46,239,110,155,89,
        51,205,156,25,171,194,39,174,58,244,143,135,119,200,95,206,162,135,79,76,219,114,195,227,51,223,201,137,35,141,
        13,122,92,168,102,133,25,177,52,98,25,105,20,9,203,69,66,104,5,202,102,73,182,49,242,253,193,7,228,142,211,116,
        207,167,179,22,66,138,203,60,46,115,184,78,3,162,130,69,195,138,72,200,35,33,15,148,141,130,178,89,146,214,75,190,
        121,246,62,249,71,23,206,190,83,75,166,181,42,233,154,40,210,1,196,60,82,46,151,148,205,146,216,142,124,253,196,
        6,185,235,27,13,224,241,137,104,34,178,34,199,70,92,14,124,57,146,8,255,175,127,187,254,4,36,215,71,244,23,26,212,
        231,0,0,0,0,73,69,78,68,174,66,96,130
    };

    const unsigned char undo_png[962] {
        137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,24,0,0,0,24,8,6,0,0,0,224,119,61,248,0,0,0,9,112,72,89,115,
        0,0,11,19,0,0,11,19,1,0,154,156,24,0,0,3,116,73,68,65,84,72,199,237,149,79,104,93,69,20,198,127,103,102,222,125,
        247,190,247,130,182,74,132,68,107,19,83,52,221,212,134,46,4,197,90,186,212,165,32,216,133,80,80,193,162,20,41,84,
        81,161,59,21,161,148,110,44,136,10,98,65,200,66,80,151,74,105,65,138,110,74,138,66,149,182,233,159,24,105,83,147,
        180,73,243,222,189,119,102,142,139,155,164,9,73,141,214,149,224,129,97,206,101,230,124,223,253,206,156,57,3,255,
        117,147,181,54,12,31,159,80,157,11,104,80,84,21,5,80,192,8,154,25,158,223,121,159,220,17,193,71,223,140,169,153,
        163,2,213,165,51,203,191,1,223,16,246,62,187,65,254,54,193,161,47,46,107,152,245,243,0,183,128,86,128,207,251,49,
        130,105,57,222,217,189,81,214,36,56,240,233,168,198,105,95,1,206,15,20,66,244,136,216,91,68,81,137,11,100,177,154,
        101,93,194,193,87,30,146,219,18,188,120,120,68,27,215,19,144,37,224,34,60,208,93,80,148,129,223,39,179,101,127,
        31,151,128,199,80,249,197,189,37,71,247,109,93,196,117,203,216,102,83,110,204,149,21,129,8,8,244,247,120,246,236,
        122,152,67,159,159,101,38,143,248,160,180,243,72,39,15,228,69,164,44,21,95,70,66,80,36,42,245,169,100,89,70,22,
        9,118,188,117,74,39,175,116,192,8,24,136,10,3,189,158,215,95,24,36,75,19,206,142,119,56,54,226,41,124,165,77,21,
        136,138,198,121,21,33,86,149,118,185,205,150,119,71,117,228,205,62,89,161,224,194,149,156,155,69,100,174,136,244,
        247,68,222,126,105,136,44,77,80,85,62,120,117,128,162,44,1,8,17,70,199,59,124,121,98,130,225,227,109,74,111,208,
        96,80,31,137,94,153,27,191,185,82,193,165,73,199,245,171,179,152,154,65,156,193,36,134,210,151,228,121,181,238,
        67,32,4,93,60,185,173,143,172,99,219,230,123,120,114,203,24,175,125,56,137,247,6,245,130,248,184,122,138,196,9,
        182,110,49,53,131,169,25,126,189,102,216,115,248,23,14,190,188,145,172,158,176,239,227,81,78,94,176,139,129,221,
        205,130,247,119,117,243,212,80,55,59,30,157,230,216,207,134,88,10,82,46,47,76,179,224,216,68,48,117,139,77,45,54,
        115,216,204,241,227,111,41,123,63,185,200,244,141,89,72,44,174,149,226,186,82,92,43,229,15,186,56,242,221,36,121,
        145,51,180,41,93,140,177,169,91,93,65,189,214,198,214,45,182,110,42,162,196,98,18,195,233,233,132,253,195,87,9,
        49,224,90,14,145,170,134,53,42,185,228,148,101,137,177,138,107,56,98,17,8,230,54,10,78,191,183,77,108,106,177,169,
        195,101,14,215,176,184,134,195,53,28,103,242,187,57,23,215,83,107,213,170,209,85,163,214,114,108,31,80,202,162,
        228,252,84,192,53,220,124,172,93,93,1,64,87,95,139,124,178,168,210,84,183,216,204,210,223,154,225,241,251,21,145,
        234,210,45,88,111,51,48,244,96,23,99,215,102,57,57,145,225,26,14,49,66,210,211,96,228,141,190,213,47,218,79,7,54,
        201,224,254,51,106,83,135,205,44,46,115,108,88,47,60,179,57,93,209,175,74,31,248,225,226,12,71,207,55,241,205,6,
        206,6,196,8,119,245,37,127,221,139,30,59,114,78,219,83,166,146,156,89,210,90,73,179,86,98,156,193,56,169,84,168,
        50,23,44,133,105,18,242,64,232,4,124,219,147,54,61,223,239,238,147,53,187,233,19,159,93,210,162,83,229,223,53,107,
        139,135,47,53,131,24,129,168,68,175,132,34,16,218,129,208,246,88,91,112,226,185,94,249,71,15,206,246,175,166,213,
        38,6,219,112,184,212,97,234,21,129,70,37,150,145,208,9,196,60,240,237,206,150,220,241,139,6,240,244,169,82,197,
        25,196,73,85,166,84,29,244,235,65,35,252,111,255,214,254,4,190,176,184,85,156,35,97,16,0,0,0,0,73,69,78,68,174,
        66,96,130
    };

}

// ************* End of generated code ***********
// DO NOT EDIT THIS COMMENT BLOCK!
//
// Code below this comment block will be preserved
// if the code for this class is re-generated.
//
// clang-format on
// ***********************************************

/////////////////// Non-generated Copyright/License Info ////////////////////
// Purpose:   Multiple Tests dialog
// Author:    Ralph Walden
// Copyright: Copyright (c) 2020-2023 KeyWorks Software (Ralph Walden)
// License:   Apache License -- see ../../LICENSE
/////////////////////////////////////////////////////////////////////////////

#include "mainframe.h"  // MainFrame -- Main window

void MainFrame::OnToolsDlg(wxCommandEvent& WXUNUSED(event))
{
    ToolBarsDialog dlg(this);
    dlg.ShowModal();
}
