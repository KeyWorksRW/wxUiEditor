////////////////////////////////////////////////////////////////////////////////
// Code generated by wxUiEditor -- see https://github.com/KeyWorksRW/wxUiEditor/
//
// DO NOT EDIT THIS FILE! Your changes will be lost if it is re-generated!
////////////////////////////////////////////////////////////////////////////////

#include <wx/persist.h>
#include <wx/persist/toplevel.h>
#include <wx/sizer.h>

#include "xrcpreview_base.h"

bool XrcPreviewBase::Create(wxWindow* parent, wxWindowID id, const wxString& title,
        const wxPoint& pos, const wxSize& size, long style, const wxString &name)
{
    if (!wxDialog::Create(parent, id, title, pos, size, style, name))
        return false;

    auto* dlg_sizer = new wxBoxSizer(wxVERTICAL);

    auto* box_sizer = new wxBoxSizer(wxVERTICAL);
    dlg_sizer->Add(box_sizer, wxSizerFlags(1).Expand().Border(wxALL));

    auto* box_sizer_4 = new wxBoxSizer(wxHORIZONTAL);
    box_sizer->Add(box_sizer_4, wxSizerFlags().Border(wxALL));

    m_staticText = new wxStaticText(this, wxID_ANY, "Preview only works with Dialogs. Be certain the dialog will be visible and has a close box in the title bar!");
    box_sizer_4->Add(m_staticText, wxSizerFlags().Border(wxALL));

    auto* box_sizer_2 = new wxBoxSizer(wxHORIZONTAL);
    box_sizer->Add(box_sizer_2, wxSizerFlags().Expand().Border(wxALL));

    m_btn_2 = new wxButton(this, wxID_ANY, "&Blank");
    m_btn_2->SetToolTip("Create XRC with a single empty object");
    box_sizer_2->Add(m_btn_2, wxSizerFlags().Border(wxALL));

    m_btn_3 = new wxButton(this, wxID_ANY, "&Generate");
    m_btn_3->SetToolTip("Generate XRC from current selected form.");
    box_sizer_2->Add(m_btn_3, wxSizerFlags().Border(wxALL));

    m_btn_4 = new wxButton(this, wxID_ANY, "&Export...");
    m_btn_4->SetToolTip("Generate XRC from current selected form.");
    box_sizer_2->Add(m_btn_4, wxSizerFlags().Border(wxALL));

    m_btn = new wxButton(this, wxID_ANY, "&Preview...");
    m_btn->SetToolTip("Load the XRC into a dialog and display it.");
    box_sizer_2->Add(m_btn, wxSizerFlags().Border(wxALL));

    m_searchCtrl = new wxSearchCtrl(this, wxID_ANY);
    m_searchCtrl->ShowSearchButton(true);
    box_sizer_2->Add(m_searchCtrl, wxSizerFlags().Border(wxALL));

    auto* box_sizer_3 = new wxBoxSizer(wxHORIZONTAL);
    box_sizer->Add(box_sizer_3, wxSizerFlags(1).Expand().Border(wxALL));

    m_scintilla = new wxStyledTextCtrl(this, wxID_ANY);
    {
        m_scintilla->SetLexer(wxSTC_LEX_XML);
        m_scintilla->SetEOLMode(wxSTC_EOL_LF);
        // Sets text margin scaled appropriately for the current DPI on Windows,
        // 5 on wxGTK or wxOSX
        m_scintilla->SetMarginLeft(wxSizerFlags::GetDefaultBorder());
        m_scintilla->SetMarginRight(wxSizerFlags::GetDefaultBorder());
        m_scintilla->SetProperty("fold", "1");
        m_scintilla->SetMarginWidth(1, 16);
        m_scintilla->SetMarginType(1, wxSTC_MARGIN_SYMBOL);
        m_scintilla->SetMarginMask(1, wxSTC_MASK_FOLDERS);
        m_scintilla->SetMarginSensitive(1, true);
        m_scintilla->MarkerDefine(wxSTC_MARKNUM_FOLDER, wxSTC_MARK_ARROW);
        m_scintilla->MarkerDefine(wxSTC_MARKNUM_FOLDEROPEN, wxSTC_MARK_ARROWDOWN);
        m_scintilla->MarkerDefine(wxSTC_MARKNUM_FOLDEROPENMID, wxSTC_MARK_ARROWDOWN);
        m_scintilla->MarkerDefine(wxSTC_MARKNUM_FOLDEREND, wxSTC_MARK_ARROW);
        m_scintilla->MarkerDefine(wxSTC_MARKNUM_FOLDERMIDTAIL, wxSTC_MARK_BACKGROUND);
        m_scintilla->MarkerDefine(wxSTC_MARKNUM_FOLDERSUB, wxSTC_MARK_BACKGROUND);
        m_scintilla->MarkerDefine(wxSTC_MARKNUM_FOLDERTAIL, wxSTC_MARK_BACKGROUND);
        m_scintilla->SetBackSpaceUnIndents(true);
    }
    box_sizer_3->Add(m_scintilla, wxSizerFlags(1).Expand().Border(wxALL));

    auto* stdBtn = CreateStdDialogButtonSizer(wxCLOSE|wxNO_DEFAULT);
    dlg_sizer->Add(CreateSeparatedSizer(stdBtn), wxSizerFlags().Expand().Border(wxALL));

    SetSizer(dlg_sizer);
    SetMinSize(wxSize(800, 600));
    Fit();
    Centre(wxBOTH);

    wxPersistentRegisterAndRestore(this, "XrcPreviewBase");

    // Event handlers
    Bind(wxEVT_INIT_DIALOG, &XrcPreviewBase::OnInit, this);
    m_btn_2->Bind(wxEVT_BUTTON, &XrcPreviewBase::OnCreate, this);
    m_btn_3->Bind(wxEVT_BUTTON, &XrcPreviewBase::OnXrcCopy, this);
    m_btn_4->Bind(wxEVT_BUTTON, &XrcPreviewBase::OnExport, this);
    m_btn->Bind(wxEVT_BUTTON, &XrcPreviewBase::OnPreview, this);
    m_searchCtrl->Bind(wxEVT_SEARCHCTRL_SEARCH_BTN, &XrcPreviewBase::OnSearch, this);

    return true;
}
