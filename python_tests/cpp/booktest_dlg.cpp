///////////////////////////////////////////////////////////////////////////////
// Code generated by wxUiEditor - see https://github.com/KeyWorksRW/wxUiEditor/
//
// Do not edit any code above the "End of generated code" comment block.
// Any changes before that block will be lost if it is re-generated!
///////////////////////////////////////////////////////////////////////////////

// clang-format off

#include <wx/bitmap.h>
#include <wx/button.h>
#include <wx/colour.h>
#include <wx/icon.h>
#include <wx/image.h>
#include <wx/panel.h>
#include <wx/settings.h>
#include <wx/sizer.h>

#include "images.h"

#include "booktest_dlg.h"

#include <wx/mstream.h>  // memory stream classes

// Convert a data array into a wxImage
inline wxImage wxueImage(const unsigned char* data, size_t size_data)
{
    wxMemoryInputStream strm(data, size_data);
    wxImage image;
    image.LoadFile(strm);
    return image;
};

namespace wxue_img
{
    extern const unsigned char english_png[541];
    extern const unsigned char french_png[252];
    extern const unsigned char japanese_png[377];
}

bool BookTestDlg::Create(wxWindow* parent, wxWindowID id, const wxString& title,
    const wxPoint& pos, const wxSize& size, long style, const wxString &name)
{
    if (!wxDialog::Create(parent, id, title, pos, size, style, name))
        return false;
    if (!wxImage::FindHandler(wxBITMAP_TYPE_PNG))
        wxImage::AddHandler(new wxPNGHandler);

    auto* dlg_sizer = new wxBoxSizer(wxVERTICAL);
    dlg_sizer->SetMinSize(400, 400);

    m_notebook = new wxAuiNotebook(this, wxID_ANY, wxDefaultPosition, wxDefaultSize,
        wxAUI_NB_TOP|wxAUI_NB_TAB_SPLIT|wxAUI_NB_TAB_MOVE|wxAUI_NB_SCROLL_BUTTONS|wxAUI_NB_CLOSE_ON_ACTIVE_TAB|wxAUI_NB_MIDDLE_CLICK_CLOSE
    );
    dlg_sizer->Add(m_notebook, wxSizerFlags(1).Expand().Border(wxALL));

    auto* page_2 = new wxPanel(m_notebook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_notebook->AddPage(page_2, "ChoiceBook");

    auto* page_sizer_1 = new wxBoxSizer(wxVERTICAL);

    m_choicebook = new wxChoicebook(page_2, wxID_ANY);
    m_choicebook->SetMinSize(wxSize(400, 400));
    page_sizer_1->Add(m_choicebook, wxSizerFlags().Border(wxALL));

    auto* btn = new wxButton(m_choicebook, wxID_ANY, "First");
    m_choicebook->GetControlSizer()->Add(btn, wxSizerFlags().Expand().Border(wxALL));

    auto* btn_2 = new wxButton(m_choicebook, wxID_ANY, "Last");
    m_choicebook->GetControlSizer()->Add(btn_2, wxSizerFlags().Expand().Border(wxALL));

    auto* page_20 = new wxPanel(m_choicebook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_choicebook->AddPage(page_20, "English");
    page_20->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));

    auto* parent_sizer_13 = new wxBoxSizer(wxVERTICAL);

    m_staticText_16 = new wxStaticText(page_20, wxID_ANY, "This is a sentence in English.");
    parent_sizer_13->Add(m_staticText_16, wxSizerFlags().Border(wxALL));

    auto* box_sizer = new wxBoxSizer(wxVERTICAL);

    m_staticText_2 = new wxStaticText(page_20, wxID_ANY,
        "The First and Last buttons above are children of the wcChoicebook. They are added using choicebook->GetControlSizer() which allows them to share the layout space for the wxChoice control.");
    m_staticText_2->Wrap(380);
    box_sizer->Add(m_staticText_2, wxSizerFlags().Expand().Border(wxALL));

    parent_sizer_13->Add(box_sizer, wxSizerFlags().Border(wxALL));
    page_20->SetSizerAndFit(parent_sizer_13);

    auto* page_21 = new wxPanel(m_choicebook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_choicebook->AddPage(page_21, wxString::FromUTF8("Français"));
    page_21->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));

    auto* parent_sizer__2 = new wxBoxSizer(wxVERTICAL);

    m_staticText_17 = new wxStaticText(page_21, wxID_ANY, wxString::FromUTF8("Ceci est une phrase en français."));
    parent_sizer__2->Add(m_staticText_17, wxSizerFlags().Border(wxALL));

    auto* box_sizer_3 = new wxBoxSizer(wxVERTICAL);

    m_staticText__3 = new wxStaticText(page_21, wxID_ANY,
        "The First and Last buttons above are children of the wcChoicebook. They are added using choicebook->GetControlSizer() which allows them to share the layout space for the wxChoice control.");
    m_staticText__3->Wrap(390);
    box_sizer_3->Add(m_staticText__3, wxSizerFlags().Expand().Border(wxALL));

    parent_sizer__2->Add(box_sizer_3, wxSizerFlags().Border(wxALL));
    page_21->SetSizerAndFit(parent_sizer__2);

    auto* page_22 = new wxPanel(m_choicebook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_choicebook->AddPage(page_22, wxString::FromUTF8("日本語"));
    page_22->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));

    auto* parent_sizer_14 = new wxBoxSizer(wxVERTICAL);

    m_staticText_18 = new wxStaticText(page_22, wxID_ANY, wxString::FromUTF8("これは日本語の文章です。"));
    parent_sizer_14->Add(m_staticText_18, wxSizerFlags().Border(wxALL));

    auto* box_sizer_2 = new wxBoxSizer(wxVERTICAL);

    m_staticText__2 = new wxStaticText(page_22, wxID_ANY,
        "The First and Last buttons above are children of the wcChoicebook. They are added using choicebook->GetControlSizer() which allows them to share the layout space for the wxChoice control.");
    m_staticText__2->Wrap(390);
    box_sizer_2->Add(m_staticText__2, wxSizerFlags().Expand().Border(wxALL));

    parent_sizer_14->Add(box_sizer_2, wxSizerFlags().Border(wxALL));
    page_22->SetSizerAndFit(parent_sizer_14);
    page_2->SetSizerAndFit(page_sizer_1);

    auto* page_3 = new wxPanel(m_notebook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_notebook->AddPage(page_3, "ListBook");

    auto* page_sizer_2 = new wxBoxSizer(wxVERTICAL);

    m_listbook = new wxListbook(page_3, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxLB_LEFT);
    {
#if wxCHECK_VERSION(3, 1, 6)
        wxBookCtrlBase::Images bundle_list;
        bundle_list.push_back(wxue_img::bundle_english_png());
        bundle_list.push_back(wxue_img::bundle_french_png());
        bundle_list.push_back(wxue_img::bundle_japanese_png());
        m_listbook->SetImages(bundle_list);

#else  // older version of wxWidgets that don't support bitmap bundles

        auto img_list = new wxImageList;
        auto img_0 = wxueImage(wxue_img::english_png, sizeof(wxue_img::english_png));
        img_list->Add(img_0);
        auto img_1 = wxueImage(wxue_img::french_png, sizeof(wxue_img::french_png));
        img_list->Add(img_1);
        auto img_2 = wxueImage(wxue_img::japanese_png, sizeof(wxue_img::japanese_png));
        img_list->Add(img_2);
        m_listbook->AssignImageList(img_list);
#endif  // wxCHECK_VERSION(3, 1, 6)
    }
    m_listbook->SetMinSize(wxSize(400, 400));
    page_sizer_2->Add(m_listbook, wxSizerFlags().Border(wxALL));

    auto* page_6 = new wxPanel(m_listbook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_listbook->AddPage(page_6, "English", false, 0);
    page_6->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));

    auto* parent_sizer = new wxBoxSizer(wxVERTICAL);

    m_staticText_6 = new wxStaticText(page_6, wxID_ANY, "This is a sentence in English.");
    parent_sizer->Add(m_staticText_6, wxSizerFlags().Border(wxALL));
    page_6->SetSizerAndFit(parent_sizer);

    auto* page_7 = new wxPanel(m_listbook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_listbook->AddPage(page_7, wxString::FromUTF8("Français"), false, 1);
    page_7->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));

    auto* parent_sizer_2 = new wxBoxSizer(wxVERTICAL);

    m_staticText_3 = new wxStaticText(page_7, wxID_ANY, wxString::FromUTF8("Ceci est une phrase en français."));
    parent_sizer_2->Add(m_staticText_3, wxSizerFlags().Border(wxALL));
    page_7->SetSizerAndFit(parent_sizer_2);

    auto* page_8 = new wxPanel(m_listbook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_listbook->AddPage(page_8, wxString::FromUTF8("日本語"), false, 2);
    page_8->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));

    auto* parent_sizer_3 = new wxBoxSizer(wxVERTICAL);

    m_staticText_7 = new wxStaticText(page_8, wxID_ANY, wxString::FromUTF8("これは日本語の文章です。"));
    parent_sizer_3->Add(m_staticText_7, wxSizerFlags().Border(wxALL));
    page_8->SetSizerAndFit(parent_sizer_3);

    page_3->SetSizerAndFit(page_sizer_2);

    auto* page_4 = new wxPanel(m_notebook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_notebook->AddPage(page_4, "NoteBook");

    auto* page_sizer_3 = new wxBoxSizer(wxVERTICAL);

    m_notebook_2 = new wxNotebook(page_4, wxID_ANY);
    {
#if wxCHECK_VERSION(3, 1, 6)
        wxBookCtrlBase::Images bundle_list;
        bundle_list.push_back(wxue_img::bundle_english_png());
        bundle_list.push_back(wxue_img::bundle_french_png());
        bundle_list.push_back(wxue_img::bundle_japanese_png());
        m_notebook_2->SetImages(bundle_list);

#else  // older version of wxWidgets that don't support bitmap bundles

        auto img_list = new wxImageList;
        auto img_0 = wxueImage(wxue_img::english_png, sizeof(wxue_img::english_png));
        img_list->Add(img_0);
        auto img_1 = wxueImage(wxue_img::french_png, sizeof(wxue_img::french_png));
        img_list->Add(img_1);
        auto img_2 = wxueImage(wxue_img::japanese_png, sizeof(wxue_img::japanese_png));
        img_list->Add(img_2);
        m_notebook_2->AssignImageList(img_list);
#endif  // wxCHECK_VERSION(3, 1, 6)
    }
    m_notebook_2->SetMinSize(wxSize(400, 400));
    page_sizer_3->Add(m_notebook_2, wxSizerFlags().Expand().Border(wxALL));

    auto* page_9 = new wxPanel(m_notebook_2, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_notebook_2->AddPage(page_9, "English", false, 0);
    page_9->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));

    auto* parent_sizer_4 = new wxBoxSizer(wxVERTICAL);

    m_staticText_4 = new wxStaticText(page_9, wxID_ANY, "This is a sentence in English.");
    parent_sizer_4->Add(m_staticText_4, wxSizerFlags().Border(wxALL));
    page_9->SetSizerAndFit(parent_sizer_4);

    auto* page_10 = new wxPanel(m_notebook_2, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_notebook_2->AddPage(page_10, wxString::FromUTF8("Français"), false, 1);
    page_10->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));

    auto* parent_sizer_5 = new wxBoxSizer(wxVERTICAL);

    m_staticText_8 = new wxStaticText(page_10, wxID_ANY, wxString::FromUTF8("Ceci est une phrase en français."));
    parent_sizer_5->Add(m_staticText_8, wxSizerFlags().Border(wxALL));
    page_10->SetSizerAndFit(parent_sizer_5);

    auto* page_11 = new wxPanel(m_notebook_2, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_notebook_2->AddPage(page_11, wxString::FromUTF8("日本語"), false, 2);
    page_11->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));

    auto* parent_sizer_6 = new wxBoxSizer(wxVERTICAL);

    m_staticText_9 = new wxStaticText(page_11, wxID_ANY, wxString::FromUTF8("これは日本語の文章です。"));
    parent_sizer_6->Add(m_staticText_9, wxSizerFlags().Border(wxALL));
    page_11->SetSizerAndFit(parent_sizer_6);

    page_4->SetSizerAndFit(page_sizer_3);

    auto* page_5 = new wxPanel(m_notebook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_notebook->AddPage(page_5, "ToolBook");

    auto* page_sizer_4 = new wxBoxSizer(wxVERTICAL);

    m_toolbook = new wxToolbook(page_5, wxID_ANY);
    {
#if wxCHECK_VERSION(3, 1, 6)
        wxBookCtrlBase::Images bundle_list;
        bundle_list.push_back(wxue_img::bundle_english_png());
        bundle_list.push_back(wxue_img::bundle_french_png());
        bundle_list.push_back(wxue_img::bundle_japanese_png());
        m_toolbook->SetImages(bundle_list);

#else  // older version of wxWidgets that don't support bitmap bundles

        auto img_list = new wxImageList;
        auto img_0 = wxueImage(wxue_img::english_png, sizeof(wxue_img::english_png));
        img_list->Add(img_0);
        auto img_1 = wxueImage(wxue_img::french_png, sizeof(wxue_img::french_png));
        img_list->Add(img_1);
        auto img_2 = wxueImage(wxue_img::japanese_png, sizeof(wxue_img::japanese_png));
        img_list->Add(img_2);
        m_toolbook->AssignImageList(img_list);
#endif  // wxCHECK_VERSION(3, 1, 6)
    }
    m_toolbook->SetMinSize(wxSize(400, 400));
    page_sizer_4->Add(m_toolbook, wxSizerFlags().Border(wxALL));

    auto* page_12 = new wxPanel(m_toolbook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_toolbook->AddPage(page_12, "English", false, 0);
    page_12->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));

    auto* parent_sizer_7 = new wxBoxSizer(wxVERTICAL);

    m_staticText_5 = new wxStaticText(page_12, wxID_ANY, "This is a sentence in English.");
    parent_sizer_7->Add(m_staticText_5, wxSizerFlags().Border(wxALL));
    page_12->SetSizerAndFit(parent_sizer_7);

    auto* page_13 = new wxPanel(m_toolbook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_toolbook->AddPage(page_13, wxString::FromUTF8("Français"), false, 1);
    page_13->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));

    auto* parent_sizer_8 = new wxBoxSizer(wxVERTICAL);

    m_staticText_10 = new wxStaticText(page_13, wxID_ANY, wxString::FromUTF8("Ceci est une phrase en français."));
    parent_sizer_8->Add(m_staticText_10, wxSizerFlags().Border(wxALL));
    page_13->SetSizerAndFit(parent_sizer_8);

    auto* page_14 = new wxPanel(m_toolbook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_toolbook->AddPage(page_14, wxString::FromUTF8("日本語"), false, 2);
    page_14->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));

    auto* parent_sizer_9 = new wxBoxSizer(wxVERTICAL);

    m_staticText_11 = new wxStaticText(page_14, wxID_ANY, wxString::FromUTF8("これは日本語の文章です。"));
    parent_sizer_9->Add(m_staticText_11, wxSizerFlags().Border(wxALL));
    page_14->SetSizerAndFit(parent_sizer_9);

    page_5->SetSizerAndFit(page_sizer_4);

    auto* page = new wxPanel(m_notebook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_notebook->AddPage(page, "TreeBook");

    auto* page_sizer_5 = new wxBoxSizer(wxVERTICAL);

    m_treebook = new wxTreebook(page, wxID_ANY);
    {
#if wxCHECK_VERSION(3, 1, 6)
        wxBookCtrlBase::Images bundle_list;
        bundle_list.push_back(wxue_img::bundle_english_png());
        bundle_list.push_back(wxue_img::bundle_french_png());
        bundle_list.push_back(wxue_img::bundle_japanese_png());
        m_treebook->SetImages(bundle_list);

#else  // older version of wxWidgets that don't support bitmap bundles

        auto img_list = new wxImageList;
        auto img_0 = wxueImage(wxue_img::english_png, sizeof(wxue_img::english_png));
        img_list->Add(img_0);
        auto img_1 = wxueImage(wxue_img::re_png, sizeof(wxue_img::re_png));
        img_list->Add(img_1);
        auto img_2 = wxueImage(wxue_img::er_png, sizeof(wxue_img::er_png));
        img_list->Add(img_2);
        auto img_3 = wxueImage(wxue_img::french_png, sizeof(wxue_img::french_png));
        img_list->Add(img_3);
        auto img_4 = wxueImage(wxue_img::japanese_png, sizeof(wxue_img::japanese_png));
        img_list->Add(img_4);
        m_treebook->AssignImageList(img_list);
#endif  // wxCHECK_VERSION(3, 1, 6)
    }
    m_treebook->SetMinSize(wxSize(400, 400));
    page_sizer_5->Add(m_treebook, wxSizerFlags().Border(wxALL));

    auto* page_15 = new wxPanel(m_treebook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_treebook->AddPage(page_15, "English", false, 0);
    page_15->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));

    auto* parent_sizer_10 = new wxBoxSizer(wxVERTICAL);

    m_staticText_12 = new wxStaticText(page_15, wxID_ANY, "This is a sentence in English.");
    parent_sizer_10->Add(m_staticText_12, wxSizerFlags().Border(wxALL));
    page_15->SetSizerAndFit(parent_sizer_10);

    auto* page_16 = new wxPanel(m_treebook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_treebook->AddSubPage(page_16, "British", false, 1);
    page_16->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));

    auto* page_sizer = new wxBoxSizer(wxVERTICAL);

    m_staticText_13 = new wxStaticText(page_16, wxID_ANY, "Theatre");
    page_sizer->Add(m_staticText_13, wxSizerFlags().Border(wxALL));
    page_16->SetSizerAndFit(page_sizer);

    auto* page_17 = new wxPanel(m_treebook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_treebook->AddSubPage(page_17, "United States", false, 2);
    page_17->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));

    auto* page_sizer_6 = new wxBoxSizer(wxVERTICAL);

    m_staticText_14 = new wxStaticText(page_17, wxID_ANY, "Theater");
    page_sizer_6->Add(m_staticText_14, wxSizerFlags().Border(wxALL));
    page_17->SetSizerAndFit(page_sizer_6);

    auto* page_18 = new wxPanel(m_treebook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_treebook->AddPage(page_18, wxString::FromUTF8("Français"), false, 3);
    page_18->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));

    auto* parent_sizer_11 = new wxBoxSizer(wxVERTICAL);

    m_staticText_15 = new wxStaticText(page_18, wxID_ANY, wxString::FromUTF8("Ceci est une phrase en français."));
    parent_sizer_11->Add(m_staticText_15, wxSizerFlags().Border(wxALL));
    page_18->SetSizerAndFit(parent_sizer_11);

    auto* page_19 = new wxPanel(m_treebook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_treebook->AddPage(page_19, wxString::FromUTF8("日本語"), false, 4);
    page_19->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));

    auto* parent_sizer_12 = new wxBoxSizer(wxVERTICAL);

    m_staticText = new wxStaticText(page_19, wxID_ANY, wxString::FromUTF8("これは日本語の文章です。"));
    parent_sizer_12->Add(m_staticText, wxSizerFlags().Border(wxALL));
    page_19->SetSizerAndFit(parent_sizer_12);

    page->SetSizerAndFit(page_sizer_5);

    auto* stdBtn = CreateStdDialogButtonSizer(wxOK|wxCANCEL);
    dlg_sizer->Add(CreateSeparatedSizer(stdBtn), wxSizerFlags().Expand().Border(wxALL));

    SetSizerAndFit(dlg_sizer);
    Centre(wxBOTH);

    // Event handlers
    btn->Bind(wxEVT_BUTTON,
        [this](wxCommandEvent&)
        {
            m_choicebook->SetSelection(0);
        });
    btn_2->Bind(wxEVT_BUTTON,
        [this](wxCommandEvent&)
        {
            m_choicebook->SetSelection(2);
        });

    return true;
}

namespace wxue_img
{

    const unsigned char er_png[302] {
        137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,16,0,0,0,16,8,6,0,0,0,31,243,255,97,0,0,0,9,112,72,89,
        115,0,0,11,19,0,0,11,19,1,0,154,156,24,0,0,0,224,73,68,65,84,56,203,221,210,177,74,131,65,16,4,224,47,26,68,
        33,69,138,32,216,11,166,248,81,132,148,105,124,17,75,123,75,9,136,248,2,41,82,88,40,216,219,8,150,105,140,
        54,177,240,17,44,4,11,81,180,177,139,32,177,89,225,56,238,7,91,93,56,150,155,185,27,118,103,151,63,31,139,
        5,108,29,21,190,240,81,243,175,66,27,239,41,184,138,27,204,147,115,129,149,224,59,129,157,39,252,118,42,48,
        197,125,168,55,176,131,103,156,101,2,15,88,67,47,222,129,126,144,85,86,234,30,102,104,37,2,131,244,65,51,242,
        86,228,81,38,208,198,18,186,120,12,236,169,36,176,28,166,93,23,12,187,196,107,221,20,126,4,94,98,34,167,209,
        119,41,58,37,112,33,242,24,159,56,200,248,97,152,214,250,205,78,236,135,73,99,28,226,42,238,199,217,20,118,
        235,22,233,14,183,216,192,38,222,112,132,147,224,231,81,229,36,90,254,47,241,13,232,231,48,28,126,54,168,173,
        0,0,0,0,73,69,78,68,174,66,96,130
    };

    const unsigned char re_png[305] {
        137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,16,0,0,0,16,8,6,0,0,0,31,243,255,97,0,0,0,9,112,72,89,
        115,0,0,11,19,0,0,11,19,1,0,154,156,24,0,0,0,227,73,68,65,84,56,203,221,210,33,75,195,81,20,5,240,223,116,
        168,32,200,194,112,172,235,146,6,193,184,44,88,76,102,147,205,34,171,54,139,31,65,176,24,5,63,130,32,26,108,
        99,12,44,43,166,205,160,162,77,16,68,248,91,174,240,248,239,109,125,158,114,223,59,239,190,243,222,61,28,102,
        30,243,25,110,3,53,124,36,220,42,182,176,130,183,156,80,29,5,46,163,22,113,161,138,115,252,36,124,31,107,147,
        4,158,208,196,54,42,56,195,59,118,99,223,194,3,6,33,62,38,112,146,112,139,248,196,81,233,177,86,244,238,40,
        171,96,148,172,215,177,140,67,236,103,198,222,196,77,117,138,193,75,81,123,24,150,206,238,208,205,253,32,197,
        75,212,91,92,77,106,154,155,34,240,140,71,28,135,31,127,216,11,99,219,57,19,15,74,34,237,48,114,128,83,92,
        224,43,70,168,164,65,42,240,141,123,188,38,2,67,92,163,17,185,88,136,92,116,34,27,255,1,191,112,157,46,178,
        241,156,153,71,0,0,0,0,73,69,78,68,174,66,96,130
    };

}

// ************* End of generated code ***********
// DO NOT EDIT THIS COMMENT BLOCK!
//
// Code below this comment block will be preserved
// if the code for this class is re-generated.
//
// clang-format on
// ***********************************************

/////////////////// Non-generated Copyright/License Info ////////////////////
// Purpose:   Common controls dialog
// Author:    Ralph Walden
// Copyright: Copyright (c) 2020-2023 KeyWorks Software (Ralph Walden)
// License:   Apache License -- see ../../LICENSE
/////////////////////////////////////////////////////////////////////////////

#include "mainframe.h"  // auto-generated: ../wxui_generated/mainframe_base.h and ../wxui_generated/mainframe_base.cpp

void MainFrame::OnBookTestDlg(wxCommandEvent& WXUNUSED(event))
{
    BookTestDlg dlg(this);
    dlg.ShowModal();
}
