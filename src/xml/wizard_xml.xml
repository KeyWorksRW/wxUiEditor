inline const char* wizard_xml = R"===(<?xml version="1.0"?>
<!DOCTYPE GeneratorDefinitions SYSTEM "gen.dtd">
<GeneratorDefinitions>
	<gen class="wxWizard" image="wxWizard" type="wizard">
		<inherits class="C++ Settings" />
		<inherits class="C++ Derived Class Settings" />
		<inherits class="wxPython Settings" />
		<inherits class="XRC Settings" />
		<inherits class="wxTopLevelWindow" />
		<inherits class="wxWindow" />
		<inherits class="Window Events" />
		<property name="class_name" type="string"
			help="The name of the base class.">MyWizardBase</property>
		<property name="title" type="string_escapes"
			help="The text to display on the Wizard's title bar." />
		<property name="style" type="bitlist">
			<option name="wxCAPTION"
				help="Puts a caption on the dialog box." />
			<option name="wxDEFAULT_DIALOG_STYLE"
				help="Equivalent to a combination of wxCAPTION, wxCLOSE_BOX and wxSYSTEM_MENU (the last one is not used under Unix)" />
			<option name="wxRESIZE_BORDER"
				help="Display a resizeable frame around the window." />
			<option name="wxSYSTEM_MENU"
				help="Display a system menu." />
			<option name="wxCLOSE_BOX"
				help="Displays a close box on the dialog." />
			<option name="wxMAXIMIZE_BOX"
				help="Displays a maximize box on the dialog." />
			<option name="wxMINIMIZE_BOX"
				help="Displays a minimize box on the dialog." />
			<option name="wxSTAY_ON_TOP"
				help="The dialog stays on top of all other windows." />
			<option name="wxDIALOG_NO_PARENT"
				help="By default, a dialog created with a NULL parent window will be given the application's top level window as parent. Use this style to prevent this from happening and create an orphan dialog. This is not recommended for modal dialogs." />
			wxDEFAULT_DIALOG_STYLE
		</property>
		<property name="extra_style" type="bitlist">
			<option name="wxWIZARD_EX_HELPBUTTON"
				help="Shows a Help button using wxID_HELP." />
		</property>
		<property name="border" type="int"
			help="Sets the width of the border around the page area." />
		<property name="center" type="option"
			help="Centers the dialog box on the display in the chosen direction.">
			<option name="" />
			<option name="wxHORIZONTAL" />
			<option name="wxVERTICAL" />
			<option name="wxBOTH" />
			wxBOTH
		</property>
		<property name="bitmap" type="image"
			help="Bitmap to display on the left side of the wizard (default: none)." />
		<property name="bmp_placement" type="bitlist">
			<option name="wxWIZARD_VALIGN_TOP"
				help="The bitmap is vertically aligned at the top." />
			<option name="wxWIZARD_VALIGN_CENTRE"
				help="The bitmap is centered vertically." />
			<option name="wxWIZARD_VALIGN_BOTTOM"
				help="The bitmap is vertically aligned at the bottom." />
			<option name="wxWIZARD_HALIGN_LEFT"
				help="The bitmap is horizontally aligned to the left." />
			<option name="wxWIZARD_HALIGN_CENTRE"
				help="The bitmap is horizontally aligned in the center." />
			<option name="wxWIZARD_HALIGN_RIGHT"
				help="The bitmap is horizontally aligned to the right." />
			<option name="wxWIZARD_TILE"
				help="The bitmap is tiled." />
		</property>
		<property name="bmp_min_width" type="int"
			help="Sets the minimum width for the bitmap that will be constructed to contain the actual wizard or page bitmap if a non-zero bitmap placement flag has been set. If this is not set when using bitmap placement, the initial layout may be incorrect.">-1</property>
		<property name="bmp_background_colour" type="wxColour"
			help="Sets the colour that should be used to fill the area not taken up by the wizard or page bitmap, if a non-zero bitmap placement flag has been set." />
		<event name="wxEVT_INIT_DIALOG" class="wxInitDialogEvent"
			help="Generated when the Wizard is being initialized." />
		<event name="wxEVT_WIZARD_PAGE_CHANGED" class="wxWizardEvent"
			help="This event cannot be vetoed." />
		<event name="wxEVT_WIZARD_PAGE_CHANGING" class="wxWizardEvent"
			help="This event can be vetoed." />
		<event name="wxEVT_WIZARD_BEFORE_PAGE_CHANGED" class="wxWizardEvent"
			help="Generated after Next is clicked but before GetNext is called. Unlike wxEVT_WIZARD_PAGE_CHANGING, the handler for this function can change state that might affect the return value of GetNext. This event can be vetoed." />
		<event name="wxEVT_WIZARD_PAGE_SHOWN" class="wxWizardEvent"
			help="The page was shown and laid out (this event cannot be vetoed)." />
		<event name="wxEVT_WIZARD_CANCEL" class="wxWizardEvent"
			help="The user attempted to cancel the wizard (this event may be vetoed)." />
		<event name="wxEVT_WIZARD_HELP" class="wxWizardEvent"
			help="Generated when the help button is pressed. " />
		<event name="wxEVT_WIZARD_FINISHED" class="wxWizardEvent"
			help="Generated when the finish button is pressed." />
	</gen>

	<gen class="wxWizardPageSimple" image="wxWizardPageSimple" type="wizardpagesimple">
		<inherits class="wxWindow" />
		<inherits class="Window Events" />
		<property name="var_name" type="string">wizPage</property>
		<property name="bitmap" type="image"
			help="Page-specific bitmap (default: none)." />
	</gen>
</GeneratorDefinitions>)===";
