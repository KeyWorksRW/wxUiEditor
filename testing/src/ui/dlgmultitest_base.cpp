////////////////////////////////////////////////////////////////////////////////
// Code generated by wxUiEditor -- see https://github.com/KeyWorksRW/wxUiEditor/
//
// DO NOT EDIT THIS FILE! Your changes will be lost if it is re-generated!
////////////////////////////////////////////////////////////////////////////////

#include "pch.h"

#include <wx/artprov.h>
#include <wx/checkbox.h>
#include <wx/gbsizer.h>
#include <wx/panel.h>
#include <wx/sizer.h>

#include "dlgmultitest_base.h"

#include <wx/mstream.h>  // Memory stream classes

// Convert a data array into a wxImage
inline wxImage GetImageFromArray(const unsigned char* data, size_t size_data)
{
    wxMemoryInputStream strm(data, size_data);
    wxImage image;
    image.LoadFile(strm);
    return image;
};

namespace wxue_img
{
    extern const unsigned char disabled_png[437];
    extern const unsigned char focus_png[517];
    extern const unsigned char normal_png[508];
    extern const unsigned char wiztest_png[1239];
}

bool DlgMultiTestBase::Create(wxWindow *parent, wxWindowID id, const wxString &title,
        const wxPoint&pos, const wxSize& size, long style, const wxString &name)
{
    if (!wxDialog::Create(parent, id, title, pos, size, style, name))
        return false;

    if (!wxImage::FindHandler(wxBITMAP_TYPE_PNG))
        wxImage::AddHandler(new wxPNGHandler);

    auto box_sizer_2 = new wxBoxSizer(wxVERTICAL);

    m_notebook = new wxNotebook(this, wxID_ANY);
    box_sizer_2->Add(m_notebook, wxSizerFlags(1).Expand().Border(wxALL));

    auto page_2 = new wxPanel(m_notebook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_notebook->AddPage(page_2, "Buttons");

    auto box_sizer_3 = new wxBoxSizer(wxVERTICAL);

    auto grid_bag_sizer = new wxGridBagSizer();
    box_sizer_3->Add(grid_bag_sizer, wxSizerFlags().Border(wxALL));

    m_btn = new wxButton(page_2, wxID_ANY, "Normal");
    m_btn->SetToolTip("A normal button");
    grid_bag_sizer->Add(m_btn, wxGBPosition(0, 0), wxGBSpan(1, 1), wxALL, 5);

    m_btn_2 = new wxButton(page_2, wxID_ANY);
    m_btn_2->SetLabelMarkup("<b><span foreground='red'>Markup</span></b>");
    m_btn_2->SetToolTip("Text should be Bold and Red.");
    grid_bag_sizer->Add(m_btn_2, wxGBPosition(0, 1), wxGBSpan(1, 1), wxALL, 5);

    m_btn_bitmaps = new wxButton(page_2, wxID_ANY, "Bitmaps");
    m_btn_bitmaps->SetBitmap(GetImageFromArray(wxue_img::normal_png, sizeof(wxue_img::normal_png)));
    m_btn_bitmaps->SetBitmapDisabled(GetImageFromArray(wxue_img::disabled_png, sizeof(wxue_img::disabled_png)));
    m_btn_bitmaps->SetBitmapCurrent(GetImageFromArray(wxue_img::focus_png, sizeof(wxue_img::focus_png)));
    m_btn_bitmaps->SetToolTip("Bitmap should change when mouse is over button, or button is disabled.");
    grid_bag_sizer->Add(m_btn_bitmaps, wxGBPosition(0, 2), wxGBSpan(1, 1), wxALL, 5);

    m_btn_4 = new wxButton(page_2, wxID_ANY, "Right");
    m_btn_4->SetBitmap(GetImageFromArray(wxue_img::normal_png, sizeof(wxue_img::normal_png)));
    m_btn_4->SetBitmapPosition(wxRIGHT);
    m_btn_4->SetToolTip("Bitmap should be on the right side.");
    grid_bag_sizer->Add(m_btn_4, wxGBPosition(0, 3), wxGBSpan(1, 1), wxALL, 5);

    m_toggleBtn = new wxToggleButton(page_2, wxID_ANY, "Toggle", wxDefaultPosition, wxDefaultSize, wxBU_EXACTFIT);
    m_toggleBtn->SetToolTip("Style set to exact fit, so it should be a bit smaller than usual.");
    grid_bag_sizer->Add(m_toggleBtn, wxGBPosition(0, 4), wxGBSpan(1, 1), wxALL, 5);

    auto disable_bitmaps = new wxCheckBox(page_2, wxID_ANY, "Disable");
    grid_bag_sizer->Add(disable_bitmaps, wxGBPosition(1, 2), wxGBSpan(1, 1), wxALL, 5);

    auto box_sizer_7 = new wxBoxSizer(wxHORIZONTAL);
    box_sizer_3->Add(box_sizer_7, wxSizerFlags().Border(wxALL));

    m_btn_5 = new wxCommandLinkButton(page_2, wxID_ANY, "Command", "wxCommandLinkButton");
    m_btn_5->SetBitmap(wxArtProvider::GetBitmap(wxART_GO_FORWARD, wxART_OTHER));
    m_btn_5->SetToolTip("The bitmap for this is from Art Provider.");
    box_sizer_7->Add(m_btn_5, wxSizerFlags().Border(wxALL));

    page_2->SetSizerAndFit(box_sizer_3);

    auto page_3 = new wxPanel(m_notebook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_notebook->AddPage(page_3, "Banners");

    auto box_sizer_4 = new wxBoxSizer(wxVERTICAL);

    auto box_sizer_8 = new wxBoxSizer(wxHORIZONTAL);
    box_sizer_4->Add(box_sizer_8, wxSizerFlags(1).Border(wxALL));

    m_banner_left = new wxBannerWindow(page_3, wxLEFT);
    m_banner_left->SetText("Left Banner",
        wxEmptyString);
    box_sizer_8->Add(m_banner_left, wxSizerFlags().Border(wxALL));

    m_banner_top = new wxBannerWindow(page_3, wxTOP);
    m_banner_top->SetGradient(wxSystemSettings::GetColour(wxSYS_COLOUR_INACTIVECAPTION),
        wxSystemSettings::GetColour(wxSYS_COLOUR_HIGHLIGHT));
    m_banner_top->SetText("Top Banner",
        "This is the top banner message");
    box_sizer_8->Add(m_banner_top, wxSizerFlags().Border(wxALL));

    m_banner_right = new wxBannerWindow(page_3, wxRIGHT);
    m_banner_right->SetText("Right Banner",
        wxEmptyString);
    box_sizer_8->Add(m_banner_right, wxSizerFlags().Border(wxALL));

    auto box_sizer_9 = new wxBoxSizer(wxHORIZONTAL);
    box_sizer_4->Add(box_sizer_9, wxSizerFlags().Border(wxALL));

    m_banner = new wxBannerWindow(page_3, wxLEFT);
    m_banner->SetBitmap(GetImageFromArray(wxue_img::wiztest_png, sizeof(wxue_img::wiztest_png)));
    m_banner->SetText("This is a long title",
        wxEmptyString);
    box_sizer_9->Add(m_banner, wxSizerFlags().Border(wxALL));

    page_3->SetSizerAndFit(box_sizer_4);

    auto page_4 = new wxPanel(m_notebook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_notebook->AddPage(page_4, "Tab 3");

    auto box_sizer_5 = new wxBoxSizer(wxVERTICAL);

    m_staticText_4 = new wxStaticText(page_4, wxID_ANY, "TODO: replace this control with something more useful...");
    m_staticText_4->Wrap(200);
    box_sizer_5->Add(m_staticText_4, wxSizerFlags().Border(wxALL));

    page_4->SetSizerAndFit(box_sizer_5);

    auto page_5 = new wxPanel(m_notebook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_notebook->AddPage(page_5, "Tab 4");

    auto box_sizer_6 = new wxBoxSizer(wxVERTICAL);

    m_staticText_5 = new wxStaticText(page_5, wxID_ANY, "TODO: replace this control with something more useful...");
    m_staticText_5->Wrap(200);
    box_sizer_6->Add(m_staticText_5, wxSizerFlags().Border(wxALL));

    page_5->SetSizerAndFit(box_sizer_6);

    auto page = new wxPanel(m_notebook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_notebook->AddPage(page, "Tab 5");

    auto box_sizer = new wxBoxSizer(wxVERTICAL);

    m_staticText = new wxStaticText(page, wxID_ANY, "TODO: replace this control with something more useful...");
    m_staticText->Wrap(200);
    box_sizer->Add(m_staticText, wxSizerFlags().Border(wxALL));

    page->SetSizerAndFit(box_sizer);

    auto stdBtn = CreateStdDialogButtonSizer(wxCLOSE|wxNO_DEFAULT);
    stdBtn->GetCancelButton()->SetDefault();
    box_sizer_2->Add(CreateSeparatedSizer(stdBtn), wxSizerFlags().Expand().Border(wxALL));

    SetSizerAndFit(box_sizer_2);
    Centre(wxBOTH);

    // Event handlers
    disable_bitmaps->Bind(wxEVT_CHECKBOX,
        [this](wxCommandEvent& event)
        {
            m_btn_bitmaps->Enable(!event.IsChecked());
        } );

    return true;
}

namespace wxue_img
{

    const unsigned char disabled_png[437] {
    137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,16,0,0,0,16,8,6,0,0,0,31,243,255,97,0,0,0,9,112,72,89,115,0,0,11,19,0,0,11,19,1,
    0,154,156,24,0,0,1,103,73,68,65,84,56,203,149,83,49,110,194,64,16,156,181,141,68,154,112,74,68,17,40,112,193,15,130,210,241,1,58,247,
    148,84,180,212,20,20,41,105,242,4,228,130,130,58,47,160,138,78,60,32,82,68,19,25,41,32,100,83,96,39,216,222,20,193,39,27,108,34,166,
    186,59,205,204,237,206,221,18,142,120,234,245,152,52,13,55,66,36,71,56,248,62,14,190,143,83,44,108,27,97,16,16,0,24,201,33,105,26,62,
    165,196,109,173,166,136,129,231,33,240,60,48,243,31,135,72,173,149,46,89,76,167,211,123,102,222,16,17,12,195,64,28,199,136,162,232,236,
    246,193,96,0,199,113,148,78,85,208,108,54,1,0,239,227,49,126,80,140,82,169,148,217,107,184,18,237,118,187,208,96,219,106,181,232,101,
    185,252,40,18,191,234,58,108,219,166,116,235,148,71,236,118,187,220,57,233,63,37,206,15,241,146,73,145,56,19,98,26,82,202,170,16,2,111,
    195,225,191,153,104,57,98,83,8,241,149,22,119,162,8,70,185,204,23,13,164,148,36,165,124,20,66,44,243,136,19,203,74,155,80,94,5,119,0,
    100,24,134,133,165,79,44,11,141,70,131,1,112,97,11,139,209,232,170,127,161,66,116,182,91,48,51,170,253,62,76,211,132,235,186,112,28,
    231,76,16,205,231,249,6,207,179,217,134,52,45,51,76,223,187,29,124,215,205,190,251,195,3,140,245,154,147,105,84,97,84,234,117,38,93,
    71,185,82,81,228,48,8,112,216,239,143,74,2,142,147,184,91,173,192,113,76,0,240,11,117,134,146,118,115,112,51,168,0,0,0,0,73,69,78,68,
    174,66,96,130
    };

    const unsigned char focus_png[517] {
    137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,16,0,0,0,16,8,6,0,0,0,31,243,255,97,0,0,0,9,112,72,89,115,0,0,11,19,0,0,11,19,1,
    0,154,156,24,0,0,1,183,73,68,65,84,56,203,205,147,177,138,226,80,20,134,191,68,99,33,25,19,240,142,140,177,8,11,10,214,18,16,11,177,
    218,222,41,23,242,26,190,132,32,214,211,167,28,216,71,16,196,34,133,108,229,140,6,89,86,69,6,217,181,8,67,118,83,36,195,221,98,149,113,
    86,167,222,253,203,123,206,249,57,223,57,247,192,191,151,174,75,116,93,254,245,170,92,200,84,206,234,50,25,169,112,119,39,185,191,199,
    122,120,64,211,52,0,214,235,245,37,3,108,219,150,0,137,148,60,57,14,204,231,100,255,120,43,12,6,3,106,181,26,155,205,134,126,191,191,
    244,125,255,35,176,58,22,183,219,237,229,112,56,4,96,25,199,124,122,124,132,249,28,21,0,249,74,48,153,76,232,116,58,85,215,117,191,1,
    215,192,117,163,209,248,220,235,245,170,231,80,202,161,131,19,213,235,117,198,227,49,186,174,227,186,238,119,128,102,179,137,101,89,
    231,76,82,190,34,28,181,223,239,41,20,10,36,73,66,46,151,195,178,44,90,173,214,187,59,80,49,12,184,185,121,55,161,219,237,98,24,6,229,
    114,249,109,160,92,6,211,36,203,213,21,148,74,100,50,25,108,219,198,113,28,22,139,5,249,124,158,56,142,49,77,147,36,73,40,22,139,228,
    114,57,0,126,62,63,67,54,11,186,126,24,34,160,170,42,66,8,102,179,25,149,74,133,40,138,240,60,79,9,195,176,164,105,26,219,237,22,33,
    4,66,8,76,195,56,65,56,40,77,83,130,32,160,90,173,50,26,141,190,122,158,167,0,56,142,243,35,12,195,15,0,65,16,16,4,1,171,213,234,196,
    96,183,131,197,2,41,37,81,20,97,89,22,190,239,191,89,153,227,56,171,48,12,157,40,138,136,162,136,95,113,12,65,0,187,29,42,105,10,183,
    183,40,138,34,0,1,136,233,116,122,233,39,126,57,198,21,16,188,188,64,154,254,7,183,248,27,183,73,156,116,14,159,88,75,0,0,0,0,73,69,
    78,68,174,66,96,130
    };

    const unsigned char normal_png[508] {
    137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,16,0,0,0,16,8,6,0,0,0,31,243,255,97,0,0,0,9,112,72,89,115,0,0,11,19,0,0,11,19,1,
    0,154,156,24,0,0,1,174,73,68,65,84,56,203,165,147,177,110,218,96,20,133,63,215,134,129,120,176,84,90,69,130,161,168,68,78,36,166,202,
    3,3,11,207,192,82,41,188,5,143,193,19,100,247,144,78,97,98,71,44,12,255,3,32,135,1,15,216,33,53,137,227,88,66,5,193,223,33,216,36,181,
    211,14,61,211,255,95,221,115,238,213,209,61,10,9,174,174,36,154,6,167,167,105,137,231,103,120,122,34,131,94,15,226,88,1,208,210,162,
    166,193,205,13,156,159,31,27,239,239,225,238,14,164,124,249,43,202,241,157,208,146,199,245,201,73,89,94,94,6,138,162,160,105,26,251,
    253,158,221,110,151,51,188,135,119,152,254,70,160,94,175,3,160,235,58,166,105,18,4,1,174,235,102,4,10,133,66,254,6,9,28,199,97,56,28,
    210,104,52,16,66,0,80,46,151,153,78,167,180,90,173,140,96,186,138,16,66,177,44,75,54,155,205,89,187,221,254,186,88,44,208,117,29,128,
    40,138,168,84,42,140,70,163,217,100,50,57,59,240,228,27,129,215,232,118,187,82,215,245,212,3,85,85,137,227,24,219,182,107,192,60,119,
    131,60,145,98,177,8,192,102,179,193,182,237,207,192,207,63,251,180,60,178,16,226,147,97,24,132,97,200,96,48,96,62,159,191,55,7,53,135,
    252,197,48,140,197,118,187,165,84,42,81,171,213,144,82,178,92,46,207,124,223,255,241,87,19,129,111,134,97,8,128,106,181,202,106,181,
    194,247,125,0,60,207,163,223,239,207,198,227,113,190,137,66,136,143,64,240,175,59,232,116,58,184,174,155,242,62,240,159,72,77,156,173,
    215,72,160,4,252,90,173,8,163,8,111,189,206,16,182,239,101,225,187,227,4,168,42,152,38,220,222,190,20,31,31,225,224,65,10,203,130,135,
    7,153,164,241,120,7,23,23,217,56,199,49,132,97,54,137,142,3,187,157,2,240,27,89,2,185,55,227,129,139,244,0,0,0,0,73,69,78,68,174,66,
    96,130
    };

}
