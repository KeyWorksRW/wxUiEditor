////////////////////////////////////////////////////////////////////////////////
// Code generated by wxUiEditor -- see https://github.com/KeyWorksRW/wxUiEditor/
//
// DO NOT EDIT THIS FILE! Your changes will be lost if it is re-generated!
////////////////////////////////////////////////////////////////////////////////

#pragma once

#include <wx/dialog.h>
#include <wx/event.h>
#include <wx/gdicmn.h>
#include <wx/grid.h>
#include <wx/stattext.h>
#include <wx/toolbar.h>

class GridPropertyDlg : public wxDialog
{
public:
    GridPropertyDlg() {}
    GridPropertyDlg(wxWindow *parent, wxWindowID id = wxID_ANY, const wxString& title = "Property Editor",
        const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize,
        long style = wxDEFAULT_DIALOG_STYLE, const wxString &name = wxDialogNameStr)
    {
        Create(parent, id, title, pos, size, style, name);
    }

    bool Create(wxWindow *parent, wxWindowID id = wxID_ANY, const wxString& title = "Property Editor",
        const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize,
        long style = wxDEFAULT_DIALOG_STYLE, const wxString &name = wxDialogNameStr);

    enum
    {
        id_DeleteRow = wxID_HIGHEST + 1,
        id_NewRow,
        id_UndoDeleteRow
    };

protected:

    // Virtual event handlers -- override them in your derived class

    virtual void OnCancel(wxCommandEvent& event) { event.Skip(); }
    virtual void OnDeleteRow(wxCommandEvent& event) { event.Skip(); }
    virtual void OnInit(wxInitDialogEvent& event) { event.Skip(); }
    virtual void OnNewRow(wxCommandEvent& event) { event.Skip(); }
    virtual void OnOK(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUndoDelete(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUI(wxUpdateUIEvent& event) { event.Skip(); }

    // Class member variables

    wxGrid* m_grid;
    wxStaticText* m_help_text;  // Shown below the grid (initially hidden)
    wxStaticText* m_prop_label;  // Shown to the left of the toolbar
    wxToolBar* m_toolBar;
};
