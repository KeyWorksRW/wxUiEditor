///////////////////////////////////////////////////////////////////////////////
// Code generated by wxUiEditor - see https://github.com/KeyWorksRW/wxUiEditor/
//
// Do not edit any code above the "End of generated code" comment block.
// Any changes before that block will be lost if it is re-generated!
///////////////////////////////////////////////////////////////////////////////

// clang-format off

#include <wx/button.h>
#include <wx/sizer.h>
#include <wx/statbox.h>

#include "nodeinfo_base.h"

bool NodeInfoBase::Create(wxWindow* parent, wxWindowID id, const wxString& title,
        const wxPoint& pos, const wxSize& size, long style, const wxString &name)
{
    if (!wxDialog::Create(parent, id, title, pos, size, style, name))
        return false;

    auto* parent_sizer = new wxBoxSizer(wxVERTICAL);

    auto* static_box_2 = new wxStaticBoxSizer(wxVERTICAL, this, "Selected Node");

    m_txt_generator = new wxStaticText(static_box_2->GetStaticBox(), wxID_ANY, "Name:");
    static_box_2->Add(m_txt_generator, wxSizerFlags().Border(wxALL));

    m_txt_type = new wxStaticText(static_box_2->GetStaticBox(), wxID_ANY, "Type:");
    static_box_2->Add(m_txt_type, wxSizerFlags().Border(wxALL));

    m_txt_memory = new wxStaticText(static_box_2->GetStaticBox(), wxID_ANY, "Memory:");
    static_box_2->Add(m_txt_memory, wxSizerFlags().Border(wxALL));

    parent_sizer->Add(static_box_2, wxSizerFlags().Border(wxALL));

    auto* static_box = new wxStaticBoxSizer(wxVERTICAL, this, "Memory Usage");

    m_txt_project = new wxStaticText(static_box->GetStaticBox(), wxID_ANY, "Project:");
    static_box->Add(m_txt_project, wxSizerFlags().Border(wxALL));

    m_txt_clipboard = new wxStaticText(static_box->GetStaticBox(), wxID_ANY, "Clipboard:");
    static_box->Add(m_txt_clipboard, wxSizerFlags().Border(wxALL));

    parent_sizer->Add(static_box, wxSizerFlags().Expand().Border(wxALL));

    auto* stdBtn = CreateStdDialogButtonSizer(wxCLOSE|wxNO_DEFAULT);
    stdBtn->GetCancelButton()->SetDefault();
    parent_sizer->Add(CreateSeparatedSizer(stdBtn), wxSizerFlags().Expand().Border(wxALL));

    SetSizerAndFit(parent_sizer);
    Centre(wxBOTH);

    // Event handlers
    Bind(wxEVT_INIT_DIALOG, &NodeInfoBase::OnInit, this);

    return true;
}

// ************* End of generated code ***********
// DO NOT EDIT THIS COMMENT BLOCK!
//
// Code below this comment block will be preserved
// if the code for this class is re-generated.
//
// clang-format on
// ***********************************************
