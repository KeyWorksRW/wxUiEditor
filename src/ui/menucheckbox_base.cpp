////////////////////////////////////////////////////////////////////////////////
// Code generated by wxUiEditor -- see https://github.com/KeyWorksRW/wxUiEditor/
//
// DO NOT EDIT THIS FILE! Your changes will be lost if it is re-generated!
////////////////////////////////////////////////////////////////////////////////

#include <wx/bitmap.h>
#include <wx/icon.h>
#include <wx/image.h>

#include "ribbon_ids.h"
#include "gen_enums.h"     // Enumerations for generators

using namespace GenEnum;

#include "menucheckbox_base.h"

#include <wx/mstream.h>  // Memory stream classes

// Convert a data array into a wxImage
inline wxImage GetImageFromArray(const unsigned char* data, size_t size_data)
{
    wxMemoryInputStream strm(data, size_data);
    wxImage image;
    image.LoadFile(strm);
    return image;
};

namespace wxue_img
{
    extern const unsigned char check3state_png[210];
    extern const unsigned char wxCheckBox_png[218];
}

MenuCheckbox::MenuCheckbox() : wxMenu()
{
    if (!wxImage::FindHandler(wxBITMAP_TYPE_PNG))
        wxImage::AddHandler(new wxPNGHandler);

    auto menu_item = Append(gen_wxCheckBox, wxString::FromUTF8("Insert wxCheckBox"),
        wxString::FromUTF8("Insert a normal two-state checkbox"), wxITEM_NORMAL);
    menu_item->SetBitmap(GetImageFromArray(wxue_img::wxCheckBox_png, sizeof(wxue_img::wxCheckBox_png)));

    auto menu_item_2 = Append(gen_Check3State, wxString::FromUTF8("Insert 3-state wxCheckBox"),
        wxString::FromUTF8("Insert a 3-state checkbox"), wxITEM_NORMAL);
    menu_item_2->SetBitmap(GetImageFromArray(wxue_img::check3state_png, sizeof(wxue_img::check3state_png)));
}

namespace wxue_img
{

    #if (__cplusplus >= 201703L || (defined(_MSVC_LANG) && _MSVC_LANG >= 201703L))
        inline
    #endif
    const unsigned char check3state_png[210] {
    137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,22,0,0,0,22,8,6,0,0,0,196,180,108,59,0,0,0,4,115,66,73,84,8,8,8,8,124,8,100,136,
    0,0,0,9,112,72,89,115,0,0,10,240,0,0,10,240,1,66,172,52,152,0,0,0,116,73,68,65,84,56,203,237,212,75,10,192,32,12,4,208,40,61,152,71,
    155,165,75,23,30,40,55,107,55,21,74,176,56,233,103,81,234,44,3,62,226,128,138,204,124,54,193,14,0,172,30,0,64,232,205,151,222,80,85,
    41,180,150,44,0,132,134,247,77,110,85,17,175,28,98,110,20,223,64,135,176,69,88,148,218,184,97,71,52,165,244,76,21,94,116,8,91,132,69,
    169,141,27,230,65,233,42,188,232,233,3,169,37,207,207,238,207,217,0,106,238,33,182,252,1,208,128,0,0,0,0,73,69,78,68,174,66,96,130
    };

    #if (__cplusplus >= 201703L || (defined(_MSVC_LANG) && _MSVC_LANG >= 201703L))
        inline
    #endif
    const unsigned char wxCheckBox_png[218] {
    137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,22,0,0,0,22,8,6,0,0,0,196,180,108,59,0,0,0,4,115,66,73,84,8,8,8,8,124,8,100,136,
    0,0,0,9,112,72,89,115,0,0,10,240,0,0,10,240,1,66,172,52,152,0,0,0,124,73,68,65,84,56,203,237,211,49,14,128,32,12,5,208,150,120,240,63,
    50,50,112,31,88,29,29,60,15,78,36,134,128,109,141,14,26,254,248,33,47,77,3,68,51,159,13,183,5,128,98,1,0,112,175,95,122,101,206,89,133,
    198,224,9,0,169,97,34,162,148,146,8,239,219,58,60,115,183,246,199,44,222,113,111,160,34,220,34,90,84,53,113,197,206,104,41,229,153,85,
    88,81,17,110,17,45,170,154,184,98,22,84,189,10,43,58,252,32,49,248,203,199,63,243,243,28,200,141,39,81,199,176,79,105,0,0,0,0,73,69,
    78,68,174,66,96,130
    };

}
