///////////////////////////////////////////////////////////////////////////////
// Code generated by wxUiEditor - see https://github.com/KeyWorksRW/wxUiEditor/
//
// Do not edit any code above the "End of generated code" comment block.
// Any changes before that block will be lost if it is re-generated!
///////////////////////////////////////////////////////////////////////////////

// clang-format off

#pragma once

#include <wx/event.h>
#include <wx/gdicmn.h>
#include <wx/panel.h>
#include <wx/sizer.h>
#include <wx/toolbar.h>

class DocViewBase : public wxPanel
{
public:
    DocViewBase() {}
    DocViewBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxPoint& pos = wxDefaultPosition,
        const wxSize& size = wxDefaultSize, long style = wxTAB_TRAVERSAL, const wxString &name = wxPanelNameStr)
    {
        Create(parent, id, pos, size, style, name);
    }

    bool Create(wxWindow *parent, wxWindowID id = wxID_ANY, const wxPoint& pos = wxDefaultPosition,
        const wxSize& size = wxDefaultSize, long style = wxTAB_TRAVERSAL, const wxString &name = wxPanelNameStr);

protected:

    // Virtual event handlers -- override them in your derived class

    virtual void OnBack(wxCommandEvent& event) { event.Skip(); }
    virtual void OnCPlus(wxCommandEvent& event) { event.Skip(); }
    virtual void OnForward(wxCommandEvent& event) { event.Skip(); }
    virtual void OnHome(wxCommandEvent& event) { event.Skip(); }
    virtual void OnPython(wxCommandEvent& event) { event.Skip(); }
    virtual void OnRuby(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateBack(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnUpdateForward(wxUpdateUIEvent& event) { event.Skip(); }

    // Class member variables

    wxBoxSizer* m_parent_sizer;
    wxToolBar* m_toolBar;
};

namespace wxue_img
{
    // Images declared in this class module:

    // python-logo-only.svg
    extern const unsigned char python_logo_only_svg[1648];
}

// ************* End of generated code ***********
// DO NOT EDIT THIS COMMENT BLOCK!
//
// Code below this comment block will be preserved
// if the code for this class is re-generated.
//
// clang-format on
// ***********************************************
