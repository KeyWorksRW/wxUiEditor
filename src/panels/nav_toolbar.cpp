///////////////////////////////////////////////////////////////////////////////
// Code generated by wxUiEditor - see https://github.com/KeyWorksRW/wxUiEditor/
//
// Do not edit any code above the "End of generated code" comment block.
// Any changes before that block will be lost if it is re-generated!
///////////////////////////////////////////////////////////////////////////////

// clang-format off

#include <wx/artprov.h>
#include <wx/bitmap.h>
#include <wx/icon.h>
#include <wx/image.h>

#include "../wxui/ui_images.h"

#include "nav_toolbar.h"

#include "mainframe.h"
#include "project_handler.h"

#include <wx/mstream.h>  // memory stream classes
#include <wx/zstream.h>  // zlib stream classes

#include <memory>  // for std::make_unique

// Convert compressed SVG string into a wxBitmapBundle
#ifdef __cpp_inline_variables
inline wxBitmapBundle wxueBundleSVG(const unsigned char* data,
    size_t size_data, size_t size_svg, wxSize def_size)
#else
static wxBitmapBundle wxueBundleSVG(const unsigned char* data,
    size_t size_data, size_t size_svg, wxSize def_size)
#endif
{
    auto str = std::make_unique<char[]>(size_svg);
    wxMemoryInputStream stream_in(data, size_data);
    wxZlibInputStream zlib_strm(stream_in);
    zlib_strm.Read(str.get(), size_svg);
    return wxBitmapBundle::FromSVG(str.get(), def_size);
};

namespace wxue_img
{
    extern const unsigned char nav_coll_expand_svg[208];
    extern const unsigned char nav_collapse_svg[132];
    extern const unsigned char nav_expand_svg[190];
}

NavToolbar::NavToolbar(wxWindow* parent, wxWindowID id, const wxPoint& pos, const wxSize& size, long style,
    const wxString& name) : wxToolBar(parent, id, pos, size, style, name)
{

    AddStretchableSpace();

    AddTool(id_NavCollExpand, wxEmptyString,
        wxueBundleSVG(wxue_img::nav_coll_expand_svg, 208, 398, FromDIP(wxSize(16, 16))), wxNullBitmap, wxITEM_NORMAL,
        "Collapse siblings, expand children", "Expand selected item, collapse all other items at the same level");

    AddTool(id_NavExpand, wxEmptyString,
        wxueBundleSVG(wxue_img::nav_expand_svg, 190, 330, FromDIP(wxSize(16, 16))), wxNullBitmap, wxITEM_NORMAL,
        "Expand all children", "Expand selected item and all of it\'s sub-items");

    AddTool(id_NavCollapse, wxEmptyString,
        wxueBundleSVG(wxue_img::nav_collapse_svg, 132, 176, FromDIP(wxSize(16, 16))), wxNullBitmap, wxITEM_NORMAL,
        "Collapse all siblings", "Collapse selected item and all items at the same level");

    AddSeparator();
    AddTool(id_NavMoveLeft, wxEmptyString, wxArtProvider::GetBitmapBundle(wxART_GO_BACK, wxART_MENU), wxNullBitmap,
        wxITEM_NORMAL, "Move Left", "Move the selected item left");

    AddTool(id_NavMoveUp, wxEmptyString, wxArtProvider::GetBitmapBundle(wxART_GO_UP, wxART_MENU), wxNullBitmap, wxITEM_NORMAL,
        "Move Up", "Move the selected item up");

    AddTool(id_NavMoveDown, wxEmptyString, wxArtProvider::GetBitmapBundle(wxART_GO_DOWN, wxART_MENU), wxNullBitmap,
        wxITEM_NORMAL, "Move Down", "Move the selected item down");

    AddTool(id_NavMoveRight, wxEmptyString, wxArtProvider::GetBitmapBundle(wxART_GO_FORWARD, wxART_OTHER), wxNullBitmap,
        wxITEM_NORMAL, "Move Right", "Move the selected item right");

    AddStretchableSpace();

    Realize();
}

namespace wxue_img
{

    const unsigned char nav_coll_expand_svg[208] {
        120,218,93,145,89,14,130,48,20,69,93,74,243,190,52,193,218,65,70,129,21,148,13,248,231,80,129,132,136,41,117,192,
        213,91,138,36,208,159,230,158,155,219,251,94,218,180,123,149,121,250,56,233,10,213,215,12,6,65,125,14,200,232,130,
        114,76,35,230,49,31,199,36,22,19,17,188,247,125,17,226,144,133,75,160,1,142,104,52,229,28,162,152,7,92,140,166,
        75,99,146,49,204,66,238,208,127,192,63,233,208,114,47,75,199,98,188,55,108,100,74,172,222,99,18,83,193,172,181,
        132,121,202,234,35,160,78,247,141,204,224,86,55,77,162,202,243,154,120,212,36,201,230,48,56,91,245,108,100,114,
        111,239,95,169,218,3,236,242,84,201,139,182,47,215,62,181,84,128,62,25,16,64,189,61,223,245,85,87,25,112,35,43,
        89,151,149,30,245,124,130,169,146,182,103,55,252,195,234,7,82,200,97,178
    };

    const unsigned char nav_collapse_svg[132] {
        120,218,77,206,75,10,195,32,24,4,224,30,69,102,213,66,48,106,169,152,212,63,135,105,99,85,144,4,140,125,228,246,
        109,82,250,128,89,204,234,155,177,211,205,119,246,149,236,206,133,61,8,130,55,186,1,155,9,82,114,115,208,96,247,
        216,151,64,80,134,11,173,192,130,139,62,20,130,230,202,24,176,169,204,201,17,46,49,165,54,251,211,86,84,82,153,
        74,236,142,168,59,91,127,224,216,19,198,107,113,25,235,198,234,139,47,189,23,63,118,233,255,230,48,14,238,109,45,
        79,55,79,5,53,50,28
    };

    const unsigned char nav_expand_svg[190] {
        120,218,93,144,217,14,130,48,16,69,253,148,102,158,52,193,210,22,176,236,95,128,63,224,155,75,5,146,6,72,41,42,
        126,189,101,209,8,47,147,123,38,55,119,150,184,125,228,105,220,156,117,129,202,91,2,141,236,90,64,70,28,41,197,
        126,224,88,140,227,192,243,178,153,168,143,153,19,100,12,123,156,174,128,98,126,160,63,223,130,24,38,174,137,240,
        49,37,124,9,179,207,12,113,89,176,166,41,254,235,92,208,114,171,137,78,128,90,221,75,145,192,189,148,50,84,249,
        101,75,44,202,124,139,236,162,161,179,87,157,20,97,85,87,111,161,234,8,236,52,86,226,170,199,171,235,78,11,5,232,
        149,0,1,212,143,245,89,222,116,145,128,99,100,33,202,188,208,147,254,159,96,162,196,152,99,15,63,220,124,0,203,
        209,83,181
    };

}

// ************* End of generated code ***********
// DO NOT EDIT THIS COMMENT BLOCK!
//
// Code below this comment block will be preserved
// if the code for this class is re-generated.
//
// clang-format on
// ***********************************************
