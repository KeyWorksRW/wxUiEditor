inline const char* forms_xml = R"===(<?xml version="1.0"?>
<!DOCTYPE GeneratorDefinitions SYSTEM "gen.dtd">
<GeneratorDefinitions>
	<gen class="wxFrame" image="wxFrame" type="frame_form">
		<inherits class="C++ Settings" />
		<inherits class="C++ Header Settings" />
		<inherits class="C++ Derived Class Settings" />
		<inherits class="wxPython Frame Settings" />
		<inherits class="wxRuby Frame Settings" />
		<inherits class="XRC Settings" />
		<inherits class="wxTopLevelWindow" />
		<inherits class="Window Events" />
		<inherits class="wxWindow">
			<hide name="platforms" />
		</inherits>
		<property name="class_name" type="string"
			help="The name of the base class.">MyFrameBase</property>
		<property name="title" type="string_escapes"
			help="The text to display on the frame's title bar." />
		<property name="persist" type="bool">0</property>
		<property name="style" type="bitlist">
			<option name="wxDEFAULT_FRAME_STYLE"
				help="Defined as wxMINIMIZE_BOX | wxMAXIMIZE_BOX | wxRESIZE_BORDER | wxSYSTEM_MENU | wxCAPTION | wxCLOSE_BOX | wxCLIP_CHILDREN" />
			<option name="wxCAPTION"
				help="Puts a caption on the frame." />
			<option name="wxCLOSE_BOX"
				help="Displays a close box on the frame." />
			<option name="wxFRAME_TOOL_WINDOW"
				help="Causes a frame with a small titlebar to be created; the frame does not appear in the taskbar under Windows or GTK+." />
			<option name="wxFRAME_NO_TASKBAR"
				help="Creates an otherwise normal frame but it does not appear in the taskbar under Windows or GTK+ (note that it will minimize to the desktop window under Windows which may seem strange to the users and thus it might be better to use this style only without wxMINIMIZE_BOX style). In wxGTK, the flag is respected only if GTK+ is at least version 2.2 and the window manager supports _NET_WM_STATE_SKIP_TASKBAR hint. Has no effect under other platforms." />
			<option name="wxFRAME_FLOAT_ON_PARENT"
				help="The frame will always be on top of its parent (unlike wxSTAY_ON_TOP). A frame created with this style must have a non-NULL parent." />
			<option name="wxFRAME_SHAPED"
				help="Windows with this style are allowed to have their shape changed with the SetShape method." />
			<option name="wxICONIZE"
				help="Display the frame iconized (minimized). Windows only." />
			<option name="wxMAXIMIZE"
				help="Displays the frame maximized. Windows only." />
			<option name="wxMAXIMIZE_BOX"
				help="Displays a maximize box on the frame." />
			<option name="wxMINIMIZE"
				help="Identical to wxICONIZE. Windows only." />
			<option name="wxMINIMIZE_BOX"
				help="Displays a minimize box on the frame." />
			<option name="wxRESIZE_BORDER"
				help="Displays a resizeable border around the window." />
			<option name="wxSTAY_ON_TOP"
				help="Stay on top of all other windows, see also wxFRAME_FLOAT_ON_PARENT." />
			<option name="wxSYSTEM_MENU"
				help="Displays a system menu." />
			wxDEFAULT_FRAME_STYLE
		</property>
		<property name="extra_style" type="bitlist">
			<option name="wxFRAME_EX_CONTEXTHELP"
				help="Under Windows, puts a query button on the caption. When pressed, Windows will go into a context-sensitive help mode and wxWidgets will send a wxEVT_HELP event if the user clicked on an application window. You cannot use this style together with wxMAXIMIZE_BOX or wxMINIMIZE_BOX." />
			<option name="wxFRAME_EX_METAL"
				help="On Mac OS X, frames with this style will be shown with a metallic look." />
		</property>
		<property name="center" type="option"
			help="Centers the window on the desktop in the chosen direction.">
			<option name="no" />
			<option name="wxHORIZONTAL" />
			<option name="wxVERTICAL" />
			<option name="wxBOTH" />
			wxBOTH
		</property>
		<property name="icon" type="image"
			help="Specifies the image to display in the title bar of the frame." />
		<property name="cpp_conditional" type="string_code_single"
			help="In C++ code, any value in this property will be used to place a conditional (#if/#endif) block around the Frame's generated code." />
	</gen>

	<gen class="wxPopupTransientWindow" image="wxPopupTransientWindow" type="form">
		<inherits class="C++ Settings" />
		<inherits class="C++ Header Settings" />
		<inherits class="C++ Derived Class Settings" />
		<inherits class="wxPython Settings" />
		<inherits class="wxRuby Settings" />
		<property name="class_name" type="string"
			help="The name of the base class.">MyPopupBase</property>
		<property name="border" type="option"
			help="Specifies the type of border to use for the window.">
			<option name="wxBORDER_NONE"
				help="No border will be displayed." />
			<option name="wxBORDER_RAISED"
				help="Displays a raised border." />
			<option name="wxBORDER_SIMPLE"
				help="Displays a thin border around the window." />
			<option name="wxBORDER_SUNKEN"
				help="Displays a sunken border." />
			<option name="wxBORDER_THEME"
				help="Displays a native border suitable for a control, on the current platform. On Windows, this will be a themed border; on most other platforms a sunken border will be used." />
			wxBORDER_NONE
		</property>
		<property name="style" type="bitlist">
			<option name="wxPU_CONTAINS_CONTROLS"
				help="By default in wxMSW, a popup window will not take focus from its parent window. However many standard controls, including common ones such as wxTextCtrl, need focus to function correctly and will not work when placed on a default popup. This flag can be used to make the popup take focus and let all controls work but at the price of not allowing the parent window to keep focus while the popup is shown, which can also be sometimes desirable. This style is currently only implemented in MSW and simply does nothing under the other platforms. Requires wxWidgets 3.1.3" />
		</property>
		<property name="font" type="wxFont"
			help="Sets the font for this window. This should not be used for a parent window if you don't want its font to be inherited by its children" />
		<property name="foreground_colour" type="wxColour"
			help="Sets the foreground colour of the window." />
		<property name="background_colour" type="wxColour"
			help="Sets the background colour of the window." />
		<property name="cpp_conditional" type="string_code_single"
			help="In C++ code, any value in this property will be used to place a conditional (#if/#endif) block around the Window's generated code." />
		<event name="wxEVT_CONTEXT_MENU" class="wxContextMenuEvent"
			help="Either provide your own handler function, or add a wxContextMenuEvent to create a popup menu." />
		<event name="wxEVT_DESTROY" class="wxWindowDestroyEvent"
			help="Sent from the class destructor just before the window is destroyed." />
	</gen>

	<gen class="RibbonBar" image="ribbon_bar" type="ribbonbar_form">
		<inherits class="C++ Settings" />
		<inherits class="C++ Header Settings" />
		<inherits class="C++ Derived Class Settings" />
		<inherits class="wxPython Settings" />
		<inherits class="wxRuby Settings" />
		<inherits class="XRC Settings" />
		<inherits class="wxWindow">
			<hide name="platforms" />
		</inherits>
		<inherits class="Window Events" />
		<property name="class_name" type="string"
			help="The name of the base class.">MyRibbonBarBase</property>
		<property name="theme" type="option"
			help="Select the RibbonBar theme.">
			<option name="Default"
				help="Use Default theme." />
			<option name="Generic"
				help="Use Generic theme." />
			<option name="MSW"
				help="Use MSW theme." />
			Default
		</property>
		<property name="style" type="bitlist">
			<option name="wxRIBBON_BAR_DEFAULT_STYLE"
				help="Defined as wxRIBBON_BAR_FLOW_HORIZONTAL | wxRIBBON_BAR_SHOW_PAGE_LABELS | wxRIBBON_BAR_SHOW_PANEL_EXT_BUTTONS | wxRIBBON_BAR_SHOW_TOGGLE_BUTTON | wxRIBBON_BAR_SHOW_HELP_BUTTON." />
			<option name="wxRIBBON_BAR_FOLDBAR_STYLE"
				help="Defined as wxRIBBON_BAR_FLOW_VERTICAL | wxRIBBON_BAR_SHOW_PAGE_ICONS | wxRIBBON_BAR_SHOW_PANEL_EXT_BUTTONS | wxRIBBON_BAR_SHOW_PANEL_MINIMISE_BUTTONS." />
			<option name="wxRIBBON_BAR_SHOW_PAGE_LABELS"
				help="Causes labels to be shown on the tabs in the ribbon bar." />
			<option name="wxRIBBON_BAR_SHOW_PAGE_ICONS"
				help="Causes icons to be shown on the tabs in the ribbon bar." />
			<option name="wxRIBBON_BAR_FLOW_HORIZONTAL"
				help="Causes panels within pages to stack horizontally." />
			<option name="wxRIBBON_BAR_FLOW_VERTICAL"
				help="Causes panels within pages to stack vertically." />
			<option name="wxRIBBON_BAR_SHOW_PANEL_EXT_BUTTONS"
				help="Causes extension buttons to be shown on panels (where the panel has such a button)." />
			<option name="wxRIBBON_BAR_SHOW_PANEL_MINIMISE_BUTTONS"
				help="Causes minimise buttons to be shown on panels (where the panel has such a button)." />
			<option name="wxRIBBON_BAR_SHOW_TOGGLE_BUTTON"
				help="Causes a toggle button to appear on the ribbon bar at top-right corner." />
			<option name="wxRIBBON_BAR_SHOW_HELP_BUTTON"
				help="Causes a help button to appear on the ribbon bar at the top-right corner." />
			wxRIBBON_BAR_DEFAULT_STYLE
		</property>
		<property name="cpp_conditional" type="string_code_single"
			help="In C++ code, any value in this property will be used to place a conditional (#if/#endif) block around the RibbonBar's generated code." />
		<event name="wxEVT_RIBBONBAR_PAGE_CHANGED" class="wxRibbonBarEvent"
			help="Triggered after the transition from one page being active to a different page being active." />
		<event name="wxEVT_RIBBONBAR_PAGE_CHANGING" class="wxRibbonBarEvent"
			help="Triggered prior to the transition from one page being active to a different page being active, and can veto the change." />
		<event name="wxEVT_RIBBONBAR_TAB_MIDDLE_DOWN" class="wxRibbonBarEvent"
			help="Triggered when the middle mouse button is pressed on a tab." />
		<event name="wxEVT_RIBBONBAR_TAB_MIDDLE_UP" class="wxRibbonBarEvent"
			help="Triggered when the middle mouse button is released on a tab." />
		<event name="wxEVT_RIBBONBAR_TAB_RIGHT_DOWN" class="wxRibbonBarEvent"
			help="Triggered when the right mouse button is pressed on a tab." />
		<event name="wxEVT_RIBBONBAR_TAB_RIGHT_UP" class="wxRibbonBarEvent"
			help="Triggered when the right mouse button is released on a tab." />
		<event name="wxEVT_RIBBONBAR_TAB_LEFT_DCLICK" class="wxRibbonBarEvent"
			help="Triggered when the left mouse button is double clicked on a tab." />
		<event name="wxEVT_RIBBONBAR_TOGGLED" class="wxRibbonBarEvent"
			help="Triggered when the button triggering the ribbon bar is clicked." />
		<event name="wxEVT_RIBBONBAR_HELP_CLICKED" class="wxRibbonBarEvent"
			help="Triggered when the help button is clicked." />
	</gen>
</GeneratorDefinitions>)===";
