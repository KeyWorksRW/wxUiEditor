///////////////////////////////////////////////////////////////////////////////
// Code generated by wxUiEditor - see https://github.com/KeyWorksRW/wxUiEditor/
//
// Do not edit any code above the "End of generated code" comment block.
// Any changes before that block will be lost if it is re-generated!
///////////////////////////////////////////////////////////////////////////////

// clang-format off

#pragma once

#include <wx/button.h>
#include <wx/checklst.h>
#include <wx/dialog.h>
#include <wx/event.h>
#include <wx/filepicker.h>
#include <wx/gdicmn.h>
#include <wx/stattext.h>

class ImportWinRes : public wxDialog
{
public:
    ImportWinRes() {}
    ImportWinRes(wxWindow *parent, wxWindowID id = wxID_ANY, const wxString& title = "Import Windows Resource Dialogs",
        const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize,
        long style = wxDEFAULT_DIALOG_STYLE, const wxString &name = wxDialogNameStr)
    {
        Create(parent, id, title, pos, size, style, name);
    }
    bool Create(wxWindow *parent, wxWindowID id = wxID_ANY, const wxString& title = "Import Windows Resource Dialogs",
        const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize,
        long style = wxDEFAULT_DIALOG_STYLE, const wxString &name = wxDialogNameStr);

protected:

    // Event handlers

    void OnClearAll(wxCommandEvent& event);
    void OnInit(wxInitDialogEvent& event);
    void OnOk(wxCommandEvent& event);
    void OnResourceFile(wxFileDirPickerEvent& event);
    void OnSelectAll(wxCommandEvent& event);

private:

    // Class member variables

    wxButton* m_btnClearAll;
    wxButton* m_btnSelectAll;
    wxCheckListBox* m_checkListResUI;
    wxFilePickerCtrl* m_fileResource;
    wxStaticText* m_staticResFile;
    wxStaticText* m_staticText;

// ************* End of generated code ***********
// DO NOT EDIT THIS COMMENT BLOCK!
//
// Code below this comment block will be preserved
// if the code for this class is re-generated.
//
// ***********************************************
    // ***********************************************

public:
    const tt_string& GetRcFilename() { return m_rcFilename; }
    std::vector<tt_string>& GetDlgNames() { return m_dialogs; }

protected:
    void ReadRcFile();

private:
    tt_string m_rcFilename;
    std::vector<tt_string> m_dialogs;
};
