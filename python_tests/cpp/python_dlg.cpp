///////////////////////////////////////////////////////////////////////////////
// Code generated by wxUiEditor - see https://github.com/KeyWorksRW/wxUiEditor/
//
// Do not edit any code above the "End of generated code" comment block.
// Any changes before that block will be lost if it is re-generated!
///////////////////////////////////////////////////////////////////////////////

// clang-format off

#if wxCHECK_VERSION(3, 1, 6)
    #include <wx/bmpbndl.h>
#else
    #include <wx/bitmap.h>
#endif

#include <wx/button.h>
#include <wx/icon.h>
#include <wx/image.h>
#include <wx/sizer.h>
#include <wx/statbmp.h>

#include "python_dlg.h"

#include <wx/mstream.h>  // memory stream classes

// Convert a data array into a wxImage
inline wxImage wxueImage(const unsigned char* data, size_t size_data)
{
    wxMemoryInputStream strm(data, size_data);
    wxImage image;
    image.LoadFile(strm);
    return image;
};

namespace wxue_img
{
    extern const unsigned char wxPython_1_5x_png[765];
    extern const unsigned char wxPython_2x_png[251];
    extern const unsigned char wxPython_png[399];
}

bool PythonDlg::Create(wxWindow* parent, wxWindowID id, const wxString& title,
    const wxPoint& pos, const wxSize& size, long style, const wxString &name)
{
    if (!wxDialog::Create(parent, id, title, pos, size, style, name))
        return false;
    if (!wxImage::FindHandler(wxBITMAP_TYPE_PNG))
        wxImage::AddHandler(new wxPNGHandler);

    auto* bSizer1 = new wxBoxSizer(wxVERTICAL);

    auto* box_sizer = new wxBoxSizer(wxVERTICAL);

    auiToolBar = new wxAuiToolBar(this, wxID_ANY);
    auiToolBar->AddLabel(wxID_ANY, "Label");
    auiToolBar->AddTool(wxID_ANY, "Search",
#if wxCHECK_VERSION(3, 1, 6)

        wxBitmapBundle::FromBitmap(wxueImage(wxue_img::fontPicker_png, sizeof(wxue_img::fontPicker_png)))
#else
        wxBitmap(wxueImage(wxue_img::fontPicker_png, sizeof(wxue_img::fontPicker_png)))
#endif
    );
    auiToolBar->AddSpacer(auiToolBar->FromDIP(10));

    spinCtrl = new wxSpinCtrl(this);
    auiToolBar->AddControl(spinCtrl);
    auiToolBar->Realize();
    box_sizer->Add(auiToolBar, wxSizerFlags().Border(wxALL));

    m_staticText = new wxStaticText(this, wxID_ANY, wxString::FromUTF8("wxPython est gÃ©nial n\'est-ce pas?"),
        ConvertDialogToPixels(wxPoint(50, 100)), ConvertDialogToPixels(wxSize(150, 32)), wxALIGN_CENTER_HORIZONTAL,
        "my_text");
    m_staticText->SetWindowVariant(wxWINDOW_VARIANT_LARGE);
    m_staticText->SetForegroundColour(wxColour(0, 128, 0));
    box_sizer->Add(m_staticText, wxSizerFlags().Center().Border(wxALL));
    {
#if wxCHECK_VERSION(3, 1, 6)
        wxVector<wxBitmap> bitmaps;
        bitmaps.push_back(wxueImage(wxue_img::wxPython_png, sizeof(wxue_img::wxPython_png)));
        bitmaps.push_back(wxueImage(wxue_img::wxPython_1_5x_png, sizeof(wxue_img::wxPython_1_5x_png)));
        bitmaps.push_back(wxueImage(wxue_img::wxPython_2x_png, sizeof(wxue_img::wxPython_2x_png)));
#endif
        auto* bmp = new wxStaticBitmap(this, wxID_ANY, 
#if wxCHECK_VERSION(3, 1, 6)
            wxBitmapBundle::FromBitmaps(bitmaps));
#else
            wxBitmap(wxueImage(wxue_img::wxPython_png, sizeof(wxue_img::wxPython_png))));
#endif
        box_sizer->Add(bmp, wxSizerFlags().Border(wxALL));
    }

    bSizer1->Add(box_sizer, wxSizerFlags().Expand().Border(wxALL));

    auto* stdBtn = CreateStdDialogButtonSizer(wxOK|wxCANCEL);
    bSizer1->Add(CreateSeparatedSizer(stdBtn), wxSizerFlags().Expand().Border(wxALL));

    SetSizerAndFit(bSizer1);
    Centre(wxBOTH);

    // Event handlers
    Bind(wxEVT_INIT_DIALOG, &PythonDlg::OnInit, this);

    return true;
}

namespace wxue_img
{

    const unsigned char fontPicker_png[763] {
        137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,22,0,0,0,22,8,6,0,0,0,196,180,108,59,0,0,0,9,112,72,89,
        115,0,0,11,19,0,0,11,19,1,0,154,156,24,0,0,2,173,73,68,65,84,56,203,173,212,223,75,20,81,20,192,241,175,235,
        234,134,146,191,211,132,162,210,76,13,125,241,193,140,32,138,64,200,135,210,240,143,8,234,33,236,161,255,32,
        136,162,31,208,67,216,107,61,4,69,86,146,102,97,100,84,32,90,70,209,110,89,146,237,210,170,107,73,45,59,187,
        206,220,59,167,7,157,213,113,55,215,176,243,116,231,206,220,207,220,57,231,204,197,182,109,177,109,91,180,
        214,162,181,22,165,148,40,101,137,101,153,98,154,166,140,77,68,164,127,52,36,137,68,66,18,137,184,196,227,
        134,24,134,33,134,17,19,219,182,229,210,149,11,66,154,240,2,136,44,220,19,145,197,177,32,2,74,219,244,142,
        78,83,94,144,187,56,39,174,103,87,11,239,114,104,249,24,132,231,254,89,126,68,77,148,165,82,208,76,176,39,
        29,42,34,252,50,76,62,125,143,146,235,129,240,156,129,169,244,154,81,0,79,58,20,132,190,55,51,28,106,220,68,
        233,70,47,150,101,51,245,51,190,34,85,146,9,150,21,249,19,190,69,12,230,77,205,142,242,60,202,11,114,177,148,
        34,56,27,75,179,129,140,169,88,202,171,45,66,239,232,20,109,77,229,136,8,149,69,62,44,75,19,156,49,82,190,
        42,99,241,28,84,68,24,249,60,199,214,18,31,197,249,57,136,8,155,139,55,160,148,38,24,137,210,213,61,232,90,
        124,237,212,145,213,224,37,52,97,106,30,140,132,105,217,89,200,147,177,41,108,219,38,150,176,176,44,69,104,
        118,138,230,250,109,28,221,183,27,128,123,47,62,112,252,242,125,234,179,51,182,155,240,248,237,52,77,219,11,
        169,40,218,128,136,160,181,166,48,207,75,69,145,153,68,3,225,24,64,242,5,195,254,191,192,14,26,249,61,207,
        216,196,28,103,142,213,146,237,33,153,203,211,215,7,93,104,36,106,38,23,59,56,23,123,164,187,171,61,43,165,
        43,108,129,155,207,38,57,208,80,230,66,157,2,165,67,35,81,147,64,56,182,132,167,75,197,75,255,15,190,78,199,
        56,113,184,106,197,207,178,0,255,138,43,222,5,163,140,79,199,92,139,107,42,242,169,44,242,165,111,183,87,31,
        103,185,245,124,146,120,194,228,209,235,48,243,166,114,21,19,96,96,56,64,107,99,25,53,21,249,46,180,181,177,
        140,129,225,64,250,29,183,236,42,101,79,77,137,171,71,157,22,244,229,120,232,168,83,220,13,4,1,104,109,174,
        75,46,116,208,177,241,32,157,185,183,233,254,151,67,72,68,104,217,123,16,120,154,130,47,71,183,212,239,103,
        224,42,210,122,242,70,178,128,89,178,150,19,5,232,239,187,195,221,128,215,53,231,160,213,13,205,124,121,63,
        76,200,63,132,131,123,207,157,63,203,90,163,163,161,214,117,173,105,39,228,239,1,160,186,161,121,225,75,22,
        119,158,197,58,163,239,225,109,201,158,232,73,217,249,186,225,149,120,200,63,132,174,106,255,63,240,114,92,
        87,181,115,184,173,243,191,185,73,220,25,255,1,27,116,30,78,220,127,50,40,0,0,0,0,73,69,78,68,174,66,96,130
    };

}

// ************* End of generated code ***********
// DO NOT EDIT THIS COMMENT BLOCK!
//
// Code below this comment block will be preserved
// if the code for this class is re-generated.
//
// clang-format on
// ***********************************************

/////////////////// Non-generated Copyright/License Info ////////////////////
// Author:    Ralph Walden
// Copyright: Copyright (c) 2020-2022 KeyWorks Software (Ralph Walden)
// License:   Apache License -- see ../../LICENSE
/////////////////////////////////////////////////////////////////////////////

void PythonDlg::OnInit(wxInitDialogEvent& event)
{
    event.Skip();  // transfer all validator data to their windows and update UI
}

#include "mainframe.h"

void MainFrame::OnPythonDlg(wxCommandEvent& WXUNUSED(event))
{
    PythonDlg dlg(this);
    dlg.ShowModal();
}
