inline const char* validators_xml = R"===(<?xml version="1.0"?>
<!DOCTYPE GeneratorDefinitions SYSTEM "gen.dtd">
<GeneratorDefinitions>
	<gen class="Text Validator" type="interface">
		<property name="validator_variable" type="string"
			help="Name of a member variable associated with the validator" />
		<property name="validator_type" type="option"
			help="Type of a validator assigned to the window">
			<option name="wxTextValidator"
				help="Use this to transfer data to/from a wxString variable." />
			<option name="wxGenericValidator"
				help="Use this if you need to use something besides a wxString." />
			<option name="wxIntegerValidator"
				help="Use this for a numerical data type." />
			<option name="wxFloatingPointValidator"
				help="Use this for a floating point data type." />
			wxTextValidator
		</property>
		<property name="validator_data_type" type="option"
			help="Data type of the member variable">
			<option name="wxString"
				help="String value." />
			<option name="wxFileName"
				help="Only use this with a wxGenericValidator type." />
				<option name="short"
					help="Only use this with a wxIntegerValidator type." />
			<option name="int"
				help="Only use this with a wxIntegerValidator type." />
			<option name="long"
				help="Only use this with a wxIntegerValidator type." />
			<option name="long long"
				help="Only use this with a wxIntegerValidator type." />
			<option name="unsigned short"
					help="Only use this with a wxIntegerValidator type." />
			<option name="unsigned int"
				help="Only use this with a wxIntegerValidator type." />
			<option name="unsigned long"
				help="Only use this with a wxIntegerValidator type." />
			<option name="unsigned long long"
				help="Only use this with a wxIntegerValidator type." />
			<option name="double"
				help="Only use this with a wxFloatingPointValidator type." />
			<option name="float"
				help="Only use this with a wxFloatingPointValidator type." />
			wxString
		</property>
		<property name="get_function" type="string"
			help="Function name to get the value of the variable." />
		<property name="set_function" type="string"
			help="Function name to set the value of the variable." />
		<property name="minValue" type="string"
			help="Used by wxIntegerValidator and wxFloatingPointValidator, this is the minimum value accepted by the validator." />
		<property name="maxValue" type="string"
			help="Used by wxIntegerValidator and wxFloatingPointValidator, this is the maximum value accepted by the validator." />
		<property name="precision" type="int"
			help="Used by wxFloatingPointValidator. The number of decimal digits after the decimal separator to show and accept. -1 uses the maximum precision possible.">
			-1
		</property>
		<property name="factor" type="int"
			help="Used by wxFloatingPointValidator. The value associated with the validator is multiplied by the factor before displaying it and divided by it when retrieving its value from the control.">
			1
		</property>
		<property name="validator_style" type="bitlist"
			help="Data filtering style for wxTextValidator or wxGenericValidator.">
			<option name="wxFILTER_NONE"
				help="No filtering takes place." />
			<option name="wxFILTER_ASCII"
				help="Non-ASCII characters are filtered out." />
			<option name="wxFILTER_ALPHA"
				help="Non-alpha characters are filtered out." />
			<option name="wxFILTER_ALPHANUMERIC"
				help="Non-alphanumeric characters are filtered out." />
			<option name="wxFILTER_DIGITS"
				help="Non-numeric characters are filtered out. Uses isdigit() to perform the check." />
			<option name="wxFILTER_NUMERIC"
				help="Non-numeric characters are filtered out, but allows decimal points, minus/plus signs and the 'e' or 'E' character." />
			<option name="wxFILTER_INCLUDE_LIST"
				help="Use an include list. The validator checks if the user input is on the list, complaining if not. See wxTextValidator::SetIncludes." />
			<option name="wxFILTER_EXCLUDE_LIST"
				help="Use an exclude list. The validator checks if the user input is on the list, complaining if it is. See wxTextValidator::SetExcludes." />
			<option name="wxFILTER_INCLUDE_CHAR_LIST"
				help="Use an include list. The validator checks if each input character is in the list (one character per list element), complaining if not. See wxTextValidator::SetIncludes." />
			<option name="wxFILTER_EXCLUDE_CHAR_LIST"
				help="Use an include list. The validator checks if each input character is in the list (one character per list element), complaining if it is. See wxTextValidator::SetExcludes." />
			<option name="wxNUM_VAL_THOUSANDS_SEPARATOR"
				help="Used by wxIntegerValidator. When this style is used, numbers are formatted using the thousands separators after validating the user entry (if the current locale uses the thousands separators character)." />
			<option name="wxNUM_VAL_ZERO_AS_BLANK"
				help="Used by wxIntegerValidator and wxFloatingPointValidator. With this style a value of zero in the associated variable is translated to an empty string and an empty value of the control is translated to a value of zero." />
			<option name="wxNUM_VAL_NO_TRAILING_ZEROES"
				help="Used by wxFloatingPointValidator. Indicates that trailing zeroes should be removed from the control text when it is validated. By default, as many zeroes as needed to satisfy the precision used when creating the validator will be appended." />
			wxFILTER_NONE
		</property>
	</gen>

	<gen class="Boolean Validator" type="interface">
		<property name="validator_variable" type="string"
			help="Name of a member variable associated with the validator" />
		<property name="validator_data_type" type="option"
			help="Data type of the member variable">
			<option name="bool"
				help="Boolean value." />
			bool
		</property>
		<property name="get_function" type="string"
			help="Function name to get the value of the variable." />
		<property name="set_function" type="string"
			help="Function name to set the value of the variable." />
	</gen>

	<gen class="Integer Validator" type="interface">
		<property name="validator_variable" type="string"
			help="Name of a member variable associated with the validator" />
		<property name="validator_data_type" type="option"
			help="Data type of the member variable">
			<option name="int"
				help="Integer value." />
			int
		</property>
		<property name="get_function" type="string"
			help="Function name to get the value of the variable." />
		<property name="set_function" type="string"
			help="Function name to set the value of the variable." />
	</gen>

	<gen class="Choice Validator" type="interface">
		<property name="validator_variable" type="string"
			help="Name of a member variable associated with the validator" />
		<property name="validator_data_type" type="option"
			help="Data type of the member variable">
			<option name="wxString"
				help="String value." />
			<option name="int"
				help="Integer value." />
			wxString
		</property>
		<property name="get_function" type="string"
			help="Function name to get the value of the variable." />
		<property name="set_function" type="string"
			help="Function name to set the value of the variable." />
	</gen>

	<gen class="String Validator" type="interface">
		<property name="validator_variable" type="string"
			help="Name of a member variable associated with the validator" />
		<property name="validator_data_type" type="option"
			help="Data type of the member variable">
			<option name="wxString"
				help="String value." />
			wxString
		</property>
		<property name="get_function" type="string"
			help="Function name to get the value of the variable." />
		<property name="set_function" type="string"
			help="Function name to set the value of the variable." />
	</gen>

	<gen class="List Validator" type="interface">
		<property name="validator_variable" type="string"
			help="Name of a member variable associated with the validator" />
		<property name="validator_data_type" type="option"
			help="Data type of the member variable">
			<option name="wxArrayInt"
				help="Integer value." />
			wxArrayInt
		</property>
		<property name="get_function" type="string"
			help="Function name to get the value of the variable." />
		<property name="set_function" type="string"
			help="Function name to set the value of the variable." />
	</gen>
</GeneratorDefinitions>)===";
