inline const char* sizers_xml = R"===(<?xml version="1.0"?>
<!DOCTYPE GeneratorDefinitions SYSTEM "gen.dtd">
<GeneratorDefinitions>

	<gen class="sizeritem" type="sizeritem">
		<inherits class="sizeritem_settings" />
		<property name="proportion" type="uint">0</property>
	</gen>

	<gen class="gbsizeritem" type="gbsizeritem">
		<inherits class="sizeritem_settings" />
		<property name="row" type="int">0</property>
		<property name="column" type="int">0</property>
		<property name="rowspan" type="int">1</property>
		<property name="colspan" type="int">1</property>
	</gen>

	<gen class="splitteritem" type="splitteritem" />
	<gen class="wxBoxSizer" image="sizer_horizontal" type="sizer">
		<inherits class="sizer_dimension" />
		<inherits class="sizer_child" />
		<property name="var_name" type="string">box_sizer</property>
		<property name="class_access" type="option">
			<option name="none" />
			<option name="protected:" />
			<option name="public:" />
			none
		</property>
		<property name="orientation" type="option">
			<option name="wxVERTICAL"
				help="Align items vertically" />
			<option name="wxHORIZONTAL"
				help="Align items horizontally" />
			wxHORIZONTAL
		</property>
	</gen>

	<gen class="VerticalBoxSizer" image="sizer" type="sizer">
		<inherits class="sizer_dimension" />
		<inherits class="sizer_child" />
		<property name="var_name" type="string">box_sizer</property>
		<property name="class_access" type="option">
			<option name="none" />
			<option name="protected:" />
			<option name="public:" />
			none
		</property>
		<property name="orientation" type="option">
			<option name="wxVERTICAL"
				help="Align items vertically" />
			<option name="wxHORIZONTAL"
				help="Align items horizontally" />
			wxVERTICAL
		</property>
	</gen>

	<gen class="wxStaticBoxSizer" image="wxStaticBoxSizer" type="sizer">
		<inherits class="sizer_dimension" />
		<inherits class="sizer_child" />
		<property name="var_name" type="string">static_box</property>
		<property name="class_access" type="option">
			<option name="none" />
			<option name="protected:" />
			<option name="public:" />
			none
		</property>
		<property name="label" type="string_escapes">label</property>
		<property name="orientation" type="option">
			<option name="wxVERTICAL"
				help="Align items vertically" />
			<option name="wxHORIZONTAL"
				help="Align items horizontally" />
			wxVERTICAL
		</property>
		<property name="id" type="id">wxID_ANY</property>
		<property name="disabled" type="bool"
			help="Disable all of the sizer's children.">0</property>
		<property name="hidden" type="bool"
			help="Hides the sizer and it's children.">0</property>
		<event name="wxEVT_UPDATE_UI" class="wxUpdateUIEvent"
			help="" />
	</gen>

	<gen class="StaticCheckboxBoxSizer" image="wxStaticCheckBoxSizer" type="sizer">
		<inherits class="sizer_dimension" />
		<inherits class="sizer_child" />
		<inherits class="Boolean Validator" />
		<property name="var_name" type="string">static_box</property>
		<property name="class_access" type="option">
			<option name="none" />
			<option name="protected:" />
			<option name="public:" />
			none
		</property>
		<property name="checkbox_var_name" type="string">m_checkBox</property>
		<property name="label" type="string_escapes">label</property>
		<property name="checked" type="bool">1</property>
		<property name="style" type="bitlist">
			<option name="wxALIGN_RIGHT"
				help="Aligns the checkbox to the right of the text instead of the left." />
		</property>
		<property name="orientation" type="option">
			<option name="wxVERTICAL"
				help="Align items vertically" />
			<option name="wxHORIZONTAL"
				help="Align items horizontally" />
			wxVERTICAL
		</property>
		<property name="id" type="id">wxID_ANY</property>
		<property name="tooltip" type="string_edit_escapes"
			help="Attach a tooltip to the checkbox label." />
		<property name="disabled" type="bool"
			help="Disable all of the sizer's children, but not the checkbox label.">0</property>
		<property name="hidden" type="bool"
			help="Hides the sizer and it's children.">0</property>
		<event name="wxEVT_UPDATE_UI" class="wxUpdateUIEvent"
			help="" />
		<event name="wxEVT_CHECKBOX" class="wxCommandEvent"
			help="Generated when the checkbox is clicked." />
	</gen>

	<gen class="StaticRadioBtnBoxSizer" image="wxStaticRadioBtnSizer" type="sizer">
		<inherits class="sizer_dimension" />
		<inherits class="sizer_child" />
		<inherits class="Boolean Validator" />
		<property name="var_name" type="string">static_box</property>
		<property name="class_access" type="option">
			<option name="none" />
			<option name="protected:" />
			<option name="public:" />
			none
		</property>
		<property name="radiobtn_var_name" type="string">m_radioBtn</property>
		<property name="label" type="string_escapes">label</property>
		<property name="checked" type="bool">1</property>
		<property name="orientation" type="option">
			<option name="wxVERTICAL"
				help="Align items vertically" />
			<option name="wxHORIZONTAL"
				help="Align items horizontally" />
			wxVERTICAL
		</property>
		<property name="id" type="id">wxID_ANY</property>
		<property name="tooltip" type="string_edit_escapes"
			help="Attach a tooltip to the radio button label." />
		<property name="disabled" type="bool"
			help="Disable all of the sizer's children, but not the radio button label.">0</property>
		<property name="hidden" type="bool"
			help="Hides the sizer and it's children.">0</property>
		<event name="wxEVT_UPDATE_UI" class="wxUpdateUIEvent"
			help="" />
		<event name="wxEVT_RADIOBUTTON" class="wxCommandEvent"
			help="Generated when the radio button is clicked." />
	</gen>

	<gen class="wxWrapSizer" image="wrap_sizer" type="sizer">
		<inherits class="sizer_dimension" />
		<inherits class="sizer_child" />
		<property name="var_name" type="string">wrap_sizer</property>
		<property name="class_access" type="option">
			<option name="none" />
			<option name="protected:" />
			<option name="public:" />
			none
		</property>
		<property name="orientation" type="option">
			<option name="wxVERTICAL"
				help="Align items vertically" />
			<option name="wxHORIZONTAL"
				help="Align items horizontally" />
			wxHORIZONTAL
		</property>
		<property name="wrap_flags" type="bitlist">
			<option name="wxEXTEND_LAST_ON_EACH_LINE"
				help="The last item on each line will use any remaining space on that line" />
			<option name="wxREMOVE_LEADING_SPACES"
				help="Removes any spacer elements from the beginning of a row" />
			wxEXTEND_LAST_ON_EACH_LINE|wxREMOVE_LEADING_SPACES
		</property>
	</gen>

	<gen class="wxGridSizer" image="grid_sizer" type="sizer">
		<inherits class="sizer_dimension" />
		<inherits class="sizer_child" />
		<property name="var_name" type="string">grid_sizer</property>
		<property name="class_access" type="option">
			<option name="none" />
			<option name="protected:" />
			<option name="public:" />
			none
		</property>
		<property name="rows" type="uint"
			help="Number of Rows. If '0', wxWidgets will automatically calculate the number of rows required to hold the supplied items.">0</property>
		<property name="cols" type="uint"
			help="Number of Columns. If row is not zero, cols can be set to '0' to have wxWidgets automtaically calculate the number of columns required.">2</property>
		<property name="vgap" type="uint"
			help="The vertical gap (in pixels) between the cells in the sizer.">0</property>
		<property name="hgap" type="uint"
			help="The horizontal gap (in pixels) between cells in the sizer.">0</property>
	</gen>

	<gen class="flexgridsizerbase" image="flex_grid_sizer" type="interface">
		<property name="vgap" type="uint"
			help="The vertical gap (in pixels) between the cells in the sizer.">0</property>
		<property name="hgap" type="uint"
			help="The horizontal gap (in pixels) between cells in the sizer.">0</property>
		<property name="growablerows" type="uintpairlist"
			help="Comma separated list of row indices (starting from zero, optional proportion appended after a colon) that should be grown if there is extra space available to the sizer." />
		<property name="growablecols" type="uintpairlist"
			help="Comma separated list of column indices (starting from zero, optional proportion appended after a colon) that should be grown if there is extra space available to the sizer." />
		<property name="flexible_direction" type="option"
			help="wxFlexGridSizer can size items equally in one direction but unequally ('flexibly') in the other">
			<option name="wxVERTICAL"
				help="Rows are flexibly sized." />
			<option name="wxHORIZONTAL"
				help="Columns are flexibly sized." />
			<option name="wxBOTH"
				help="Both rows and columns are flexibly sized (this is the default value)." />
			wxBOTH
		</property>
		<property name="non_flexible_grow_mode" type="option"
			help="If the sizer is only flexible in one direction (this can be changed using 'flexible_direction'), it needs to be decided how the sizer should grow in the other ('non flexible') direction in order to fill the available space.">
			<option name="wxFLEX_GROWMODE_NONE"
				help="Sizer doesn't grow in the non flexible direction." />
			<option name="wxFLEX_GROWMODE_SPECIFIED"
				help="Sizer honors growable columns/rows set with AddGrowableCol and AddGrowableRow. In this case equal sizing applies to minimum sizes of columns or rows (this is the default value)." />
			<option name="wxFLEX_GROWMODE_ALL"
				help="Sizer equally stretches all columns or rows in the non flexible direction, whether they are growable or not in the flexible direction." />
			wxFLEX_GROWMODE_SPECIFIED
		</property>
	</gen>

	<gen class="wxFlexGridSizer" image="flex_grid_sizer" type="sizer">
		<inherits class="sizer_dimension" />
		<inherits class="flexgridsizerbase" />
		<inherits class="sizer_child" />
		<property name="var_name" type="string">flex_grid_sizer</property>
		<property name="class_access" type="option">
			<option name="none" />
			<option name="protected:" />
			<option name="public:" />
			none
		</property>
		<property name="rows" type="uint"
			help="Number of Rows. '0' tells wxWidgets to calculate the number of rows required to hold the supplied items. If you choose to fix the row number, set the 'cols' figure to zero instead.">0</property>
		<property name="cols" type="uint"
			help="Number of Columns">2</property>
	</gen>

	<gen class="wxGridBagSizer" image="grid_bag_sizer" type="gbsizer">
		<inherits class="sizer_dimension" />
		<inherits class="flexgridsizerbase" />
		<inherits class="sizer_child" />
		<property name="var_name" type="string">grid_bag_sizer</property>
		<property name="class_access" type="option">
			<option name="none" />
			<option name="protected:" />
			<option name="public:" />
			none
		</property>
		<property name="empty_cell_size" type="wxSize"
			help="The size used for cells in the grid with no item." />
	</gen>

	<gen class="TextSizer" image="text_sizer" type="widget">
		<inherits class="sizer_child" />
		<property name="var_name" type="string">sizer_text</property>
		<property name="class_access" type="option">
			<option name="none" />
			<option name="protected:" />
			<option name="public:" />
			none
		</property>
		<property name="text" type="string_edit_escapes"
			help="Splits text up at newlines and places the lines into wxStaticText objects with the specified maximum width in a vertical wxBoxSizer.">MyText</property>
		<property name="width" type="int"
			help="Specifies the text's maximum width (this argument is available since version 3.1.1, previous versions always behaved as if the maximal width of -1 was specified).">-1</property>
	</gen>

	<gen class="spacer" image="spacer" type="widget">
		<inherits class="sizer_child" />
		<property name="width" type="uint"
			help="The width of the spacer. Ignored if proportion is non-zero or the sizer is aligned vertically.">0</property>
		<property name="height" type="uint"
			help="The height of the spacer. Ignored if proportion is non-zero or the sizer is aligned horizontally.">0</property>
		<property name="add_default_border" type="bool"
			help="If checked, 5 is added to the spacer size on normal displays, and on Windows, 10 is added on a high DPI display. Ignored if strech is non-zero.">0</property>
		<property name="proportion" type="uint"
			help="If non-zero, the spacer is stretched in proportion to the other controls in the sizer.">0</property>
	</gen>
</GeneratorDefinitions>)===";
