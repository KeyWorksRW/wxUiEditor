inline const char* language_xml = R"===(<?xml version="1.0"?>
<!DOCTYPE GeneratorDefinitions SYSTEM "gen.dtd">
<GeneratorDefinitions>
	<gen class="C++ Settings" type="interface">
		<property name="base_file" type="file"
			help="The filename of the base class." />
		<property name="base_src_includes" type="code_edit"
			help="This preamble is added in addition to any src_preamble specified for the entire project. It will be placed unchanged at the top of the generated base src file after any (optional) precompiled header file. It is typically used to add header files needed for lambdas used as event handlers." />
		<property name="base_hdr_includes" type="code_edit"
			help="This preamble is placed unchanged in the generated base file after all wx/ include files. It is normally used to include additional header files." />
		<property name="inserted_hdr_code" type="code_edit"
			help="Specify code to insert into the header file at the end of the public: section. You may add protected: and private: sections as needed for additional methods and member variables." />
		<property name="use_derived_class" type="bool"
			help="Check this if you will be creating a derived class. If not checked, you will need to create a source file implementing any event handlers.">1</property>
		<property name="derived_class_name" type="string"
			help="The name of the derived class. Ignored if use_derived_class is unchecked." />
		<property name="derived_file" type="file"
			help="The filename of the derived class. You can leave this empty if you have already generated the file. Ignored if use_derived_class is unchecked." />
		<property name="private_members" type="bool"
			help="Check this to make all protected: members private:. This can only be done if you are NOT creating a derived class (use_derived_class is unchecked)." />
		<property name="class_decoration" type="string"
			help="This specifies the keyword or macro to add to the class declaration (such as __declspec(dllexport) )." />
		<property name="generate_ids" type="bool"
			help="If checked, any non-wxWidgets ids will be created as an enumerated list. If you want to use your own id values, uncheck this and add the header file containing the ids to either base_src_includes or base_hdr_includes.">1</property>
	</gen>

	<gen class="wxPython Settings" type="interface">
		<property name="python_file" type="file"
			help="The filename to use if generating code for wxPython." />
		<property name="python_variable_args" type="bool"
			help="If checked, the form parameters will be set to (*args, **kwargs) instead of listing all the parameters and their default values.">1</property>
		<property name="python_inherit_name" type="string"
			help="The name to use for an inherited class. If specified, the info tab in the Python panel will include a template for creating an inherited class." />
		<property name="python_call_skip" type="bool"
			help="If checked, event handlers in the base class will call event.Skip() instead of using pass.">0</property>
		<property name="python_use_xrc" type="bool"
			help="If checked, the form will load the file specified in python_xrc_file and use that for the UI instead of using Python to create the wxWidgets controls.">0</property>
		<property name="python_xrc_file" type="file"
			help="If specified and python_use_xrc is checked, then this XRC file will be generated when Python code is generated, and the form will be initialized to use the generated XRC file." />
	</gen>

	<gen class="XRC Settings" type="interface">
		<property name="xrc_file" type="file"
			help="The filename to use if generating XRC (wxPython can override this with its own file name)." />
		<property name="xrc_no_whitespace" type="bool"
			help="If checked, no leading whitespace will be used. This makes the file smaller, but less readable.">0</property>
	</gen>
</GeneratorDefinitions>)===";
