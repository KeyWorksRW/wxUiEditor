<?xml version="1.0"?>
<!DOCTYPE GeneratorDefinitions SYSTEM "gen.dtd">
<GeneratorDefinitions>
    <gen class="wxStaticText" image="wxStaticText" type="widget">
        <inherits class="wxWindow"/>
        <inherits class="Window Events"/>
        <inherits class="String Validator"/>
        <inherits class="sizer_child"/>
        <property name="var_name" type="string">m_staticText</property>
        <property name="label" type="string_edit_escapes">MyLabel</property>
        <property name="markup" type="bool"
            help="Simple markup can be used to apply different fonts or colours to different parts of the control label when supported. If markup is not supported by the control or platform, it is simply stripped and SetLabel() is used with the resulting string.\n\nSample: This is <i>italic</i> and this is <span fgcolor='red'>red</span>">
            0</property>
        <property name="wrap" type="int"
            help="Wraps the control's label so that each of its lines becomes at most this many pixels wide if possible (the lines are broken at words boundaries so it might not be the case if words are too long). If width is negative, no wrapping is done.">
            -1</property>
        <property name="style" type="bitlist">
            <option name="wxALIGN_LEFT"
                help="Align the text to the left."/>
            <option name="wxALIGN_RIGHT"
                help="Align the text to the right."/>
            <option name="wxALIGN_CENTER_HORIZONTAL"
                help="Center the text (horizontally)."/>
            <option name="wxST_NO_AUTORESIZE"
                help="By default, the control will adjust its size to exactly fit to the size of the text when SetLabel() is called. If this style flag is given, the control will not change its size (this style is especially useful with controls which also have the wxALIGN_RIGHT or the wxALIGN_CENTER_HORIZONTAL style because otherwise they won't make sense any longer after a call to SetLabel())."/>
            <option name="wxST_ELLIPSIZE_START"
                help="If the labeltext width exceeds the control width, replace the beginning of the label with an ellipsis; uses wxControl::Ellipsize."/>
            <option name="wxST_ELLIPSIZE_MIDDLE"
                help="If the label text width exceeds the control width, replace the middle of the label with an ellipsis; uses wxControl::Ellipsize."/>
            <option name="wxST_ELLIPSIZE_END"
                help="If the label text width exceeds the control width, replace the end of the label with an ellipsis; uses wxControl::Ellipsize."/>
        </property>
    </gen>

    <gen class="wxTextCtrl" image="wxTextCtrl" type="widget">
        <inherits class="Text Validator"/>
        <inherits class="wxWindow"/>
        <inherits class="Window Events"/>
        <inherits class="sizer_child"/>
        <property name="var_name" type="string">m_textCtrl</property>
        <property name="value" type="string_edit_escapes"
            help="Sets the initial contents of the control."/>
        <property name="hint" type="string_escapes"
            help="Sets a hint to be shown when the control is empty and does not have the focus."/>
        <property name="prop_maxlength" type="type_string"
            help="The maximum length of user-entered text. 0 means no limit. Note that in wxGTK this function may only be used with single line text controls."/>
        <property name="prop_auto_complete" type="type_stringlist_semi"
            help="If one or more strings are entered, they will be used to initialize autocomplete."/>
        <property name="prop_spellcheck" type="bitlist">
            <option name="enabled"
                help="Currently this is supported in wxMSW (when running under Windows 8 or later), wxGTK when using GTK 3 and wxOSX. In addition, wxMSW requires that the text control has the wxTE_RICH2 style set, while wxOSX requires that the control has the wxTE_MULTILINE style.\n\nAvailable since 3.1.6"/>
            <option name="grammar"
                help="Enables grammar checking in addition to spell checking. Currently this is supported in wxMSW (when running under Windows 8 or later), wxGTK when using GTK 3 and wxOSX. In addition, wxMSW requires that the text control has the wxTE_RICH2 style set, while wxOSX requires that the control has the wxTE_MULTILINE style.\n\nAvailable since 3.1.6"/>
        </property>
        <property name="style" type="bitlist">
            <option name="wxTE_PROCESS_ENTER"
                help="The control will generate the event wxEVT_TEXT_ENTER (otherwise pressing Enter key is either processed internally by the control or used for navigation between dialog controls)."/>
            <option name="wxTE_PROCESS_TAB"
                help="The control will receive wxEVT_CHAR events for TAB pressed - normally, TAB is used for passing to the next control in a dialog instead. For the control created with this style, you can still use Ctrl-Enter to pass to the next control from the keyboard."/>
            <option name="wxTE_MULTILINE"
                help="The text control allows multiple lines."/>
            <option name="wxTE_PASSWORD"
                help="The text will be echoed as asterisks."/>
            <option name="wxTE_READONLY"
                help="The text will not be user-editable."/>
            <option name="wxTE_RICH"
                help="Use rich text control under Windows. This allows having more than 64KB of text in the control. This style is ignored under other platforms."/>
            <option name="wxTE_RICH2"
                help="Use rich text control version 2.0 or 3.0 under Windows. This style is ignored under other platforms."/>
            <option name="wxTE_AUTO_URL"
                help="Highlight the URLs and generate the wxTextUrlEvents when mouse events occur over them. This style is only supported for wxTE_RICH Win32 and multi-line wxGTK2 text controls."/>
            <option name="wxTE_NOHIDESEL"
                help="By default, the Windows text control doesn't show the selection when it doesn't have focus - use this style to force it to always show it. This style is ignored under other platforms."/>
            <option name="wxTE_NO_VSCROLL"
                help="For multiline controls only: a vertical scrollbar will never be created. This limits the amount of text which can be entered into the control to what can be displayed in it under MSW but not under GTK2. Currently not implemented for the other platforms."/>
            <option name="wxTE_LEFT"
                help="The text in the control will be left-justified (default)."/>
            <option name="wxTE_CENTER"
                help="The text in the control will be centered (currently Windows and wxGTK2 only)."/>
            <option name="wxTE_RIGHT"
                help="The text in the control will be right-justified (currently Windows and wxGTK2 only)."/>
            <option name="wxTE_DONTWRAP"
                help="Same as wxHSCROLL style: don't wrap at all, show horizontal scrollbar instead."/>
            <option name="wxTE_CHARWRAP"
                help="Wrap the lines too long to be shown entirely at any position (wxUniv and wxGTK2 only)."/>
            <option name="wxTE_WORDWRAP"
                help="Wrap the lines too long to be shown entirely at word boundaries (wxUniv and wxGTK2 only)."/>
            <option name="wxTE_BESTWRAP"
                help="Wrap the lines at word boundaries or at any other character if there are words longer than the window width (this is the default)."/>
        </property>
        <property name="focus" type="bool"
            help="When checked, this control will be set to receive keyboard input when the parent form is first created.">
            0</property>
        <event name="wxEVT_TEXT" class="wxCommandEvent"
            help="Generated when the text changes. Notice that this event will always be generated when the text controls contents changes - whether this is due to user input or comes from the program itself (for example, if SetValue() is called.)"/>
        <event name="wxEVT_TEXT_ENTER" class="wxCommandEvent"
            help="Generated when enter is pressed in a text control (which must have wxTE_PROCESS_ENTER style for this event to be generated)."/>
        <event name="wxEVT_TEXT_URL" class="wxTextUrlEvent"
            help="Generated when the a mouse event occurred over an URL in the text control (Windows and wxGTK2 only)."/>
        <event name="wxEVT_TEXT_MAXLEN" class="wxCommandEvent"
            help="Generated when the user tries to enter more text into the control than the limit set by SetMaxLength."/>
    </gen>

    <gen class="wxRichTextCtrl" image="richtextctrl" type="widget">
        <inherits class="wxWindow">
            <property name="window_style" type="bitlist">wxVSCROLL|wxHSCROLL|wxWANTS_CHARS</property>
            <property name="minimum_size" type="wxSize"
                help="Sets the minimum size of the window, to indicate to the sizer layout mechanism that this is the minimum required size.">
                400,250</property>
        </inherits>
        <inherits class="sizer_child"/>
        <property name="var_name" type="string">m_richText</property>
        <property name="value" type="string_escapes"
            help="Sets the initial contents of the control."/>
        <property name="hint" type="string_escapes"
            help="Sets a hint to be shown when the control is empty and does not have the focus."/>
        <property name="style" type="bitlist">
            <option name="wxRE_CENTRE_CARET"
                help="The control will try to keep the caret line centred vertically while editing."/>
            <option name="wxRE_READONLY"
                help="The text will not be editable."/>
        </property>
        <property name="focus" type="bool"
            help="When checked, this control will be set to receive keyboard input when the parent form is first created.">
            0</property>
        <event name="wxEVT_TEXT" class="wxCommandEvent"
            help="Generated when the text changes. Notice that this event will always be sent when the text controls contents changes - whether this is due to user input or comes from the program itself (for example, if SetValue() is called)"/>
        <event name="wxEVT_TEXT_ENTER" class="wxCommandEvent"
            help="Generated when enter is pressed in a text control (which must have wxTE_PROCESS_ENTER style for this event to be generated)."/>
        <event name="wxEVT_TEXT_URL" class="wxTextUrlEvent"
            help="Generated when a mouse event occurrs over a URL in the text control (wxMSW and wxGTK2 only)"/>

        <event name="wxEVT_RICHTEXT_LEFT_CLICK" class="wxRichTextEvent"
            help="Generated when the user releases the left mouse button over an object."/>
        <event name="wxEVT_RICHTEXT_RIGHT_CLICK" class="wxRichTextEvent"
            help="Generated when the user releases the right mouse button over an object."/>
        <event name="wxEVT_RICHTEXT_MIDDLE_CLICK" class="wxRichTextEvent"
            help="Generated when the user releases the middle mouse button over an object."/>
        <event name="EVT_RICHTEXT_LEFT_DCLICK" class="wxRichTextEvent"
            help="Generated when the user double-clicks an object."/>

        <event name="wxEVT_RICHTEXT_CHARACTER" class="wxRichTextEvent"
            help="Generated when the user presses a character key. Valid event functions: GetFlags, GetPosition, GetCharacter."/>
        <event name="wxEVT_RICHTEXT_CONSUMING_CHARACTER" class="wxRichTextEvent"
            help="Generated when the user presses a character key but before it is processed and inserted into the control. Call Veto to prevent normal processing."/>
        <event name="wxEVT_RICHTEXT_DELETE" class="wxRichTextEvent"
            help="Generated when the user presses the backspace or delete key. Valid event functions: GetFlags, GetPosition."/>
        <event name="wxEVT_RICHTEXT_RETURN" class="wxRichTextEvent"
            help="Generated when the user presses the return key. Valid event functions: GetFlags, GetPosition."/>

        <event name="wxEVT_RICHTEXT_STYLESHEET_CHANGING" class="wxRichTextEvent"
            help="Generated when the control's stylesheet is about to change."/>
        <event name="wxEVT_RICHTEXT_STYLESHEET_CHANGED" class="wxRichTextEvent"
            help="Generated when the control's stylesheet has changed, for example the user added, edited or deleted a style. Valid event functions: GetRange, GetPosition."/>
        <event name="wxEVT_RICHTEXT_STYLESHEET_REPLACING" class="wxRichTextEvent"
            help="Generated when the control's stylesheet is about to be replaced, for example when a file is loaded into the control. Valid event functions: Veto, GetOldStyleSheet, GetNewStyleSheet."/>
        <event name="wxEVT_RICHTEXT_STYLESHEET_REPLACED" class="wxRichTextEvent"
            help="Generated when the control's stylesheet has been replaced, for example when a file is loaded into the control. Valid event functions: GetOldStyleSheet, GetNewStyleSheet."/>

        <event name="wxEVT_RICHTEXT_PROPERTIES_CHANGED" class="wxRichTextEvent"
            help="Generated when properties have been applied to the control. Valid event functions: GetPosition, GetRange."/>
        <event name="wxEVT_RICHTEXT_STYLE_CHANGED" class="wxRichTextEvent"
            help="Generated when styling has been applied to the control. Valid event functions: GetPosition, GetRange."/>
        <event name="wxEVT_RICHTEXT_CONTENT_INSERTED" class="wxRichTextEvent"
            help="Generated when content has been inserted into the control. Valid event functions: GetPosition, GetRange."/>
        <event name="wxEVT_RICHTEXT_CONTENT_DELETED" class="wxRichTextEvent"
            help="Generated when content has been deleted from the control. Valid event functions: GetPosition, GetRange."/>
        <event name="wxEVT_RICHTEXT_BUFFER_RESET " class="wxRichTextEvent"
            help="Generated when the buffer has been reset by deleting all content. You can use this to set a default style for the first new paragraph."/>
        <event name="wxEVT_RICHTEXT_SELECTION_CHANGED" class="wxRichTextEvent"
            help="Generated when the selection range has changed."/>
        <event name="wxEVT_RICHTEXT_FOCUS_OBJECT_CHANGED" class="wxRichTextEvent"
            help="Generated when the current focus object has changed."/>
    </gen>

    <gen class="wxStyledTextCtrl" image="scintilla" type="widget">
        <inherits class="wxWindow"/>
		<inherits class="Window Events"/>
		<inherits class="sizer_child"/>
		<property
            name="var_name" type="string">m_scintilla</property>
		<property name="lexer" type="option">
            <option name="A68K"/>
			<option name="ABAQUS"/>
			<option name="ADA"/>
			<option name="APDL"/>
			<option name="AS"/>
			<option name="ASM"/>
			<option name="ASN1"/>
			<option name="ASYMPTOTE"/>
			<option name="AU3"/>
			<option name="AVE"/>
			<option name="AVS"/>
			<option name="BAAN"/>
			<option name="BASH"/>
			<option name="BATCH"/>
			<option name="BIBTEX"/>
			<option name="BLITZBASIC"/>
			<option name="BULLANT"/>
			<option name="CAML"/>
			<option name="CLW"/>
			<option name="CLWNOCASE"/>
			<option name="CMAKE"/>
			<option name="COBOL"/>
			<option name="COFFEESCRIPT"/>
			<option name="CONF"/>
			<option name="CONTAINER"/>
			<option name="CPP"/>
			<option name="CPPNOCASE"/>
			<option name="CSOUND"/>
			<option name="CSS"/>
			<option name="D"/>
			<option name="DIFF"/>
			<option name="DMAP"/>
			<option name="DMIS"/>
			<option name="ECL"/>
			<option name="EDIFACT"/>
			<option name="EIFFEL"/>
			<option name="EIFFELKW"/>
			<option name="ERLANG"/>
			<option name="ERRORLIST"/>
			<option name="ESCRIPT"/>
			<option name="F77"/>
			<option name="FLAGSHIP"/>
			<option name="FORTH"/>
			<option name="FORTRAN"/>
			<option name="FREEBASIC"/>
			<option name="GAP"/>
			<option name="GUI4CLI"/>
			<option name="HASKELL"/>
			<option name="HTML"/>
			<option name="IHEX"/>
			<option name="INNOSETUP"/>
			<option name="JSON"/>
			<option name="KIX"/>
			<option name="KVIRC"/>
			<option name="LATEX"/>
			<option name="LISP"/>
			<option name="LITERATEHASKELL"/>
			<option name="LOT"/>
			<option name="LOUT"/>
			<option name="LUA"/>
			<option name="MAGIK"/>
			<option name="MAKEFILE"/>
			<option name="MARKDOWN"/>
			<option name="MATLAB"/>
			<option name="METAPOST"/>
			<option name="MMIXAL"/>
			<option name="MODULA"/>
			<option name="MSSQL"/>
			<option name="MYSQL"/>
			<option name="NIMROD"/>
			<option name="NNCRONTAB"/>
			<option name="NSIS"/>
			<option name="NULL"/>
			<option name="OCTAVE"/>
			<option name="OPAL"/>
			<option name="OSCRIPT"/>
			<option name="PASCAL"/>
			<option name="PERL"/>
			<option name="PHPSCRIPT"/>
			<option name="PLM"/>
			<option name="PO"/>
			<option name="POV"/>
			<option name="POWERBASIC"/>
			<option name="POWERPRO"/>
			<option name="POWERSHELL"/>
			<option name="PROGRESS"/>
			<option name="PROPERTIES"/>
			<option name="PS"/>
			<option name="PUREBASIC"/>
			<option name="PYTHON"/>
			<option name="R"/>
			<option name="REBOL"/>
			<option name="REGISTRY"/>
			<option name="RUBY"/>
			<option name="RUST"/>
			<option name="SCRIPTOL"/>
			<option name="SMALLTALK"/>
			<option name="SML"/>
			<option name="SORCUS"/>
			<option name="SPECMAN"/>
			<option name="SPICE"/>
			<option name="SQL"/>
			<option name="SREC"/>
			<option name="STTXT"/>
			<option name="TACL"/>
			<option name="TADS3"/>
			<option name="TAL"/>
			<option name="TCL"/>
			<option name="TCMD"/>
			<option name="TEHEX"/>
			<option name="TEX"/>
			<option name="TXT2TAGS"/>
			<option name="VB"/>
			<option name="VBSCRIPT"/>
			<option name="VERILOG"/>
			<option name="VHDL"/>
			<option name="VISUALPROLOG"/>
			<option name="XCODE"/>
			<option name="XML"/>
			<option name="YAML"/>
        CPP </property>
		<property name="focus" type="bool"
            help="When checked, this control will be set to receive keyboard input when the parent form is first created.">
        0</property>
		<property name="read_only" type="bool"
            help="Set ReadOnly Mode. Disables editing if set to true.">0</property>
		<property name="eol_mode"
            type="option"
            help="Sets the characters that are added into the document when the user presses the Enter key.">
            <option name="\r\n (CR/LF)"/>
			<option name="\r (CR)"/>
			<option name="\n (LF)"/> \n (LF) </property>
		<property
            name="left_margin_width" type="int"
            help="Sets the width of the blank margin to the left of the text. If this is set to 5, then it will automatically scale on high DPI displays.">
        5</property>
		<property name="right_margin_width" type="int"
            help="Sets the width of the blank margin to the right of the text. If this is set to 5, then it will automatically scale on high DPI displays.">
        5</property>
		<property name="view_eol" type="bool"
            help="Show end of line characters.">0</property>
		<property name="view_whitespace" type="option"
            help="Set whether white space is visible. Space characters appear as small centered dots and tab characters as light arrows pointing to the right.">
            <option name="invisible"/>
			<option name="always visible"/>
			<option name="visible after indent"/>
			<option
                name="only indent visible"/> invisible </property>
		<property name="view_tab_strikeout" type="bool"
            help="By default, if whitespace is visible, tab charcers are drawn as light arrows pointing to the right. If strikeout is checked, then tabs are drawn as a horizontal line stretching until the tabstop.">
        0</property>

		<category name="Margin Columns">
            <property name="select_wrapped_line" type="bool"
                help="If checked, the entire wrapped line is selected when clicking in the margin. If not checked, only the subline will be selected.">
        1</property>

            <property name="line_margin" type="option" help="Specify the margin you want line numbers to appear in.">
                <option name="none"/>
				<option name="0"/>
				<option name="1"/>
				<option name="2"/>
				<option name="3"/>
				<option
                    name="4"/> none </property>
            <property name="line_digits" type="option"
                help="The number of digits needed to display the largest line. The  width of the margin will be calculated based on this number of digits.">
                <option name="2"/>
				<option name="3"/>
				<option name="4"/>
				<option name="5"/>
				<option name="6"/> 5 </property>

            <property name="fold_margin" type="option" help="Specify the margin you want folding symbols to appear in.">
                <option name="none"/>
				<option name="0"/>
				<option name="1"/>
				<option name="2"/>
				<option name="3"/>
				<option
                    name="4"/> none </property>
            <property name="fold_width" type="int"
                help="A margin with zero width is invisible.">16</property>
            <property name="fold_marker_style" type="option" help="Specify the style of marker to use for folders.">
                <option name="arrow"/>
				<option name="plus/minus"/>
				<option name="circle tree"/>
				<option name="box tree"/>
        arrow </property>
            <property name="fold_marker_colour" type="wxColour"
                help="Sets the background colour of the markers."/>

            <property name="automatic_folding" type="bitlist">
                <option name="show_lines" help="Automatically show lines as needed."/>
                <option name="margin_clicks" help="Handle clicks in fold margin automatically."/>
                <option name="show_changes" help="Show lines as needed when fold structure is changed."/>
            </property>
            <property name="fold_flags" type="bitlist"
                help="In addition to showing markers in the folding margin, you can indicate folds to the user by drawing lines in the text area.">
                <option name="before if expanded" help="Draw above if expanded."/>
                <option name="before if contracted" help="Draw above if not expanded."/>
                <option name="after if expanded" help="Draw below if expanded."/>
                <option name="after if contracted" help="Draw below if not expanded."/>
                <option name="debug hex levels"
                    help="Display hexadecimal fold levels in line margin to aid debugging of folding."/>
                <option name="debug line state"
                    help="Display hexadecimal line state in line margin to aid debugging of lexing and folding. Cannot be used with &quot;debug hex levels&quot;."/>
            </property>

            <property name="separator_margin" type="option"
                help="Specify the margin you want a vertical separator line to appear in.">
                <option name="none"/>
				<option name="0"/>
				<option name="1"/>
				<option name="2"/>
				<option name="3"/>
				<option
                    name="4"/> none </property>
            <property name="separator_width" type="int"
                help="Note: a margin with zero width is invisible.">1</property>

            <property name="symbol_margin" type="option"
                help="Specify the margin you want non-folding symbols to appear in.">
                <option name="none"/>
				<option name="0"/>
				<option name="1"/>
				<option name="2"/>
				<option name="3"/>
				<option
                    name="4"/> none </property>
            <property name="symbol_mouse_sensitive" type="bool"
                help="If checked, clicking in the margin will send a wxEVT_STC_MARGINCLICK or wxEVT_STC_MARGIN_RIGHT_CLICK event. If not checked, the margin can be used to select a range of lines.">
        0</property>

            <property name="custom_margin" type="option" help="Specify the margin you want to fully customize">
                <option name="none"/>
				<option name="0"/>
				<option name="1"/>
				<option name="2"/>
				<option name="3"/>
				<option
                    name="4"/> none </property>
            <property name="custom_width" type="int"
                help="A margin with zero width is invisible. 16 is normally used if the margin type is set to &quot;symbol&quot;.">
        16</property>
            <property name="custom_type" type="option">
                <option name="symbol" help="Symbol"/>
				<option name="number" help="Line number"/>
				<option name="background"
                    help="Symbol using background colour"/>
				<option name="foreground"
                    help="Symbol using foreground colour"/>
				<option name="text" help="Application defined text"/>
				<option
                    name="right-aligned text" help="Right aligned application text"/>
				<option name="colour"
                    help="Use a custom colour for the background of the margin."/> symbol </property>
            <property name="custom_colour" type="wxColour"
                help="Sets the margin colour if custom_type is set to &quot;colour&quot;."/>
            <property name="custom_mask_folders" type="bool"
                help="Only used if custom_type is set to &quot;symbol&quot;. If checked, a mask for the 7 logical symbols used to denote folding is used. Otherwise, a mask for all non-folding symbols is used.">
        0</property>
            <property name="custom_mouse_sensitive" type="bool"
                help="If checked, clicking in the margin will send a wxEVT_STC_MARGINCLICK or wxEVT_STC_MARGIN_RIGHT_CLICK event. If not checked, the margin can be used to select a range of lines.">
        0</property>
        </category>

		<category name="Selections">
            <property name="allow_mouse_rectangle" type="bool"
                help="Sets whether switching to rectangular mode while selecting with the mouse is allowed.">0</property>
            <property name="multiple_selections" type="bool"
                help="Sets whether multiple selections can be made.">0</property>
            <property name="multiple_selection_typing" type="bool"
                help="Sets whether typing can be performed into multiple selections.">0</property>
            <property name="additional_carets_visible" type="bool"
                help="Sets whether additional carets in a multiple selection are visible.">1</property>
            <property name="additional_carets_blink" type="bool"
                help="Sets whether multiple selection carets blink.">0</property>
            <property name="paste_multiple" type="bool"
                help="If checked, pasted text will be added to each multiple section.">0</property>
        </category>

		<category
            name="Tabs and Indentation">
            <property name="use_tabs" type="bool"
                help="Use tabs for indenting, instead of spaces.">1</property>
            <property name="tab_width" type="string"
                help="The number of spaces per tab character.">4</property>
            <property name="indentation_guides" type="option">
                <option name="no guides"
                    help="No indentation guides are shown."/>
                <option name="real"
                    help="Indentation guides are shown inside real indentation white space."/>
                <option name="forward"
                    help="Indentation guides are shown beyond the actual indentation up to the level of the next non-empty line. If the previous non-empty line was a fold header then indentation guides are shown for one more level of indent than that line. This setting is good for Python."/>
                <option name="both"
                    help=" 	Indentation guides are shown beyond the actual indentation up to the level of the next non-empty line or previous non-empty line whichever is the greater. This setting is good for most languages."/>
            </property>
            <property name="indentation_size" type="int"
                help="Sets the size of indentation in terms of the width of a space. If you set a width of 0, the indent size is the same as the tab size. There are no limits on indent sizes, but values less than 0 or large values may have undesirable effects."
            />
            <property name="tab_indents" type="bool"
                help="If checked, then inside indentation white space, the tab key will indent rather than insert a tab character.">
        1</property>
            <property name="backspace_unindents" type="bool"
                help="If checked, then inside indentation white space the backspace key will unindent rather than deleting one space.">
        1</property>
        </category> )===" R"===( <category name="Wrapping">
            <property name="wrap_mode" type="option">
                <option name="no wrapping"
                    help="Lines are not wrapped."/>
				<option name="word"
                    help="Wrap on word or style boundaries."/>
				<option name="character"
                    help="Wrap between any characters. This is the preferred mode to use Asian languages where there is no white space between words."/>
				<option
                    name="whitespace"
                    help="Wrap on any whitespace"/> no wrapping </property>
            <property name="wrap_visual_flag" type="bitlist">
                <option name="end" help="Visual flag at end of subline of a wrapped line."/>
                <option name="start"
                    help="Visual flag at begin of subline of a wrapped line. Subline is indented by at least 1 to make room for the flag."/>
                <option name="margin" help="Visual flag in line number margin."/>
            </property>
            <property name="wrap_visual_location" type="bitlist">
                <option name="end_text" help="Visual flag at end of subline drawn near text."/>
                <option name="start_text" help="Visual flag at beginning of subline drawn near text."/>
            </property>
            <property name="wrap_indent_mode" type="option">
                <option name="fixed"
                    help="Wrapped sublines aligned to left of window plus amount set by wrap_start_indent"/>
				<option
                    name="same"
                    help="Wrapped sublines are aligned to first subline indent."/>
				<option name="indent"
                    help="Wrapped sublines are aligned to first subline indent plus one more level of indentation."/>
                <!-- SC_WRAPINDENT_DEEPINDENT is not supported in 3.1.15
					<option name="deep_indent"
					help="Wrapped sublines are aligned to first subline indent plus two more levels of indentation." /> -->
        fixed </property>
            <property name="wrap_start_indent" type="int"
                help="If wrap_indent_mode is set to &quot;fixed&quot; this sets the size of indentation of sublines for wrapped lines in terms of the average character width. There are no limits on indent sizes, but values less than 0 or large values may have undesirable effects. The indention of sublines is independent of visual flags, but if wrap_visual_flag is set to str start then an indent of at least 1 is used. "/>
        </category>
		<event
            name="wxEVT_STC_AUTOCOMP_CANCELLED" class="wxStyledTextEvent"/>
		<event name="wxEVT_STC_AUTOCOMP_CHAR_DELETED"
            class="wxStyledTextEvent"
            help="Generated when the user deleted a character while autocompletion list was active."/>
		<event
            name="wxEVT_STC_AUTOCOMP_COMPLETED" class="wxStyledTextEvent"/>
		<event name="wxEVT_STC_AUTOCOMP_SELECTION"
            class="wxStyledTextEvent"
            help="Generated when the user has selected an item in an autocompletion list. The event is sent before the selection is inserted."/>
		<event
            name="wxEVT_STC_AUTOCOMP_SELECTION_CHANGE" class="wxStyledTextEvent"/>
		<event name="wxEVT_STC_CALLTIP_CLICK"
            class="wxStyledTextEvent"
            help="Generated when the user clicks on a calltip. This event can be used to display the next function prototype when a function name is overloaded with different arguments."/>
		<event
            name="wxEVT_STC_CHANGE" class="wxStyledTextEvent"
            help="Generated when the text (not the style) of the document changes. "/>
		<event name="wxEVT_STC_CHARADDED"
            class="wxStyledTextEvent"
            help="Generated when the user types an ordinary text character (as opposed to a command character) that is entered into the text. You can use this to decide to display a call tip or an auto completion list."/>
		<event
            name="wxEVT_STC_CLIPBOARD_COPY" class="wxStyledTextEvent"/>
		<event name="wxEVT_STC_CLIPBOARD_PASTE"
            class="wxStyledTextEvent"/>
		<event name="wxEVT_STC_DOUBLECLICK" class="wxStyledTextEvent"/>
		<event
            name="wxEVT_STC_DO_DROP" class="wxStyledTextEvent"/>
		<event name="wxEVT_STC_DRAG_OVER"
            class="wxStyledTextEvent"/>
		<event name="wxEVT_STC_DWELLEND" class="wxStyledTextEvent"/>
		<event
            name="wxEVT_STC_DWELLSTART" class="wxStyledTextEvent"
            help="Generated when the user keeps the mouse in one position for the dwell period."/>
		<event
            name="wxEVT_STC_HOTSPOT_CLICK" class="wxStyledTextEvent"
            help="Generated when the user clicks on text that is in a style with the hotspot attribute set."/>
		<event
            name="wxEVT_STC_HOTSPOT_DCLICK" class="wxStyledTextEvent"
            help="Generated when the user double clicks on text that is in a style with the hotspot attribute set."/>
		<event
            name="wxEVT_STC_HOTSPOT_RELEASE_CLICK" class="wxStyledTextEvent"/>
		<event name="wxEVT_STC_INDICATOR_CLICK"
            class="wxStyledTextEvent"
            help="Generated when the user clicks the mouse on text that has an indicator."/>
		<event
            name="wxEVT_STC_INDICATOR_RELEASE" class="wxStyledTextEvent"
            help="Generated when the user releases the mouse on text that has an indicator."/>
		<event
            name="wxEVT_STC_MACRORECORD" class="wxStyledTextEvent"
            help="Generated each time a recordable change occurs,"/>
		<event name="wxEVT_STC_MARGINCLICK"
            class="wxStyledTextEvent"
            help="Generated when the mouse was clicked inside a margin that was marked as sensitive."/>
		<event
            name="wxEVT_STC_MARGIN_RIGHT_CLICK" class="wxStyledTextEvent"
            help="Generated when the mouse was right clicked inside a margin that was marked as sensitive."/>
		<event
            name="wxEVT_STC_MODIFIED" class="wxStyledTextEvent"
            help="Generated when the text or styling of the document changes or is about to change."/>
		<event
            name="wxEVT_STC_NEEDSHOWN" class="wxStyledTextEvent"
            help="Generated when a range of lines that is currently invisible should be made visible. "/>
		<event
            name="wxEVT_STC_PAINTED" class="wxStyledTextEvent"/>
		<event name="wxEVT_STC_ROMODIFYATTEMPT"
            class="wxStyledTextEvent"/>
		<event name="wxEVT_STC_SAVEPOINTLEFT" class="wxStyledTextEvent"
            help="Generated when the save point is left."/>
		<event name="wxEVT_STC_SAVEPOINTREACHED"
            class="wxStyledTextEvent"
            help="Generated when the save point is entered."/>
		<event name="wxEVT_STC_START_DRAG"
            class="wxStyledTextEvent"/>
		<event name="wxEVT_STC_STYLENEEDED" class="wxStyledTextEvent"
            help="Generated when about to display or print text that requires styling."/>
		<event
            name="wxEVT_STC_UPDATEUI" class="wxStyledTextEvent"
            help="Generated when either the text or styling of the document has changed or the selection range or scroll position has changed."/>
		<event
            name="wxEVT_STC_USERLISTSELECTION" class="wxStyledTextEvent"
            help="Generated when the user has selected an item in a user list. "/>
		<event name="wxEVT_STC_ZOOM"
            class="wxStyledTextEvent"
            help="Generated when the user zooms the display using the keyboard."/>
    </gen>

</GeneratorDefinitions>
