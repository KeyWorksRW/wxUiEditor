name: "Daily Build"

on:
  schedule:
    - cron: '17 5 * * *'
  workflow_dispatch:

env:
  BUILD_TYPE: Release

jobs:
  buildWindows:
    runs-on: windows-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - run: mkdir ${{github.workspace}}/build

    - name: Configure CMake
      run: cmake -G "Visual Studio 17 2022" -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build wxUiEditor
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target wxUiEditor

    - name: Create Windows Artifact
      uses: actions/upload-artifact@v4
      with:
        name: WindowsExecutable
        path: |
          build/bin/Release/wxUiEditor.exe

    - name: Generate Test Code
      run: |
        cd ${{github.workspace}}/codegen_test
        ${{github.workspace}}/build/bin/Release/wxUiEditor.exe --gen_cpp codegen_test.wxui

    - name: Configure Codegen CMake
      run: |
        cd ${{github.workspace}}/codegen_test
        cmake -G "Visual Studio 17 2022" -B ${{github.workspace}}/codegen_test/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build codegen_test
      run: |
        cd ${{github.workspace}}/codegen_test
        cmake --build ${{github.workspace}}/codegen_test/build --config ${{env.BUILD_TYPE}} --target check_build


  buildUnix:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - run: mkdir ${{github.workspace}}/build

    - name: Install other dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake ninja-build libgtk-3-dev

    - name: Install GCC 11.4
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
        sudo apt-get update
        sudo apt-get install gcc-11 g++-11 -y
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 60 --slave /usr/bin/g++ g++ /usr/bin/g++-11
        gcc --version

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build wxUiEditor
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target wxUiEditor

    - name: Build Setup
      run: |
        cd build
        cpack -G DEB -C Release

    - name: Create Debian Artifact
      uses: actions/upload-artifact@v4
      with:
        name: DebianSetup
        path: |
          build/wxUiEditor-*-Linux.deb
