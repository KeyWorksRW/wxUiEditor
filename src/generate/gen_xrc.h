/////////////////////////////////////////////////////////////////////////////
// Purpose:   Generate XRC file
// Author:    Ralph Walden
// Copyright: Copyright (c) 2022-2025 KeyWorks Software (Ralph Walden)
// License:   Apache License -- see ../../LICENSE
/////////////////////////////////////////////////////////////////////////////

#pragma once

class Node;

#include "gen_results.h"  // Code generation file writing functions

#include "pugixml.hpp"

// Generate a string containing the XRC of the starting node and all of it's children.
//
// Use project node to generate an XRC string of the entire project.
std::string GenerateXrcStr(Node* node_start, size_t xrc_flags);

int GenerateXrcObject(Node* node, pugi::xml_node& object, size_t xrc_flags);
extern const char* txt_dlg_name;  // "_wxue_temp_dlg";

class XrcGenerator
{
public:
    XrcGenerator();

    // Add XRC Settings flags from the project
    void AddProjectFlags();

    // Add any additional XRC flags from the xrc namespace in pch.h
    void AddXrcFlags(size_t flags) { m_xrc_flags |= flags; }

    // Call this if you are going to write to a file so that the comments about being
    // generated by wxUiEditor will be added to the file.
    void AddGeneratedComments();

    // Add a project, form or any other node to the XRC document.
    void AddNode(Node* node_start);

    // Retrieve the current XRC document as a string.
    std::string getXmlString();

    // Note that if prop_combine_all_forms is set, this will generate a single XRC file. Otherwise,
    // it will generate a separate XRC file for each form.
    void GenerateAllXrcForms(GenResults& results, std::vector<tt_string>* pClassList = nullptr);

    void ClearDocument()
    {
        m_doc.reset();
        m_root = pugi::xml_node();
    }

protected:
    std::string getIndentationString();

private:
    pugi::xml_document m_doc;
    pugi::xml_node m_root { nullptr };
    size_t m_xrc_flags = 0;
};
