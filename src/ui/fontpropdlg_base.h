////////////////////////////////////////////////////////////////////////////////
// Code generated by wxUiEditor -- see https://github.com/KeyWorksRW/wxUiEditor/
//
// DO NOT EDIT THIS FILE! Your changes will be lost if it is re-generated!
////////////////////////////////////////////////////////////////////////////////

#pragma once

#include <wx/checkbox.h>
#include <wx/combobox.h>
#include <wx/dialog.h>
#include <wx/event.h>
#include <wx/gdicmn.h>
#include <wx/radiobut.h>
#include <wx/spinctrl.h>
#include <wx/stattext.h>

class FontPropDlgBase : public wxDialog
{
public:
    FontPropDlgBase() {}
    FontPropDlgBase(wxWindow *parent, wxWindowID id = wxID_ANY, const wxString& title = "Font Property",
        const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize,
        long style = wxDEFAULT_DIALOG_STYLE, const wxString &name = wxDialogNameStr)
    {
        Create(parent, id, title, pos, size, style, name);
    }

    bool Create(wxWindow *parent, wxWindowID id = wxID_ANY, const wxString& title = "Font Property",
        const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize,
        long style = wxDEFAULT_DIALOG_STYLE, const wxString &name = wxDialogNameStr);

protected:

    // Class member variables

    wxCheckBox* m_checkStrikethrough;
    wxCheckBox* m_checkUnderlined;
    wxComboBox* m_comboFacenames;
    wxComboBox* m_comboFamily;
    wxComboBox* m_comboFonts;
    wxComboBox* m_comboStyles;
    wxComboBox* m_comboWeight;
    wxRadioButton* m_radioCustom;
    wxRadioButton* m_radioSystem;
    wxSpinCtrlDouble* m_spinCtrlPointSIze;
    wxSpinCtrlDouble* m_spinCtrlSystem;
    wxStaticText* m_staticCustomSample;
    wxStaticText* m_staticSystemSample;
    wxStaticText* m_staticText;

    // Virtual event handlers -- override them in your derived class

    virtual void OnCustomRadio(wxCommandEvent& event) { event.Skip(); }
    virtual void OnFacename(wxCommandEvent& event) { event.Skip(); }
    virtual void OnFamily(wxCommandEvent& event) { event.Skip(); }
    virtual void OnPointSize(wxSpinDoubleEvent& event) { event.Skip(); }
    virtual void OnStrikeThrough(wxCommandEvent& event) { event.Skip(); }
    virtual void OnStyle(wxCommandEvent& event) { event.Skip(); }
    virtual void OnSysFont(wxCommandEvent& event) { event.Skip(); }
    virtual void OnSysPointSize(wxSpinDoubleEvent& event) { event.Skip(); }
    virtual void OnSystemRadio(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUnderlined(wxCommandEvent& event) { event.Skip(); }
    virtual void OnWeight(wxCommandEvent& event) { event.Skip(); }
};
